-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity extractEFrames_accel is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    in_ptr_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    in_ptr_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    in_ptr_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    in_ptr_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_ptr_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_ptr_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in_ptr_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    lef_ptr_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    lef_ptr_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    lef_ptr_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    lef_ptr_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    lef_ptr_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    lef_ptr_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    lef_ptr_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    sef_ptr_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    sef_ptr_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    sef_ptr_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    sef_ptr_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    sef_ptr_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    sef_ptr_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    sef_ptr_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    in_ptr_TVALID : IN STD_LOGIC;
    in_ptr_TREADY : OUT STD_LOGIC;
    lef_ptr_TVALID : OUT STD_LOGIC;
    lef_ptr_TREADY : IN STD_LOGIC;
    sef_ptr_TVALID : OUT STD_LOGIC;
    sef_ptr_TREADY : IN STD_LOGIC );
end;


architecture behav of extractEFrames_accel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "extractEFrames_accel_extractEFrames_accel,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg676-2,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.440375,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=2175,HLS_SYN_LUT=3678,HLS_VERSION=2022_1}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal height : STD_LOGIC_VECTOR (15 downto 0);
    signal width : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal Block_entry5_proc_U0_ap_start : STD_LOGIC;
    signal Block_entry5_proc_U0_ap_done : STD_LOGIC;
    signal Block_entry5_proc_U0_ap_continue : STD_LOGIC;
    signal Block_entry5_proc_U0_ap_idle : STD_LOGIC;
    signal Block_entry5_proc_U0_ap_ready : STD_LOGIC;
    signal Block_entry5_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (12 downto 0);
    signal Block_entry5_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_entry5_proc_U0_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_entry5_proc_U0_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_entry5_proc_U0_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_entry5_proc_U0_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_channel_done_LEF_Img_rows_c16_channel : STD_LOGIC;
    signal LEF_Img_rows_c16_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_LEF_Img_rows_c16_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_LEF_Img_rows_c16_channel : STD_LOGIC;
    signal ap_channel_done_InImg_cols_c15_channel : STD_LOGIC;
    signal InImg_cols_c15_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_InImg_cols_c15_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_InImg_cols_c15_channel : STD_LOGIC;
    signal ap_channel_done_SEF_Img_cols_channel : STD_LOGIC;
    signal SEF_Img_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_SEF_Img_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_SEF_Img_cols_channel : STD_LOGIC;
    signal ap_channel_done_SEF_Img_rows_channel : STD_LOGIC;
    signal SEF_Img_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_SEF_Img_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_SEF_Img_rows_channel : STD_LOGIC;
    signal ap_channel_done_LEF_Img_cols_channel : STD_LOGIC;
    signal LEF_Img_cols_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_LEF_Img_cols_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_LEF_Img_cols_channel : STD_LOGIC;
    signal ap_channel_done_InImg_rows_channel : STD_LOGIC;
    signal InImg_rows_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_InImg_rows_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_InImg_rows_channel : STD_LOGIC;
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_start : STD_LOGIC;
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_done : STD_LOGIC;
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_continue : STD_LOGIC;
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_idle : STD_LOGIC;
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_ready : STD_LOGIC;
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_in_ptr_TREADY : STD_LOGIC;
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_data156_din : STD_LOGIC_VECTOR (15 downto 0);
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_data156_write : STD_LOGIC;
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_cols_c_din : STD_LOGIC_VECTOR (11 downto 0);
    signal AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_cols_c_write : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_start : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_done : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_continue : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_idle : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_ready : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_p_hdrSrc_cols_read : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_InImg_data156_read : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_data157_din : STD_LOGIC_VECTOR (15 downto 0);
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_data157_write : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_SEF_Img_data158_din : STD_LOGIC_VECTOR (15 downto 0);
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_SEF_Img_data158_write : STD_LOGIC;
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_rows_c_din : STD_LOGIC_VECTOR (11 downto 0);
    signal extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_rows_c_write : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_start : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_done : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_continue : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_idle : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_ready : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_gray_mat_rows_read : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_LEF_Img_data157_read : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TVALID : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TKEEP : STD_LOGIC_VECTOR (1 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_start : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_done : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_continue : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_idle : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_ready : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_SEF_Img_data158_read : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TVALID : STD_LOGIC;
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TKEEP : STD_LOGIC_VECTOR (1 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal InImg_rows_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal InImg_rows_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal InImg_rows_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal InImg_rows_channel_empty_n : STD_LOGIC;
    signal LEF_Img_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal LEF_Img_cols_channel_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal LEF_Img_cols_channel_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal LEF_Img_cols_channel_empty_n : STD_LOGIC;
    signal SEF_Img_rows_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal SEF_Img_rows_channel_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal SEF_Img_rows_channel_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal SEF_Img_rows_channel_empty_n : STD_LOGIC;
    signal SEF_Img_cols_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal SEF_Img_cols_channel_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal SEF_Img_cols_channel_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal SEF_Img_cols_channel_empty_n : STD_LOGIC;
    signal InImg_cols_c15_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal InImg_cols_c15_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal InImg_cols_c15_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal InImg_cols_c15_channel_empty_n : STD_LOGIC;
    signal LEF_Img_rows_c16_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal LEF_Img_rows_c16_channel_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal LEF_Img_rows_c16_channel_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal LEF_Img_rows_c16_channel_empty_n : STD_LOGIC;
    signal InImg_data_full_n : STD_LOGIC;
    signal InImg_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal InImg_data_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal InImg_data_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal InImg_data_empty_n : STD_LOGIC;
    signal InImg_cols_c_full_n : STD_LOGIC;
    signal InImg_cols_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal InImg_cols_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal InImg_cols_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal InImg_cols_c_empty_n : STD_LOGIC;
    signal LEF_Img_data_full_n : STD_LOGIC;
    signal LEF_Img_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal LEF_Img_data_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal LEF_Img_data_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal LEF_Img_data_empty_n : STD_LOGIC;
    signal SEF_Img_data_full_n : STD_LOGIC;
    signal SEF_Img_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal SEF_Img_data_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal SEF_Img_data_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal SEF_Img_data_empty_n : STD_LOGIC;
    signal LEF_Img_rows_c_full_n : STD_LOGIC;
    signal LEF_Img_rows_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal LEF_Img_rows_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal LEF_Img_rows_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal LEF_Img_rows_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component extractEFrames_accel_Block_entry5_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        height : IN STD_LOGIC_VECTOR (15 downto 0);
        width : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component extractEFrames_accel_AXIVideo2BayerMat_0_4320_3848_2_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_ptr_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        in_ptr_TVALID : IN STD_LOGIC;
        in_ptr_TREADY : OUT STD_LOGIC;
        in_ptr_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
        in_ptr_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        in_ptr_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_ptr_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_ptr_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        in_ptr_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        InImg_data156_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        InImg_data156_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        InImg_data156_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        InImg_data156_full_n : IN STD_LOGIC;
        InImg_data156_write : OUT STD_LOGIC;
        InImg_cols_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        InImg_cols_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        InImg_cols_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        InImg_cols_c_full_n : IN STD_LOGIC;
        InImg_cols_c_write : OUT STD_LOGIC );
    end component;


    component extractEFrames_accel_extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_hdrSrc_cols_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_hdrSrc_cols_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_hdrSrc_cols_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_hdrSrc_cols_empty_n : IN STD_LOGIC;
        p_hdrSrc_cols_read : OUT STD_LOGIC;
        InImg_data156_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        InImg_data156_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        InImg_data156_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        InImg_data156_empty_n : IN STD_LOGIC;
        InImg_data156_read : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        LEF_Img_data157_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        LEF_Img_data157_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        LEF_Img_data157_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        LEF_Img_data157_full_n : IN STD_LOGIC;
        LEF_Img_data157_write : OUT STD_LOGIC;
        SEF_Img_data158_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        SEF_Img_data158_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        SEF_Img_data158_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        SEF_Img_data158_full_n : IN STD_LOGIC;
        SEF_Img_data158_write : OUT STD_LOGIC;
        LEF_Img_rows_c_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        LEF_Img_rows_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        LEF_Img_rows_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        LEF_Img_rows_c_full_n : IN STD_LOGIC;
        LEF_Img_rows_c_write : OUT STD_LOGIC );
    end component;


    component extractEFrames_accel_GRAYMat2AXIvideo_0_2160_3840_2_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gray_mat_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        gray_mat_rows_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gray_mat_rows_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gray_mat_rows_empty_n : IN STD_LOGIC;
        gray_mat_rows_read : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        LEF_Img_data157_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        LEF_Img_data157_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        LEF_Img_data157_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        LEF_Img_data157_empty_n : IN STD_LOGIC;
        LEF_Img_data157_read : OUT STD_LOGIC;
        lef_ptr_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        lef_ptr_TVALID : OUT STD_LOGIC;
        lef_ptr_TREADY : IN STD_LOGIC;
        lef_ptr_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
        lef_ptr_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        lef_ptr_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        lef_ptr_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        lef_ptr_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        lef_ptr_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component extractEFrames_accel_GRAYMat2AXIvideo_0_2160_3840_2_3_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (11 downto 0);
        SEF_Img_data158_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        SEF_Img_data158_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        SEF_Img_data158_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        SEF_Img_data158_empty_n : IN STD_LOGIC;
        SEF_Img_data158_read : OUT STD_LOGIC;
        sef_ptr_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        sef_ptr_TVALID : OUT STD_LOGIC;
        sef_ptr_TREADY : IN STD_LOGIC;
        sef_ptr_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
        sef_ptr_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        sef_ptr_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        sef_ptr_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        sef_ptr_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        sef_ptr_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component extractEFrames_accel_fifo_w13_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component extractEFrames_accel_fifo_w12_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component extractEFrames_accel_fifo_w12_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component extractEFrames_accel_fifo_w12_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component extractEFrames_accel_fifo_w16_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component extractEFrames_accel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        height : OUT STD_LOGIC_VECTOR (15 downto 0);
        width : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component extractEFrames_accel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        height => height,
        width => width,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    Block_entry5_proc_U0 : component extractEFrames_accel_Block_entry5_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_entry5_proc_U0_ap_start,
        ap_done => Block_entry5_proc_U0_ap_done,
        ap_continue => Block_entry5_proc_U0_ap_continue,
        ap_idle => Block_entry5_proc_U0_ap_idle,
        ap_ready => Block_entry5_proc_U0_ap_ready,
        height => height,
        width => width,
        ap_return_0 => Block_entry5_proc_U0_ap_return_0,
        ap_return_1 => Block_entry5_proc_U0_ap_return_1,
        ap_return_2 => Block_entry5_proc_U0_ap_return_2,
        ap_return_3 => Block_entry5_proc_U0_ap_return_3,
        ap_return_4 => Block_entry5_proc_U0_ap_return_4,
        ap_return_5 => Block_entry5_proc_U0_ap_return_5);

    AXIVideo2BayerMat_0_4320_3848_2_3_U0 : component extractEFrames_accel_AXIVideo2BayerMat_0_4320_3848_2_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_start,
        ap_done => AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_done,
        ap_continue => AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_continue,
        ap_idle => AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_idle,
        ap_ready => AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_ready,
        in_ptr_TDATA => in_ptr_TDATA,
        in_ptr_TVALID => in_ptr_TVALID,
        in_ptr_TREADY => AXIVideo2BayerMat_0_4320_3848_2_3_U0_in_ptr_TREADY,
        in_ptr_TKEEP => in_ptr_TKEEP,
        in_ptr_TSTRB => in_ptr_TSTRB,
        in_ptr_TUSER => in_ptr_TUSER,
        in_ptr_TLAST => in_ptr_TLAST,
        in_ptr_TID => in_ptr_TID,
        in_ptr_TDEST => in_ptr_TDEST,
        p_read => InImg_rows_channel_dout,
        p_read1 => InImg_cols_c15_channel_dout,
        InImg_data156_din => AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_data156_din,
        InImg_data156_num_data_valid => InImg_data_num_data_valid,
        InImg_data156_fifo_cap => InImg_data_fifo_cap,
        InImg_data156_full_n => InImg_data_full_n,
        InImg_data156_write => AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_data156_write,
        InImg_cols_c_din => AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_cols_c_din,
        InImg_cols_c_num_data_valid => InImg_cols_c_num_data_valid,
        InImg_cols_c_fifo_cap => InImg_cols_c_fifo_cap,
        InImg_cols_c_full_n => InImg_cols_c_full_n,
        InImg_cols_c_write => AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_cols_c_write);

    extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0 : component extractEFrames_accel_extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_start,
        ap_done => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_done,
        ap_continue => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_continue,
        ap_idle => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_idle,
        ap_ready => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_ready,
        p_hdrSrc_cols_dout => InImg_cols_c_dout,
        p_hdrSrc_cols_num_data_valid => InImg_cols_c_num_data_valid,
        p_hdrSrc_cols_fifo_cap => InImg_cols_c_fifo_cap,
        p_hdrSrc_cols_empty_n => InImg_cols_c_empty_n,
        p_hdrSrc_cols_read => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_p_hdrSrc_cols_read,
        InImg_data156_dout => InImg_data_dout,
        InImg_data156_num_data_valid => InImg_data_num_data_valid,
        InImg_data156_fifo_cap => InImg_data_fifo_cap,
        InImg_data156_empty_n => InImg_data_empty_n,
        InImg_data156_read => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_InImg_data156_read,
        p_read => LEF_Img_rows_c16_channel_dout,
        LEF_Img_data157_din => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_data157_din,
        LEF_Img_data157_num_data_valid => LEF_Img_data_num_data_valid,
        LEF_Img_data157_fifo_cap => LEF_Img_data_fifo_cap,
        LEF_Img_data157_full_n => LEF_Img_data_full_n,
        LEF_Img_data157_write => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_data157_write,
        SEF_Img_data158_din => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_SEF_Img_data158_din,
        SEF_Img_data158_num_data_valid => SEF_Img_data_num_data_valid,
        SEF_Img_data158_fifo_cap => SEF_Img_data_fifo_cap,
        SEF_Img_data158_full_n => SEF_Img_data_full_n,
        SEF_Img_data158_write => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_SEF_Img_data158_write,
        LEF_Img_rows_c_din => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_rows_c_din,
        LEF_Img_rows_c_num_data_valid => LEF_Img_rows_c_num_data_valid,
        LEF_Img_rows_c_fifo_cap => LEF_Img_rows_c_fifo_cap,
        LEF_Img_rows_c_full_n => LEF_Img_rows_c_full_n,
        LEF_Img_rows_c_write => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_rows_c_write);

    GRAYMat2AXIvideo_0_2160_3840_2_3_U0 : component extractEFrames_accel_GRAYMat2AXIvideo_0_2160_3840_2_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_start,
        ap_done => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_done,
        ap_continue => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_continue,
        ap_idle => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_idle,
        ap_ready => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_ready,
        gray_mat_rows_dout => LEF_Img_rows_c_dout,
        gray_mat_rows_num_data_valid => LEF_Img_rows_c_num_data_valid,
        gray_mat_rows_fifo_cap => LEF_Img_rows_c_fifo_cap,
        gray_mat_rows_empty_n => LEF_Img_rows_c_empty_n,
        gray_mat_rows_read => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_gray_mat_rows_read,
        p_read => LEF_Img_cols_channel_dout,
        LEF_Img_data157_dout => LEF_Img_data_dout,
        LEF_Img_data157_num_data_valid => LEF_Img_data_num_data_valid,
        LEF_Img_data157_fifo_cap => LEF_Img_data_fifo_cap,
        LEF_Img_data157_empty_n => LEF_Img_data_empty_n,
        LEF_Img_data157_read => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_LEF_Img_data157_read,
        lef_ptr_TDATA => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TDATA,
        lef_ptr_TVALID => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TVALID,
        lef_ptr_TREADY => lef_ptr_TREADY,
        lef_ptr_TKEEP => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TKEEP,
        lef_ptr_TSTRB => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TSTRB,
        lef_ptr_TUSER => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TUSER,
        lef_ptr_TLAST => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TLAST,
        lef_ptr_TID => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TID,
        lef_ptr_TDEST => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TDEST);

    GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0 : component extractEFrames_accel_GRAYMat2AXIvideo_0_2160_3840_2_3_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_start,
        ap_done => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_done,
        ap_continue => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_continue,
        ap_idle => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_idle,
        ap_ready => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_ready,
        p_read => SEF_Img_rows_channel_dout,
        p_read1 => SEF_Img_cols_channel_dout,
        SEF_Img_data158_dout => SEF_Img_data_dout,
        SEF_Img_data158_num_data_valid => SEF_Img_data_num_data_valid,
        SEF_Img_data158_fifo_cap => SEF_Img_data_fifo_cap,
        SEF_Img_data158_empty_n => SEF_Img_data_empty_n,
        SEF_Img_data158_read => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_SEF_Img_data158_read,
        sef_ptr_TDATA => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TDATA,
        sef_ptr_TVALID => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TVALID,
        sef_ptr_TREADY => sef_ptr_TREADY,
        sef_ptr_TKEEP => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TKEEP,
        sef_ptr_TSTRB => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TSTRB,
        sef_ptr_TUSER => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TUSER,
        sef_ptr_TLAST => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TLAST,
        sef_ptr_TID => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TID,
        sef_ptr_TDEST => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TDEST);

    InImg_rows_channel_U : component extractEFrames_accel_fifo_w13_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry5_proc_U0_ap_return_0,
        if_full_n => InImg_rows_channel_full_n,
        if_write => ap_channel_done_InImg_rows_channel,
        if_dout => InImg_rows_channel_dout,
        if_num_data_valid => InImg_rows_channel_num_data_valid,
        if_fifo_cap => InImg_rows_channel_fifo_cap,
        if_empty_n => InImg_rows_channel_empty_n,
        if_read => AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_ready);

    LEF_Img_cols_channel_U : component extractEFrames_accel_fifo_w12_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry5_proc_U0_ap_return_1,
        if_full_n => LEF_Img_cols_channel_full_n,
        if_write => ap_channel_done_LEF_Img_cols_channel,
        if_dout => LEF_Img_cols_channel_dout,
        if_num_data_valid => LEF_Img_cols_channel_num_data_valid,
        if_fifo_cap => LEF_Img_cols_channel_fifo_cap,
        if_empty_n => LEF_Img_cols_channel_empty_n,
        if_read => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_ready);

    SEF_Img_rows_channel_U : component extractEFrames_accel_fifo_w12_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry5_proc_U0_ap_return_2,
        if_full_n => SEF_Img_rows_channel_full_n,
        if_write => ap_channel_done_SEF_Img_rows_channel,
        if_dout => SEF_Img_rows_channel_dout,
        if_num_data_valid => SEF_Img_rows_channel_num_data_valid,
        if_fifo_cap => SEF_Img_rows_channel_fifo_cap,
        if_empty_n => SEF_Img_rows_channel_empty_n,
        if_read => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_ready);

    SEF_Img_cols_channel_U : component extractEFrames_accel_fifo_w12_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry5_proc_U0_ap_return_3,
        if_full_n => SEF_Img_cols_channel_full_n,
        if_write => ap_channel_done_SEF_Img_cols_channel,
        if_dout => SEF_Img_cols_channel_dout,
        if_num_data_valid => SEF_Img_cols_channel_num_data_valid,
        if_fifo_cap => SEF_Img_cols_channel_fifo_cap,
        if_empty_n => SEF_Img_cols_channel_empty_n,
        if_read => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_ready);

    InImg_cols_c15_channel_U : component extractEFrames_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry5_proc_U0_ap_return_4,
        if_full_n => InImg_cols_c15_channel_full_n,
        if_write => ap_channel_done_InImg_cols_c15_channel,
        if_dout => InImg_cols_c15_channel_dout,
        if_num_data_valid => InImg_cols_c15_channel_num_data_valid,
        if_fifo_cap => InImg_cols_c15_channel_fifo_cap,
        if_empty_n => InImg_cols_c15_channel_empty_n,
        if_read => AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_ready);

    LEF_Img_rows_c16_channel_U : component extractEFrames_accel_fifo_w12_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry5_proc_U0_ap_return_5,
        if_full_n => LEF_Img_rows_c16_channel_full_n,
        if_write => ap_channel_done_LEF_Img_rows_c16_channel,
        if_dout => LEF_Img_rows_c16_channel_dout,
        if_num_data_valid => LEF_Img_rows_c16_channel_num_data_valid,
        if_fifo_cap => LEF_Img_rows_c16_channel_fifo_cap,
        if_empty_n => LEF_Img_rows_c16_channel_empty_n,
        if_read => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_ready);

    InImg_data_U : component extractEFrames_accel_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_data156_din,
        if_full_n => InImg_data_full_n,
        if_write => AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_data156_write,
        if_dout => InImg_data_dout,
        if_num_data_valid => InImg_data_num_data_valid,
        if_fifo_cap => InImg_data_fifo_cap,
        if_empty_n => InImg_data_empty_n,
        if_read => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_InImg_data156_read);

    InImg_cols_c_U : component extractEFrames_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_cols_c_din,
        if_full_n => InImg_cols_c_full_n,
        if_write => AXIVideo2BayerMat_0_4320_3848_2_3_U0_InImg_cols_c_write,
        if_dout => InImg_cols_c_dout,
        if_num_data_valid => InImg_cols_c_num_data_valid,
        if_fifo_cap => InImg_cols_c_fifo_cap,
        if_empty_n => InImg_cols_c_empty_n,
        if_read => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_p_hdrSrc_cols_read);

    LEF_Img_data_U : component extractEFrames_accel_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_data157_din,
        if_full_n => LEF_Img_data_full_n,
        if_write => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_data157_write,
        if_dout => LEF_Img_data_dout,
        if_num_data_valid => LEF_Img_data_num_data_valid,
        if_fifo_cap => LEF_Img_data_fifo_cap,
        if_empty_n => LEF_Img_data_empty_n,
        if_read => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_LEF_Img_data157_read);

    SEF_Img_data_U : component extractEFrames_accel_fifo_w16_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_SEF_Img_data158_din,
        if_full_n => SEF_Img_data_full_n,
        if_write => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_SEF_Img_data158_write,
        if_dout => SEF_Img_data_dout,
        if_num_data_valid => SEF_Img_data_num_data_valid,
        if_fifo_cap => SEF_Img_data_fifo_cap,
        if_empty_n => SEF_Img_data_empty_n,
        if_read => GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_SEF_Img_data158_read);

    LEF_Img_rows_c_U : component extractEFrames_accel_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_rows_c_din,
        if_full_n => LEF_Img_rows_c_full_n,
        if_write => extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_LEF_Img_rows_c_write,
        if_dout => LEF_Img_rows_c_dout,
        if_num_data_valid => LEF_Img_rows_c_num_data_valid,
        if_fifo_cap => LEF_Img_rows_c_fifo_cap,
        if_empty_n => LEF_Img_rows_c_empty_n,
        if_read => GRAYMat2AXIvideo_0_2160_3840_2_3_U0_gray_mat_rows_read);





    ap_sync_reg_channel_write_InImg_cols_c15_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_InImg_cols_c15_channel <= ap_const_logic_0;
            else
                if (((Block_entry5_proc_U0_ap_done and Block_entry5_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_InImg_cols_c15_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_InImg_cols_c15_channel <= ap_sync_channel_write_InImg_cols_c15_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_InImg_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_InImg_rows_channel <= ap_const_logic_0;
            else
                if (((Block_entry5_proc_U0_ap_done and Block_entry5_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_InImg_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_InImg_rows_channel <= ap_sync_channel_write_InImg_rows_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_LEF_Img_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_LEF_Img_cols_channel <= ap_const_logic_0;
            else
                if (((Block_entry5_proc_U0_ap_done and Block_entry5_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_LEF_Img_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_LEF_Img_cols_channel <= ap_sync_channel_write_LEF_Img_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_LEF_Img_rows_c16_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_LEF_Img_rows_c16_channel <= ap_const_logic_0;
            else
                if (((Block_entry5_proc_U0_ap_done and Block_entry5_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_LEF_Img_rows_c16_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_LEF_Img_rows_c16_channel <= ap_sync_channel_write_LEF_Img_rows_c16_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_SEF_Img_cols_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_SEF_Img_cols_channel <= ap_const_logic_0;
            else
                if (((Block_entry5_proc_U0_ap_done and Block_entry5_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_SEF_Img_cols_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_SEF_Img_cols_channel <= ap_sync_channel_write_SEF_Img_cols_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_SEF_Img_rows_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_SEF_Img_rows_channel <= ap_const_logic_0;
            else
                if (((Block_entry5_proc_U0_ap_done and Block_entry5_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_SEF_Img_rows_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_SEF_Img_rows_channel <= ap_sync_channel_write_SEF_Img_rows_channel;
                end if; 
            end if;
        end if;
    end process;

    AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_continue <= ap_const_logic_1;
    AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_start <= (InImg_rows_channel_empty_n and InImg_cols_c15_channel_empty_n);
    Block_entry5_proc_U0_ap_continue <= (ap_sync_channel_write_SEF_Img_rows_channel and ap_sync_channel_write_SEF_Img_cols_channel and ap_sync_channel_write_LEF_Img_rows_c16_channel and ap_sync_channel_write_LEF_Img_cols_channel and ap_sync_channel_write_InImg_rows_channel and ap_sync_channel_write_InImg_cols_c15_channel);
    Block_entry5_proc_U0_ap_start <= ap_start;
    GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_continue <= ap_sync_done;
    GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_start <= (SEF_Img_rows_channel_empty_n and SEF_Img_cols_channel_empty_n);
    GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_continue <= ap_sync_done;
    GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_start <= LEF_Img_cols_channel_empty_n;
    ap_channel_done_InImg_cols_c15_channel <= ((ap_sync_reg_channel_write_InImg_cols_c15_channel xor ap_const_logic_1) and Block_entry5_proc_U0_ap_done);
    ap_channel_done_InImg_rows_channel <= ((ap_sync_reg_channel_write_InImg_rows_channel xor ap_const_logic_1) and Block_entry5_proc_U0_ap_done);
    ap_channel_done_LEF_Img_cols_channel <= ((ap_sync_reg_channel_write_LEF_Img_cols_channel xor ap_const_logic_1) and Block_entry5_proc_U0_ap_done);
    ap_channel_done_LEF_Img_rows_c16_channel <= ((ap_sync_reg_channel_write_LEF_Img_rows_c16_channel xor ap_const_logic_1) and Block_entry5_proc_U0_ap_done);
    ap_channel_done_SEF_Img_cols_channel <= ((ap_sync_reg_channel_write_SEF_Img_cols_channel xor ap_const_logic_1) and Block_entry5_proc_U0_ap_done);
    ap_channel_done_SEF_Img_rows_channel <= ((ap_sync_reg_channel_write_SEF_Img_rows_channel xor ap_const_logic_1) and Block_entry5_proc_U0_ap_done);
    ap_done <= ap_sync_done;
    ap_idle <= (extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_idle and (ap_const_logic_1 xor LEF_Img_rows_c16_channel_empty_n) and (ap_const_logic_1 xor InImg_cols_c15_channel_empty_n) and (ap_const_logic_1 xor SEF_Img_cols_channel_empty_n) and (ap_const_logic_1 xor SEF_Img_rows_channel_empty_n) and (ap_const_logic_1 xor LEF_Img_cols_channel_empty_n) and (ap_const_logic_1 xor InImg_rows_channel_empty_n) and GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_idle and GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_idle and Block_entry5_proc_U0_ap_idle and AXIVideo2BayerMat_0_4320_3848_2_3_U0_ap_idle);
    ap_ready <= Block_entry5_proc_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_channel_write_InImg_cols_c15_channel <= ((ap_channel_done_InImg_cols_c15_channel and InImg_cols_c15_channel_full_n) or ap_sync_reg_channel_write_InImg_cols_c15_channel);
    ap_sync_channel_write_InImg_rows_channel <= ((ap_channel_done_InImg_rows_channel and InImg_rows_channel_full_n) or ap_sync_reg_channel_write_InImg_rows_channel);
    ap_sync_channel_write_LEF_Img_cols_channel <= ((ap_channel_done_LEF_Img_cols_channel and LEF_Img_cols_channel_full_n) or ap_sync_reg_channel_write_LEF_Img_cols_channel);
    ap_sync_channel_write_LEF_Img_rows_c16_channel <= ((ap_channel_done_LEF_Img_rows_c16_channel and LEF_Img_rows_c16_channel_full_n) or ap_sync_reg_channel_write_LEF_Img_rows_c16_channel);
    ap_sync_channel_write_SEF_Img_cols_channel <= ((ap_channel_done_SEF_Img_cols_channel and SEF_Img_cols_channel_full_n) or ap_sync_reg_channel_write_SEF_Img_cols_channel);
    ap_sync_channel_write_SEF_Img_rows_channel <= ((ap_channel_done_SEF_Img_rows_channel and SEF_Img_rows_channel_full_n) or ap_sync_reg_channel_write_SEF_Img_rows_channel);
    ap_sync_done <= (GRAYMat2AXIvideo_0_2160_3840_2_3_U0_ap_done and GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_ap_done);
    extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_continue <= ap_const_logic_1;
    extractExposureFrames_0_8_8_2160_3840_2_3_3_3_0_U0_ap_start <= LEF_Img_rows_c16_channel_empty_n;
    in_ptr_TREADY <= AXIVideo2BayerMat_0_4320_3848_2_3_U0_in_ptr_TREADY;
    lef_ptr_TDATA <= GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TDATA;
    lef_ptr_TDEST <= GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TDEST;
    lef_ptr_TID <= GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TID;
    lef_ptr_TKEEP <= GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TKEEP;
    lef_ptr_TLAST <= GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TLAST;
    lef_ptr_TSTRB <= GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TSTRB;
    lef_ptr_TUSER <= GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TUSER;
    lef_ptr_TVALID <= GRAYMat2AXIvideo_0_2160_3840_2_3_U0_lef_ptr_TVALID;
    sef_ptr_TDATA <= GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TDATA;
    sef_ptr_TDEST <= GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TDEST;
    sef_ptr_TID <= GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TID;
    sef_ptr_TKEEP <= GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TKEEP;
    sef_ptr_TLAST <= GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TLAST;
    sef_ptr_TSTRB <= GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TSTRB;
    sef_ptr_TUSER <= GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TUSER;
    sef_ptr_TVALID <= GRAYMat2AXIvideo_0_2160_3840_2_3_1_U0_sef_ptr_TVALID;
end behav;
