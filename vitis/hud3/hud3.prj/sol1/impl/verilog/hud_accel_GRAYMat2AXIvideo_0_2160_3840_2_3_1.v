// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hud_accel_GRAYMat2AXIvideo_0_2160_3840_2_3_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        SEF_Img_data158_dout,
        SEF_Img_data158_num_data_valid,
        SEF_Img_data158_fifo_cap,
        SEF_Img_data158_empty_n,
        SEF_Img_data158_read,
        m_axis_video_sef_TDATA,
        m_axis_video_sef_TVALID,
        m_axis_video_sef_TREADY,
        m_axis_video_sef_TKEEP,
        m_axis_video_sef_TSTRB,
        m_axis_video_sef_TUSER,
        m_axis_video_sef_TLAST,
        m_axis_video_sef_TID,
        m_axis_video_sef_TDEST
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] p_read;
input  [11:0] p_read1;
input  [15:0] SEF_Img_data158_dout;
input  [2:0] SEF_Img_data158_num_data_valid;
input  [2:0] SEF_Img_data158_fifo_cap;
input   SEF_Img_data158_empty_n;
output   SEF_Img_data158_read;
output  [15:0] m_axis_video_sef_TDATA;
output   m_axis_video_sef_TVALID;
input   m_axis_video_sef_TREADY;
output  [1:0] m_axis_video_sef_TKEEP;
output  [1:0] m_axis_video_sef_TSTRB;
output  [0:0] m_axis_video_sef_TUSER;
output  [0:0] m_axis_video_sef_TLAST;
output  [0:0] m_axis_video_sef_TID;
output  [0:0] m_axis_video_sef_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg SEF_Img_data158_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] cols_reg_186;
wire    ap_CS_fsm_state2;
wire   [11:0] sub_fu_134_p2;
reg   [11:0] sub_reg_198;
wire   [0:0] cmp45_fu_140_p2;
reg   [0:0] cmp45_reg_203;
wire   [11:0] i_2_fu_153_p2;
reg   [11:0] i_2_reg_210;
wire    ap_CS_fsm_state3;
wire    grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start;
wire    grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_done;
wire    grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_idle;
wire    grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_ready;
wire    grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_SEF_Img_data158_read;
wire    grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TREADY;
wire   [15:0] grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TDATA;
wire    grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID;
wire   [1:0] grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TKEEP;
wire   [1:0] grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TSTRB;
wire   [0:0] grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TUSER;
wire   [0:0] grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TLAST;
wire   [0:0] grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TID;
wire   [0:0] grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TDEST;
reg    grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg   [11:0] i_fu_68;
reg    ap_block_state5_on_subcall_done;
reg    ap_block_state1;
reg   [0:0] sof_fu_72;
wire   [11:0] zext_ln109_fu_131_p1;
wire   [0:0] icmp_ln121_fu_148_p2;
wire    ap_CS_fsm_state6;
wire    regslice_both_m_axis_video_sef_V_data_V_U_apdone_blk;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    m_axis_video_sef_TVALID_int_regslice;
wire    m_axis_video_sef_TREADY_int_regslice;
wire    regslice_both_m_axis_video_sef_V_data_V_U_vld_out;
wire    regslice_both_m_axis_video_sef_V_keep_V_U_apdone_blk;
wire    regslice_both_m_axis_video_sef_V_keep_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_sef_V_keep_V_U_vld_out;
wire    regslice_both_m_axis_video_sef_V_strb_V_U_apdone_blk;
wire    regslice_both_m_axis_video_sef_V_strb_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_sef_V_strb_V_U_vld_out;
wire    regslice_both_m_axis_video_sef_V_user_V_U_apdone_blk;
wire    regslice_both_m_axis_video_sef_V_user_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_sef_V_user_V_U_vld_out;
wire    regslice_both_m_axis_video_sef_V_last_V_U_apdone_blk;
wire    regslice_both_m_axis_video_sef_V_last_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_sef_V_last_V_U_vld_out;
wire    regslice_both_m_axis_video_sef_V_id_V_U_apdone_blk;
wire    regslice_both_m_axis_video_sef_V_id_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_sef_V_id_V_U_vld_out;
wire    regslice_both_m_axis_video_sef_V_dest_V_U_apdone_blk;
wire    regslice_both_m_axis_video_sef_V_dest_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_sef_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start_reg = 1'b0;
end

hud_accel_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start),
    .ap_done(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_done),
    .ap_idle(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_idle),
    .ap_ready(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_ready),
    .SEF_Img_data158_dout(SEF_Img_data158_dout),
    .SEF_Img_data158_num_data_valid(3'd0),
    .SEF_Img_data158_fifo_cap(3'd0),
    .SEF_Img_data158_empty_n(SEF_Img_data158_empty_n),
    .SEF_Img_data158_read(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_SEF_Img_data158_read),
    .m_axis_video_sef_TREADY(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TREADY),
    .sof(sof_fu_72),
    .cols(cols_reg_186),
    .sub(sub_reg_198),
    .m_axis_video_sef_TDATA(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TDATA),
    .m_axis_video_sef_TVALID(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID),
    .m_axis_video_sef_TKEEP(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TKEEP),
    .m_axis_video_sef_TSTRB(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TSTRB),
    .m_axis_video_sef_TUSER(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TUSER),
    .m_axis_video_sef_TLAST(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TLAST),
    .m_axis_video_sef_TID(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TID),
    .m_axis_video_sef_TDEST(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TDEST)
);

hud_accel_regslice_both #(
    .DataWidth( 16 ))
regslice_both_m_axis_video_sef_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TDATA),
    .vld_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID),
    .ack_in(m_axis_video_sef_TREADY_int_regslice),
    .data_out(m_axis_video_sef_TDATA),
    .vld_out(regslice_both_m_axis_video_sef_V_data_V_U_vld_out),
    .ack_out(m_axis_video_sef_TREADY),
    .apdone_blk(regslice_both_m_axis_video_sef_V_data_V_U_apdone_blk)
);

hud_accel_regslice_both #(
    .DataWidth( 2 ))
regslice_both_m_axis_video_sef_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TKEEP),
    .vld_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID),
    .ack_in(regslice_both_m_axis_video_sef_V_keep_V_U_ack_in_dummy),
    .data_out(m_axis_video_sef_TKEEP),
    .vld_out(regslice_both_m_axis_video_sef_V_keep_V_U_vld_out),
    .ack_out(m_axis_video_sef_TREADY),
    .apdone_blk(regslice_both_m_axis_video_sef_V_keep_V_U_apdone_blk)
);

hud_accel_regslice_both #(
    .DataWidth( 2 ))
regslice_both_m_axis_video_sef_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TSTRB),
    .vld_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID),
    .ack_in(regslice_both_m_axis_video_sef_V_strb_V_U_ack_in_dummy),
    .data_out(m_axis_video_sef_TSTRB),
    .vld_out(regslice_both_m_axis_video_sef_V_strb_V_U_vld_out),
    .ack_out(m_axis_video_sef_TREADY),
    .apdone_blk(regslice_both_m_axis_video_sef_V_strb_V_U_apdone_blk)
);

hud_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_video_sef_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TUSER),
    .vld_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID),
    .ack_in(regslice_both_m_axis_video_sef_V_user_V_U_ack_in_dummy),
    .data_out(m_axis_video_sef_TUSER),
    .vld_out(regslice_both_m_axis_video_sef_V_user_V_U_vld_out),
    .ack_out(m_axis_video_sef_TREADY),
    .apdone_blk(regslice_both_m_axis_video_sef_V_user_V_U_apdone_blk)
);

hud_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_video_sef_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TLAST),
    .vld_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID),
    .ack_in(regslice_both_m_axis_video_sef_V_last_V_U_ack_in_dummy),
    .data_out(m_axis_video_sef_TLAST),
    .vld_out(regslice_both_m_axis_video_sef_V_last_V_U_vld_out),
    .ack_out(m_axis_video_sef_TREADY),
    .apdone_blk(regslice_both_m_axis_video_sef_V_last_V_U_apdone_blk)
);

hud_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_video_sef_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TID),
    .vld_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID),
    .ack_in(regslice_both_m_axis_video_sef_V_id_V_U_ack_in_dummy),
    .data_out(m_axis_video_sef_TID),
    .vld_out(regslice_both_m_axis_video_sef_V_id_V_U_vld_out),
    .ack_out(m_axis_video_sef_TREADY),
    .apdone_blk(regslice_both_m_axis_video_sef_V_id_V_U_apdone_blk)
);

hud_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_video_sef_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TDEST),
    .vld_in(grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID),
    .ack_in(regslice_both_m_axis_video_sef_V_dest_V_U_ack_in_dummy),
    .data_out(m_axis_video_sef_TDEST),
    .vld_out(regslice_both_m_axis_video_sef_V_dest_V_U_vld_out),
    .ack_out(m_axis_video_sef_TREADY),
    .apdone_blk(regslice_both_m_axis_video_sef_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (regslice_both_m_axis_video_sef_V_data_V_U_apdone_blk == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start_reg <= 1'b1;
        end else if ((grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_ready == 1'b1)) begin
            grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_68 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        i_fu_68 <= i_2_reg_210;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        sof_fu_72 <= 1'd1;
    end else if (((cmp45_reg_203 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        sof_fu_72 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cmp45_reg_203 <= cmp45_fu_140_p2;
        sub_reg_198 <= sub_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_reg_186 <= {{p_read1[11:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_2_reg_210 <= i_2_fu_153_p2;
    end
end

always @ (*) begin
    if (((cmp45_reg_203 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        SEF_Img_data158_read = grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_SEF_Img_data158_read;
    end else begin
        SEF_Img_data158_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state5_on_subcall_done)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_m_axis_video_sef_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (regslice_both_m_axis_video_sef_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (regslice_both_m_axis_video_sef_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((cmp45_reg_203 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln121_fu_148_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((cmp45_reg_203 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln121_fu_148_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (regslice_both_m_axis_video_sef_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state5_on_subcall_done = ((grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_done == 1'b0) & (cmp45_reg_203 == 1'd0));
end

assign cmp45_fu_140_p2 = ((cols_reg_186 == 11'd0) ? 1'b1 : 1'b0);

assign grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start = grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_ap_start_reg;

assign grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TREADY = (m_axis_video_sef_TREADY_int_regslice & ap_CS_fsm_state5);

assign i_2_fu_153_p2 = (i_fu_68 + 12'd1);

assign icmp_ln121_fu_148_p2 = ((i_fu_68 == p_read) ? 1'b1 : 1'b0);

assign m_axis_video_sef_TVALID = regslice_both_m_axis_video_sef_V_data_V_U_vld_out;

assign m_axis_video_sef_TVALID_int_regslice = grp_GRAYMat2AXIvideo_0_2160_3840_2_3_1_Pipeline_loop_col_mat2axi_fu_88_m_axis_video_sef_TVALID;

assign sub_fu_134_p2 = ($signed(zext_ln109_fu_131_p1) + $signed(12'd4095));

assign zext_ln109_fu_131_p1 = cols_reg_186;

endmodule //hud_accel_GRAYMat2AXIvideo_0_2160_3840_2_3_1
