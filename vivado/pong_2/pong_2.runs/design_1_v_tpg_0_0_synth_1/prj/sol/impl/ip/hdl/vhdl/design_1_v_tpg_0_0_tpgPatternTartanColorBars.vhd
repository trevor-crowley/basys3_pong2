-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_tpg_0_0_tpgPatternTartanColorBars is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    y : IN STD_LOGIC_VECTOR (15 downto 0);
    x : IN STD_LOGIC_VECTOR (15 downto 0);
    width : IN STD_LOGIC_VECTOR (13 downto 0);
    height : IN STD_LOGIC_VECTOR (13 downto 0);
    color : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of design_1_v_tpg_0_0_tpgPatternTartanColorBars is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_0_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv14_F : STD_LOGIC_VECTOR (13 downto 0) := "00000000001111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal vBarSel : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal yCount_V : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal hBarSel : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal xCount_V : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal tpgTartanBarArray_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tpgTartanBarArray_ce0 : STD_LOGIC;
    signal tpgTartanBarArray_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tpgBarSelRgb_r16_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tpgBarSelRgb_r16_ce0 : STD_LOGIC;
    signal tpgBarSelRgb_r16_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal tpgBarSelRgb_g14_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tpgBarSelRgb_g14_ce0 : STD_LOGIC;
    signal tpgBarSelRgb_g14_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal tpgBarSelRgb_b12_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tpgBarSelRgb_b12_ce0 : STD_LOGIC;
    signal tpgBarSelRgb_b12_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal tpgBarSelYuv_y22_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tpgBarSelYuv_y22_ce0 : STD_LOGIC;
    signal tpgBarSelYuv_y22_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tpgBarSelYuv_v20_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tpgBarSelYuv_v20_ce0 : STD_LOGIC;
    signal tpgBarSelYuv_v20_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tpgBarSelYuv_u18_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tpgBarSelYuv_u18_ce0 : STD_LOGIC;
    signal tpgBarSelYuv_u18_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmp65_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal and_ln1379_1_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1379_1_reg_557 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1379_1_reg_557_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vBarSel_loc_2_phi_fu_196_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_vBarSel_loc_2_reg_193 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1336_1_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1341_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1348_fu_321_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1336_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_hBarSel_loc_1_phi_fu_210_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_hBarSel_loc_1_reg_207 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1073_1_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1367_fu_397_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1374_fu_442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln1374_1_fu_465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln886_fu_334_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln887_fu_385_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln886_1_fu_410_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1328_fu_223_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln1_fu_229_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln1336_fu_257_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1329_fu_245_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_279_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1542_fu_289_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1073_fu_299_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_fu_293_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1073_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal barWidthMinSamples_fu_239_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln_fu_434_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1324_fu_219_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1379_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp88_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln259_fu_479_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_fu_487_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tpgBarSelRgb_r_load_cast_fu_475_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tpgBarSelRgb_b_load_cast_fu_483_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_V_fu_501_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_V_1_fu_494_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_V_2_fu_508_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_155 : BOOLEAN;
    signal ap_condition_170 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_tpg_0_0_tpgPatternTartanColorBars_tpgTartanBarArray_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_r_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_g_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_b_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternCheckerBoard_tpgBarSelYuv_y21_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternCheckerBoard_tpgBarSelYuv_v19_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternCheckerBoard_tpgBarSelYuv_u17_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    tpgTartanBarArray_U : component design_1_v_tpg_0_0_tpgPatternTartanColorBars_tpgTartanBarArray_ROM_AUTO_1R
    generic map (
        DataWidth => 3,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tpgTartanBarArray_address0,
        ce0 => tpgTartanBarArray_ce0,
        q0 => tpgTartanBarArray_q0);

    tpgBarSelRgb_r16_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_r_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tpgBarSelRgb_r16_address0,
        ce0 => tpgBarSelRgb_r16_ce0,
        q0 => tpgBarSelRgb_r16_q0);

    tpgBarSelRgb_g14_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_g_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tpgBarSelRgb_g14_address0,
        ce0 => tpgBarSelRgb_g14_ce0,
        q0 => tpgBarSelRgb_g14_q0);

    tpgBarSelRgb_b12_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_b_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tpgBarSelRgb_b12_address0,
        ce0 => tpgBarSelRgb_b12_ce0,
        q0 => tpgBarSelRgb_b12_q0);

    tpgBarSelYuv_y22_U : component design_1_v_tpg_0_0_tpgPatternCheckerBoard_tpgBarSelYuv_y21_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tpgBarSelYuv_y22_address0,
        ce0 => tpgBarSelYuv_y22_ce0,
        q0 => tpgBarSelYuv_y22_q0);

    tpgBarSelYuv_v20_U : component design_1_v_tpg_0_0_tpgPatternCheckerBoard_tpgBarSelYuv_v19_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tpgBarSelYuv_v20_address0,
        ce0 => tpgBarSelYuv_v20_ce0,
        q0 => tpgBarSelYuv_v20_q0);

    tpgBarSelYuv_u18_U : component design_1_v_tpg_0_0_tpgPatternCheckerBoard_tpgBarSelYuv_u17_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tpgBarSelYuv_u18_address0,
        ce0 => tpgBarSelYuv_u18_ce0,
        q0 => tpgBarSelYuv_u18_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    hBarSel_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_155)) then
                if ((icmp_ln1336_fu_251_p2 = ap_const_lv1_1)) then 
                    hBarSel <= ap_const_lv3_0;
                elsif (((icmp_ln1073_1_fu_379_p2 = ap_const_lv1_0) and (icmp_ln1336_fu_251_p2 = ap_const_lv1_0))) then 
                    hBarSel <= add_ln1367_fu_397_p2;
                end if;
            end if; 
        end if;
    end process;

    vBarSel_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_155)) then
                if ((icmp_ln1336_1_fu_263_p2 = ap_const_lv1_1)) then 
                    vBarSel <= ap_const_lv3_0;
                elsif ((ap_const_boolean_1 = ap_condition_170)) then 
                    vBarSel <= add_ln1348_fu_321_p2;
                end if;
            end if; 
        end if;
    end process;

    xCount_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_155)) then
                if ((icmp_ln1336_fu_251_p2 = ap_const_lv1_1)) then 
                    xCount_V <= ap_const_lv10_0;
                elsif (((icmp_ln1073_1_fu_379_p2 = ap_const_lv1_1) and (icmp_ln1336_fu_251_p2 = ap_const_lv1_0))) then 
                    xCount_V <= add_ln886_1_fu_410_p2;
                elsif (((icmp_ln1073_1_fu_379_p2 = ap_const_lv1_0) and (icmp_ln1336_fu_251_p2 = ap_const_lv1_0))) then 
                    xCount_V <= sub_ln887_fu_385_p2;
                end if;
            end if; 
        end if;
    end process;

    yCount_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_155)) then
                if ((icmp_ln1336_1_fu_263_p2 = ap_const_lv1_1)) then 
                    yCount_V <= ap_const_lv10_0_2;
                elsif (((icmp_ln1336_1_fu_263_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1341_fu_309_p2))) then 
                    yCount_V <= add_ln886_fu_334_p2;
                elsif ((ap_const_boolean_1 = ap_condition_170)) then 
                    yCount_V <= ap_const_lv10_0_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln1379_1_reg_557 <= and_ln1379_1_fu_459_p2;
                and_ln1379_1_reg_557_pp0_iter1_reg <= and_ln1379_1_reg_557;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1328_fu_223_p2 <= std_logic_vector(unsigned(width) + unsigned(ap_const_lv14_F));
    add_ln1329_fu_245_p2 <= std_logic_vector(unsigned(height) + unsigned(ap_const_lv14_F));
    add_ln1348_fu_321_p2 <= std_logic_vector(unsigned(vBarSel) + unsigned(ap_const_lv3_1));
    add_ln1367_fu_397_p2 <= std_logic_vector(unsigned(hBarSel) + unsigned(ap_const_lv3_1));
    add_ln886_1_fu_410_p2 <= std_logic_vector(unsigned(xCount_V) + unsigned(ap_const_lv10_1));
    add_ln886_fu_334_p2 <= std_logic_vector(unsigned(yCount_V) + unsigned(ap_const_lv10_1));
    and_ln1341_fu_309_p2 <= (icmp_ln1336_fu_251_p2 and icmp_ln1073_fu_303_p2);
    and_ln1379_1_fu_459_p2 <= (cmp88_fu_364_p2 and and_ln1379_fu_453_p2);
    and_ln1379_fu_453_p2 <= (trunc_ln1324_fu_219_p1 and sel_tmp1_fu_447_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_155_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
                ap_condition_155 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_170_assign_proc : process(icmp_ln1336_1_fu_263_p2, and_ln1341_fu_309_p2, icmp_ln1336_fu_251_p2)
    begin
                ap_condition_170 <= ((icmp_ln1336_fu_251_p2 = ap_const_lv1_1) and (icmp_ln1336_1_fu_263_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1341_fu_309_p2));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_hBarSel_loc_1_phi_fu_210_p6_assign_proc : process(hBarSel, icmp_ln1336_fu_251_p2, ap_phi_reg_pp0_iter0_hBarSel_loc_1_reg_207, icmp_ln1073_1_fu_379_p2, add_ln1367_fu_397_p2)
    begin
        if (((icmp_ln1073_1_fu_379_p2 = ap_const_lv1_0) and (icmp_ln1336_fu_251_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_hBarSel_loc_1_phi_fu_210_p6 <= add_ln1367_fu_397_p2;
        elsif (((icmp_ln1073_1_fu_379_p2 = ap_const_lv1_1) and (icmp_ln1336_fu_251_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_hBarSel_loc_1_phi_fu_210_p6 <= hBarSel;
        elsif ((icmp_ln1336_fu_251_p2 = ap_const_lv1_1)) then 
            ap_phi_mux_hBarSel_loc_1_phi_fu_210_p6 <= ap_const_lv3_0;
        else 
            ap_phi_mux_hBarSel_loc_1_phi_fu_210_p6 <= ap_phi_reg_pp0_iter0_hBarSel_loc_1_reg_207;
        end if; 
    end process;


    ap_phi_mux_vBarSel_loc_2_phi_fu_196_p8_assign_proc : process(vBarSel, ap_phi_reg_pp0_iter0_vBarSel_loc_2_reg_193, icmp_ln1336_1_fu_263_p2, and_ln1341_fu_309_p2, add_ln1348_fu_321_p2, icmp_ln1336_fu_251_p2)
    begin
        if (((icmp_ln1336_fu_251_p2 = ap_const_lv1_1) and (icmp_ln1336_1_fu_263_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1341_fu_309_p2))) then 
            ap_phi_mux_vBarSel_loc_2_phi_fu_196_p8 <= add_ln1348_fu_321_p2;
        elsif ((((icmp_ln1336_fu_251_p2 = ap_const_lv1_0) and (icmp_ln1336_1_fu_263_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1341_fu_309_p2)) or ((icmp_ln1336_1_fu_263_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1341_fu_309_p2)))) then 
            ap_phi_mux_vBarSel_loc_2_phi_fu_196_p8 <= vBarSel;
        elsif ((icmp_ln1336_1_fu_263_p2 = ap_const_lv1_1)) then 
            ap_phi_mux_vBarSel_loc_2_phi_fu_196_p8 <= ap_const_lv3_0;
        else 
            ap_phi_mux_vBarSel_loc_2_phi_fu_196_p8 <= ap_phi_reg_pp0_iter0_vBarSel_loc_2_reg_193;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_hBarSel_loc_1_reg_207 <= "XXX";
    ap_phi_reg_pp0_iter0_vBarSel_loc_2_reg_193 <= "XXX";

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= pix_val_V_fu_501_p3;
    ap_return_1 <= pix_val_V_1_fu_494_p3;
    ap_return_2 <= pix_val_V_2_fu_508_p3;
    barWidthMinSamples_fu_239_p2 <= std_logic_vector(unsigned(trunc_ln1_fu_229_p4) + unsigned(ap_const_lv10_3FF));
    cmp65_fu_358_p2 <= "1" when (color = ap_const_lv8_0) else "0";
    cmp88_fu_364_p2 <= "0" when (color = ap_const_lv8_1) else "1";
    icmp_ln1073_1_fu_379_p2 <= "1" when (unsigned(xCount_V) < unsigned(barWidthMinSamples_fu_239_p2)) else "0";
    icmp_ln1073_fu_303_p2 <= "1" when (signed(zext_ln1073_fu_299_p1) < signed(ret_V_fu_293_p2)) else "0";
    icmp_ln1336_1_fu_263_p2 <= "1" when (or_ln1336_fu_257_p2 = ap_const_lv16_0) else "0";
    icmp_ln1336_fu_251_p2 <= "1" when (x = ap_const_lv16_0) else "0";
    or_ln1336_fu_257_p2 <= (y or x);
    or_ln_fu_434_p3 <= (ap_phi_mux_vBarSel_loc_2_phi_fu_196_p8 & ap_phi_mux_hBarSel_loc_1_phi_fu_210_p6);
    pix_val_V_1_fu_494_p3 <= 
        tpgBarSelYuv_v20_q0 when (and_ln1379_1_reg_557_pp0_iter1_reg(0) = '1') else 
        sel_tmp_fu_487_p3;
    pix_val_V_2_fu_508_p3 <= 
        tpgBarSelRgb_b_load_cast_fu_483_p1 when (cmp65_fu_358_p2(0) = '1') else 
        tpgBarSelYuv_v20_q0;
    pix_val_V_fu_501_p3 <= 
        tpgBarSelRgb_r_load_cast_fu_475_p1 when (cmp65_fu_358_p2(0) = '1') else 
        tpgBarSelYuv_y22_q0;
    ret_V_fu_293_p2 <= std_logic_vector(unsigned(zext_ln1542_fu_289_p1) + unsigned(ap_const_lv11_7FF));
    sel_tmp1_fu_447_p2 <= (cmp65_fu_358_p2 xor ap_const_lv1_1);
    sel_tmp_fu_487_p3 <= 
        sext_ln259_fu_479_p1 when (cmp65_fu_358_p2(0) = '1') else 
        tpgBarSelYuv_u18_q0;
        sext_ln259_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tpgBarSelRgb_g14_q0),8));

    sub_ln887_fu_385_p2 <= std_logic_vector(unsigned(xCount_V) - unsigned(barWidthMinSamples_fu_239_p2));
    tmp_fu_279_p4 <= add_ln1329_fu_245_p2(13 downto 4);
    tpgBarSelRgb_b12_address0 <= zext_ln1374_1_fu_465_p1(3 - 1 downto 0);

    tpgBarSelRgb_b12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tpgBarSelRgb_b12_ce0 <= ap_const_logic_1;
        else 
            tpgBarSelRgb_b12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        tpgBarSelRgb_b_load_cast_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tpgBarSelRgb_b12_q0),8));

    tpgBarSelRgb_g14_address0 <= zext_ln1374_1_fu_465_p1(3 - 1 downto 0);

    tpgBarSelRgb_g14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tpgBarSelRgb_g14_ce0 <= ap_const_logic_1;
        else 
            tpgBarSelRgb_g14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tpgBarSelRgb_r16_address0 <= zext_ln1374_1_fu_465_p1(3 - 1 downto 0);

    tpgBarSelRgb_r16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tpgBarSelRgb_r16_ce0 <= ap_const_logic_1;
        else 
            tpgBarSelRgb_r16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        tpgBarSelRgb_r_load_cast_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tpgBarSelRgb_r16_q0),8));

    tpgBarSelYuv_u18_address0 <= zext_ln1374_1_fu_465_p1(3 - 1 downto 0);

    tpgBarSelYuv_u18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tpgBarSelYuv_u18_ce0 <= ap_const_logic_1;
        else 
            tpgBarSelYuv_u18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tpgBarSelYuv_v20_address0 <= zext_ln1374_1_fu_465_p1(3 - 1 downto 0);

    tpgBarSelYuv_v20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tpgBarSelYuv_v20_ce0 <= ap_const_logic_1;
        else 
            tpgBarSelYuv_v20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tpgBarSelYuv_y22_address0 <= zext_ln1374_1_fu_465_p1(3 - 1 downto 0);

    tpgBarSelYuv_y22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tpgBarSelYuv_y22_ce0 <= ap_const_logic_1;
        else 
            tpgBarSelYuv_y22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tpgTartanBarArray_address0 <= zext_ln1374_fu_442_p1(6 - 1 downto 0);

    tpgTartanBarArray_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tpgTartanBarArray_ce0 <= ap_const_logic_1;
        else 
            tpgTartanBarArray_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln1324_fu_219_p1 <= x(1 - 1 downto 0);
    trunc_ln1_fu_229_p4 <= add_ln1328_fu_223_p2(13 downto 4);
    zext_ln1073_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(yCount_V),11));
    zext_ln1374_1_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tpgTartanBarArray_q0),64));
    zext_ln1374_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_434_p3),64));
    zext_ln1542_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_279_p4),11));
end behav;
