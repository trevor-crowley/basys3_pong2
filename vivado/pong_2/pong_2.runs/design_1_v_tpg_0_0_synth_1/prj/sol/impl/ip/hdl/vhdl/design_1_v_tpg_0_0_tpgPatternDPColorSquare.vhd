-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_tpg_0_0_tpgPatternDPColorSquare is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    y : IN STD_LOGIC_VECTOR (15 downto 0);
    x : IN STD_LOGIC_VECTOR (15 downto 0);
    color : IN STD_LOGIC_VECTOR (7 downto 0);
    dpDynamicRange : IN STD_LOGIC_VECTOR (7 downto 0);
    dpYUVCoef : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of design_1_v_tpg_0_0_tpgPatternDPColorSquare is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0_1 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_0_2 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_3F : STD_LOGIC_VECTOR (9 downto 0) := "0000111111";
    constant ap_const_lv10_3C1 : STD_LOGIC_VECTOR (9 downto 0) := "1111000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal vBarSel_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal yCount_V_1 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal hBarSel_1 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal xCount_V_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal DPtpgBarArray_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal DPtpgBarArray_ce0 : STD_LOGIC;
    signal DPtpgBarArray_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_r_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_r_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_r_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelRgb_VESA_g_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_g_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_g_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelRgb_VESA_b_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_b_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_b_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal DPtpgBarSelRgb_CEA_r_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_r_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_r_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelRgb_CEA_g_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_g_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_g_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelRgb_CEA_b_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_b_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_b_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelYuv_601_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_y_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_y_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_601_v_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_v_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_v_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_y_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_y_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_v_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_v_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_v_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_601_u_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_u_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_u_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_u_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_u_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_u_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal and_ln1756_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1756_reg_746 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1756_reg_746_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_56_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1756_3_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1756_3_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1756_3_reg_774_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vBarSel_3_loc_2_phi_fu_282_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_279 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1701_1_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1706_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1713_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1701_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_hBarSel_5_loc_1_phi_fu_296_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_hBarSel_5_loc_1_reg_293 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1073_2_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1730_fu_435_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1739_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln1739_1_fu_555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln886_fu_368_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln887_fu_423_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln886_fu_454_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln1701_fu_315_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1073_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1718_fu_413_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln886_2_fu_448_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln_fu_476_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1689_fu_305_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1756_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_501_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmp56_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp126_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_demorgan_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1756_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1756_2_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1756_1_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_11_cast_fu_587_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_8_cast_fu_575_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln1756_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1756_fu_609_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1756_1_fu_621_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln1756_1_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1756_2_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1756_3_fu_641_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1756_2_fu_634_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_V_3_cast_fu_583_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln259_fu_571_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond44_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel43_fu_663_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel45_fu_674_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_12_cast_fu_591_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_9_cast_fu_579_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel49_fu_689_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel51_fu_696_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel47_fu_681_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_V_6_fu_655_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_V_7_fu_703_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_223 : BOOLEAN;
    signal ap_condition_238 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarArray_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_r_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_g_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_b_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_r_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_g_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_b_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_y_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_v_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_y_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_v_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_u_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_u_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    DPtpgBarArray_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarArray_ROM_AUTO_1R
    generic map (
        DataWidth => 3,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarArray_address0,
        ce0 => DPtpgBarArray_ce0,
        q0 => DPtpgBarArray_q0);

    DPtpgBarSelRgb_VESA_r_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_r_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_r_address0,
        ce0 => DPtpgBarSelRgb_VESA_r_ce0,
        q0 => DPtpgBarSelRgb_VESA_r_q0);

    DPtpgBarSelRgb_VESA_g_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_g_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_g_address0,
        ce0 => DPtpgBarSelRgb_VESA_g_ce0,
        q0 => DPtpgBarSelRgb_VESA_g_q0);

    DPtpgBarSelRgb_VESA_b_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_VESA_b_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_b_address0,
        ce0 => DPtpgBarSelRgb_VESA_b_ce0,
        q0 => DPtpgBarSelRgb_VESA_b_q0);

    DPtpgBarSelRgb_CEA_r_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_r_ROM_AUTO_1R
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_r_address0,
        ce0 => DPtpgBarSelRgb_CEA_r_ce0,
        q0 => DPtpgBarSelRgb_CEA_r_q0);

    DPtpgBarSelRgb_CEA_g_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_g_ROM_AUTO_1R
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_g_address0,
        ce0 => DPtpgBarSelRgb_CEA_g_ce0,
        q0 => DPtpgBarSelRgb_CEA_g_q0);

    DPtpgBarSelRgb_CEA_b_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelRgb_CEA_b_ROM_AUTO_1R
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_b_address0,
        ce0 => DPtpgBarSelRgb_CEA_b_ce0,
        q0 => DPtpgBarSelRgb_CEA_b_q0);

    DPtpgBarSelYuv_601_y_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_y_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_y_address0,
        ce0 => DPtpgBarSelYuv_601_y_ce0,
        q0 => DPtpgBarSelYuv_601_y_q0);

    DPtpgBarSelYuv_601_v_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_v_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_v_address0,
        ce0 => DPtpgBarSelYuv_601_v_ce0,
        q0 => DPtpgBarSelYuv_601_v_q0);

    DPtpgBarSelYuv_709_y_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_y_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_y_address0,
        ce0 => DPtpgBarSelYuv_709_y_ce0,
        q0 => DPtpgBarSelYuv_709_y_q0);

    DPtpgBarSelYuv_709_v_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_v_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_v_address0,
        ce0 => DPtpgBarSelYuv_709_v_ce0,
        q0 => DPtpgBarSelYuv_709_v_q0);

    DPtpgBarSelYuv_601_u_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_601_u_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_u_address0,
        ce0 => DPtpgBarSelYuv_601_u_ce0,
        q0 => DPtpgBarSelYuv_601_u_q0);

    DPtpgBarSelYuv_709_u_U : component design_1_v_tpg_0_0_tpgPatternDPColorSquare_DPtpgBarSelYuv_709_u_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_u_address0,
        ce0 => DPtpgBarSelYuv_709_u_ce0,
        q0 => DPtpgBarSelYuv_709_u_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    hBarSel_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_223)) then
                if ((icmp_ln1701_fu_309_p2 = ap_const_lv1_1)) then 
                    hBarSel_1 <= ap_const_lv3_0;
                elsif (((icmp_ln1073_2_fu_417_p2 = ap_const_lv1_0) and (icmp_ln1701_fu_309_p2 = ap_const_lv1_0))) then 
                    hBarSel_1 <= add_ln1730_fu_435_p2;
                end if;
            end if; 
        end if;
    end process;

    vBarSel_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_223)) then
                if ((icmp_ln1701_1_fu_321_p2 = ap_const_lv1_1)) then 
                    vBarSel_1 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_238)) then 
                    vBarSel_1 <= xor_ln1713_fu_355_p2;
                end if;
            end if; 
        end if;
    end process;

    xCount_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_223)) then
                if ((icmp_ln1701_fu_309_p2 = ap_const_lv1_1)) then 
                    xCount_V_1 <= ap_const_lv10_0;
                elsif (((icmp_ln1073_2_fu_417_p2 = ap_const_lv1_1) and (icmp_ln1701_fu_309_p2 = ap_const_lv1_0))) then 
                    xCount_V_1 <= zext_ln886_fu_454_p1;
                elsif (((icmp_ln1073_2_fu_417_p2 = ap_const_lv1_0) and (icmp_ln1701_fu_309_p2 = ap_const_lv1_0))) then 
                    xCount_V_1 <= add_ln887_fu_423_p2;
                end if;
            end if; 
        end if;
    end process;

    yCount_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_223)) then
                if ((icmp_ln1701_1_fu_321_p2 = ap_const_lv1_1)) then 
                    yCount_V_1 <= ap_const_lv6_0_2;
                elsif (((icmp_ln1701_1_fu_321_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1706_fu_343_p2))) then 
                    yCount_V_1 <= add_ln886_fu_368_p2;
                elsif ((ap_const_boolean_1 = ap_condition_238)) then 
                    yCount_V_1 <= ap_const_lv6_0_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln1756_3_reg_774 <= and_ln1756_3_fu_549_p2;
                and_ln1756_3_reg_774_pp0_iter1_reg <= and_ln1756_3_reg_774;
                and_ln1756_reg_746 <= and_ln1756_fu_495_p2;
                and_ln1756_reg_746_pp0_iter1_reg <= and_ln1756_reg_746;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    DPtpgBarArray_address0 <= zext_ln1739_fu_484_p1(4 - 1 downto 0);

    DPtpgBarArray_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarArray_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarArray_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_CEA_b_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_b_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelRgb_CEA_b_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_CEA_g_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_g_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelRgb_CEA_g_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_CEA_r_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelRgb_CEA_r_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_b_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_b_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelRgb_VESA_b_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_g_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_g_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelRgb_VESA_g_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_r_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelRgb_VESA_r_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_601_u_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_u_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelYuv_601_u_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_u_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_601_v_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_v_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelYuv_601_v_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_601_y_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_y_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelYuv_601_y_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_u_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_u_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelYuv_709_u_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_u_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_v_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_v_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelYuv_709_v_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_y_address0 <= zext_ln1739_1_fu_555_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_y_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarSelYuv_709_y_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1730_fu_435_p2 <= std_logic_vector(unsigned(hBarSel_1) + unsigned(ap_const_lv3_1));
    add_ln886_2_fu_448_p2 <= std_logic_vector(unsigned(trunc_ln1718_fu_413_p1) + unsigned(ap_const_lv6_1));
    add_ln886_fu_368_p2 <= std_logic_vector(unsigned(yCount_V_1) + unsigned(ap_const_lv6_1));
    add_ln887_fu_423_p2 <= std_logic_vector(unsigned(xCount_V_1) + unsigned(ap_const_lv10_3C1));
    and_ln1706_fu_343_p2 <= (icmp_ln1701_fu_309_p2 and icmp_ln1073_fu_337_p2);
    and_ln1756_1_fu_595_p2 <= (sel_tmp6_fu_531_p2 and and_ln1756_reg_746_pp0_iter1_reg);
    and_ln1756_2_fu_604_p2 <= (xor_ln1756_fu_599_p2 and sel_tmp6_fu_531_p2);
    and_ln1756_3_fu_549_p2 <= (sel_tmp16_fu_543_p2 and and_ln1756_fu_495_p2);
    and_ln1756_fu_495_p2 <= (trunc_ln1689_fu_305_p1 and icmp_ln1756_fu_489_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_223_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
                ap_condition_223 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_238_assign_proc : process(icmp_ln1701_1_fu_321_p2, and_ln1706_fu_343_p2, icmp_ln1701_fu_309_p2)
    begin
                ap_condition_238 <= ((ap_const_lv1_0 = and_ln1706_fu_343_p2) and (icmp_ln1701_fu_309_p2 = ap_const_lv1_1) and (icmp_ln1701_1_fu_321_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_hBarSel_5_loc_1_phi_fu_296_p6_assign_proc : process(hBarSel_1, icmp_ln1701_fu_309_p2, ap_phi_reg_pp0_iter0_hBarSel_5_loc_1_reg_293, icmp_ln1073_2_fu_417_p2, add_ln1730_fu_435_p2)
    begin
        if (((icmp_ln1073_2_fu_417_p2 = ap_const_lv1_0) and (icmp_ln1701_fu_309_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_hBarSel_5_loc_1_phi_fu_296_p6 <= add_ln1730_fu_435_p2;
        elsif (((icmp_ln1073_2_fu_417_p2 = ap_const_lv1_1) and (icmp_ln1701_fu_309_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_hBarSel_5_loc_1_phi_fu_296_p6 <= hBarSel_1;
        elsif ((icmp_ln1701_fu_309_p2 = ap_const_lv1_1)) then 
            ap_phi_mux_hBarSel_5_loc_1_phi_fu_296_p6 <= ap_const_lv3_0;
        else 
            ap_phi_mux_hBarSel_5_loc_1_phi_fu_296_p6 <= ap_phi_reg_pp0_iter0_hBarSel_5_loc_1_reg_293;
        end if; 
    end process;


    ap_phi_mux_vBarSel_3_loc_2_phi_fu_282_p8_assign_proc : process(vBarSel_1, ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_279, icmp_ln1701_1_fu_321_p2, and_ln1706_fu_343_p2, xor_ln1713_fu_355_p2, icmp_ln1701_fu_309_p2)
    begin
        if (((ap_const_lv1_0 = and_ln1706_fu_343_p2) and (icmp_ln1701_fu_309_p2 = ap_const_lv1_1) and (icmp_ln1701_1_fu_321_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_vBarSel_3_loc_2_phi_fu_282_p8 <= xor_ln1713_fu_355_p2;
        elsif ((((ap_const_lv1_0 = and_ln1706_fu_343_p2) and (icmp_ln1701_fu_309_p2 = ap_const_lv1_0) and (icmp_ln1701_1_fu_321_p2 = ap_const_lv1_0)) or ((icmp_ln1701_1_fu_321_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1706_fu_343_p2)))) then 
            ap_phi_mux_vBarSel_3_loc_2_phi_fu_282_p8 <= vBarSel_1;
        elsif ((icmp_ln1701_1_fu_321_p2 = ap_const_lv1_1)) then 
            ap_phi_mux_vBarSel_3_loc_2_phi_fu_282_p8 <= ap_const_lv1_0;
        else 
            ap_phi_mux_vBarSel_3_loc_2_phi_fu_282_p8 <= ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_279;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_hBarSel_5_loc_1_reg_293 <= "XXX";
    ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_279 <= "X";

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= newSel47_fu_681_p3;
    ap_return_1 <= pix_val_V_6_fu_655_p3;
    ap_return_2 <= pix_val_V_7_fu_703_p3;
    cmp126_fu_398_p2 <= "1" when (dpYUVCoef = ap_const_lv8_0) else "0";
    cmp56_fu_392_p2 <= "1" when (color = ap_const_lv8_0) else "0";
    empty_56_fu_507_p2 <= "1" when (empty_fu_501_p2 = ap_const_lv8_0) else "0";
    empty_fu_501_p2 <= (dpDynamicRange or color);
    icmp_ln1073_2_fu_417_p2 <= "1" when (unsigned(xCount_V_1) < unsigned(ap_const_lv10_3F)) else "0";
    icmp_ln1073_fu_337_p2 <= "0" when (yCount_V_1 = ap_const_lv6_3F) else "1";
    icmp_ln1701_1_fu_321_p2 <= "1" when (or_ln1701_fu_315_p2 = ap_const_lv16_0) else "0";
    icmp_ln1701_fu_309_p2 <= "1" when (x = ap_const_lv16_0) else "0";
    icmp_ln1756_fu_489_p2 <= "0" when (color = ap_const_lv8_1) else "1";
    newSel43_fu_663_p3 <= 
        DPtpgBarSelYuv_601_y_q0 when (sel_tmp6_fu_531_p2(0) = '1') else 
        pix_val_V_3_cast_fu_583_p1;
    newSel45_fu_674_p3 <= 
        sext_ln259_fu_571_p1 when (empty_56_fu_507_p2(0) = '1') else 
        DPtpgBarSelYuv_709_y_q0;
    newSel47_fu_681_p3 <= 
        newSel43_fu_663_p3 when (or_cond44_fu_670_p2(0) = '1') else 
        newSel45_fu_674_p3;
    newSel49_fu_689_p3 <= 
        DPtpgBarSelYuv_601_v_q0 when (sel_tmp6_fu_531_p2(0) = '1') else 
        val_assign_12_cast_fu_591_p1;
    newSel51_fu_696_p3 <= 
        val_assign_9_cast_fu_579_p1 when (empty_56_fu_507_p2(0) = '1') else 
        DPtpgBarSelYuv_709_v_q0;
    or_cond44_fu_670_p2 <= (sel_tmp6_fu_531_p2 or sel_tmp3_fu_519_p2);
    or_ln1701_fu_315_p2 <= (y or x);
    or_ln1756_1_fu_629_p2 <= (sel_tmp3_fu_519_p2 or and_ln1756_1_fu_595_p2);
    or_ln1756_2_fu_649_p2 <= (or_ln1756_fu_616_p2 or or_ln1756_1_fu_629_p2);
    or_ln1756_fu_616_p2 <= (and_ln1756_3_reg_774_pp0_iter1_reg or and_ln1756_2_fu_604_p2);
    or_ln_fu_476_p3 <= (ap_phi_mux_vBarSel_3_loc_2_phi_fu_282_p8 & ap_phi_mux_hBarSel_5_loc_1_phi_fu_296_p6);
        pix_val_V_3_cast_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_r_q0),8));

    pix_val_V_6_fu_655_p3 <= 
        select_ln1756_3_fu_641_p3 when (or_ln1756_2_fu_649_p2(0) = '1') else 
        select_ln1756_2_fu_634_p3;
    pix_val_V_7_fu_703_p3 <= 
        newSel49_fu_689_p3 when (or_cond44_fu_670_p2(0) = '1') else 
        newSel51_fu_696_p3;
    sel_tmp16_demorgan_fu_537_p2 <= (cmp56_fu_392_p2 or cmp126_fu_398_p2);
    sel_tmp16_fu_543_p2 <= (sel_tmp16_demorgan_fu_537_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_513_p2 <= "0" when (dpDynamicRange = ap_const_lv8_0) else "1";
    sel_tmp3_fu_519_p2 <= (sel_tmp2_fu_513_p2 and cmp56_fu_392_p2);
    sel_tmp5_fu_525_p2 <= (cmp56_fu_392_p2 xor ap_const_lv1_1);
    sel_tmp6_fu_531_p2 <= (sel_tmp5_fu_525_p2 and cmp126_fu_398_p2);
    select_ln1756_1_fu_621_p3 <= 
        DPtpgBarSelYuv_601_v_q0 when (and_ln1756_1_fu_595_p2(0) = '1') else 
        val_assign_11_cast_fu_587_p1;
    select_ln1756_2_fu_634_p3 <= 
        val_assign_8_cast_fu_575_p1 when (empty_56_fu_507_p2(0) = '1') else 
        DPtpgBarSelYuv_709_u_q0;
    select_ln1756_3_fu_641_p3 <= 
        select_ln1756_fu_609_p3 when (or_ln1756_fu_616_p2(0) = '1') else 
        select_ln1756_1_fu_621_p3;
    select_ln1756_fu_609_p3 <= 
        DPtpgBarSelYuv_709_v_q0 when (and_ln1756_3_reg_774_pp0_iter1_reg(0) = '1') else 
        DPtpgBarSelYuv_601_u_q0;
        sext_ln259_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_VESA_r_q0),8));

    trunc_ln1689_fu_305_p1 <= x(1 - 1 downto 0);
    trunc_ln1718_fu_413_p1 <= xCount_V_1(6 - 1 downto 0);
        val_assign_11_cast_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_g_q0),8));

        val_assign_12_cast_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_b_q0),8));

        val_assign_8_cast_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_VESA_g_q0),8));

        val_assign_9_cast_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_VESA_b_q0),8));

    xor_ln1713_fu_355_p2 <= (vBarSel_1 xor ap_const_lv1_1);
    xor_ln1756_fu_599_p2 <= (ap_const_lv1_1 xor and_ln1756_reg_746_pp0_iter1_reg);
    zext_ln1739_1_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(DPtpgBarArray_q0),64));
    zext_ln1739_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_476_p3),64));
    zext_ln886_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_2_fu_448_p2),10));
end behav;
