-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_mix_0_0_v_mix_core_alpha_true_true_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    outLayer0_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    outLayer0_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    outLayer0_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    outLayer0_empty_n : IN STD_LOGIC;
    outLayer0_read : OUT STD_LOGIC;
    srcLayer1x_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    srcLayer1x_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    srcLayer1x_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    srcLayer1x_empty_n : IN STD_LOGIC;
    srcLayer1x_read : OUT STD_LOGIC;
    srcLayer1Alphax_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    srcLayer1Alphax_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    srcLayer1Alphax_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    srcLayer1Alphax_empty_n : IN STD_LOGIC;
    srcLayer1Alphax_read : OUT STD_LOGIC;
    hwReg_width_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    hwReg_width_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_width_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_width_empty_n : IN STD_LOGIC;
    hwReg_width_read : OUT STD_LOGIC;
    hwReg_height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    hwReg_height_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_height_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_height_empty_n : IN STD_LOGIC;
    hwReg_height_read : OUT STD_LOGIC;
    hwReg_background_Y_R_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    hwReg_background_Y_R_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_background_Y_R_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_background_Y_R_empty_n : IN STD_LOGIC;
    hwReg_background_Y_R_read : OUT STD_LOGIC;
    hwReg_background_U_G_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    hwReg_background_U_G_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_background_U_G_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_background_U_G_empty_n : IN STD_LOGIC;
    hwReg_background_U_G_read : OUT STD_LOGIC;
    hwReg_background_V_B_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    hwReg_background_V_B_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_background_V_B_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_background_V_B_empty_n : IN STD_LOGIC;
    hwReg_background_V_B_read : OUT STD_LOGIC;
    hwReg_layerEnable_dout : IN STD_LOGIC_VECTOR (1 downto 0);
    hwReg_layerEnable_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerEnable_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerEnable_empty_n : IN STD_LOGIC;
    hwReg_layerEnable_read : OUT STD_LOGIC;
    hwReg_layerAlpha_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    hwReg_layerAlpha_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerAlpha_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerAlpha_1_empty_n : IN STD_LOGIC;
    hwReg_layerAlpha_1_read : OUT STD_LOGIC;
    hwReg_layerStartX_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    hwReg_layerStartX_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerStartX_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerStartX_1_empty_n : IN STD_LOGIC;
    hwReg_layerStartX_1_read : OUT STD_LOGIC;
    hwReg_layerStartY_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    hwReg_layerStartY_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerStartY_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerStartY_1_empty_n : IN STD_LOGIC;
    hwReg_layerStartY_1_read : OUT STD_LOGIC;
    hwReg_layerWidth_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    hwReg_layerWidth_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    hwReg_layerWidth_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    hwReg_layerWidth_1_empty_n : IN STD_LOGIC;
    hwReg_layerWidth_1_read : OUT STD_LOGIC;
    hwReg_layerHeight_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    hwReg_layerHeight_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    hwReg_layerHeight_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    hwReg_layerHeight_1_empty_n : IN STD_LOGIC;
    hwReg_layerHeight_1_read : OUT STD_LOGIC;
    hwReg_layerScaleFactor_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    hwReg_layerScaleFactor_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerScaleFactor_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    hwReg_layerScaleFactor_1_empty_n : IN STD_LOGIC;
    hwReg_layerScaleFactor_1_read : OUT STD_LOGIC;
    outLayer1_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    outLayer1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    outLayer1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    outLayer1_full_n : IN STD_LOGIC;
    outLayer1_write : OUT STD_LOGIC;
    HwReg_width_c41_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    HwReg_width_c41_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_width_c41_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_width_c41_full_n : IN STD_LOGIC;
    HwReg_width_c41_write : OUT STD_LOGIC;
    HwReg_height_c45_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    HwReg_height_c45_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_height_c45_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_height_c45_full_n : IN STD_LOGIC;
    HwReg_height_c45_write : OUT STD_LOGIC );
end;


architecture behav of design_1_v_mix_0_0_v_mix_core_alpha_true_true_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal hwReg_width_blk_n : STD_LOGIC;
    signal hwReg_height_blk_n : STD_LOGIC;
    signal hwReg_background_Y_R_blk_n : STD_LOGIC;
    signal hwReg_background_U_G_blk_n : STD_LOGIC;
    signal hwReg_background_V_B_blk_n : STD_LOGIC;
    signal hwReg_layerEnable_blk_n : STD_LOGIC;
    signal hwReg_layerAlpha_1_blk_n : STD_LOGIC;
    signal hwReg_layerStartX_1_blk_n : STD_LOGIC;
    signal hwReg_layerStartY_1_blk_n : STD_LOGIC;
    signal hwReg_layerWidth_1_blk_n : STD_LOGIC;
    signal hwReg_layerHeight_1_blk_n : STD_LOGIC;
    signal hwReg_layerScaleFactor_1_blk_n : STD_LOGIC;
    signal HwReg_width_c41_blk_n : STD_LOGIC;
    signal HwReg_height_c45_blk_n : STD_LOGIC;
    signal hwReg_layerScaleFactor_1_read_reg_374 : STD_LOGIC_VECTOR (7 downto 0);
    signal hwReg_layerHeight_1_read_reg_379 : STD_LOGIC_VECTOR (9 downto 0);
    signal hwReg_layerWidth_1_read_reg_384 : STD_LOGIC_VECTOR (9 downto 0);
    signal layerStartY_reg_389 : STD_LOGIC_VECTOR (15 downto 0);
    signal layerStartX_reg_395 : STD_LOGIC_VECTOR (15 downto 0);
    signal bkgpix_val_V_2_reg_401 : STD_LOGIC_VECTOR (7 downto 0);
    signal bkgpix_val_V_1_reg_406 : STD_LOGIC_VECTOR (7 downto 0);
    signal bkgpix_val_V_reg_411 : STD_LOGIC_VECTOR (7 downto 0);
    signal height_reg_416 : STD_LOGIC_VECTOR (9 downto 0);
    signal width_reg_421 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_fu_221_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_426 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_431 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln246_fu_259_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln246_reg_436 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add64_fu_278_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add64_reg_441 : STD_LOGIC_VECTOR (16 downto 0);
    signal add75_fu_291_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add75_reg_446 : STD_LOGIC_VECTOR (16 downto 0);
    signal rev_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_451 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln285_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln285_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln269_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_done : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_idle : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_ready : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer0_read : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_srcLayer1x_read : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_srcLayer1Alphax_read : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer1_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer1_write : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_2_0_0_026_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_2_0_0_026_out_o_ap_vld : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_1_0_0_024_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_1_0_0_024_out_o_ap_vld : STD_LOGIC;
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_0_0_0_022_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_0_0_0_022_out_o_ap_vld : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_215_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_0_2_0_0_027_lcssa44_fu_98 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_1_0_0_025_lcssa41_fu_94 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_0_0_0_023_lcssa38_fu_90 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_fu_86 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_12_fu_318_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal zext_ln251_fu_238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln251_1_fu_241_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln252_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln251_fu_244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln252_fu_253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal layerHeight_fu_263_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal layerHeight_cast_fu_274_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal layerStartY_cast_fu_271_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal layerWidth_fu_267_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal layerWidth_cast_fu_287_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal layerStartX_cast_fu_284_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln269_fu_305_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ult_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln269_1_fu_309_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal notrhs_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev12_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_mix_0_0_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        outLayer0_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        outLayer0_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer0_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer0_empty_n : IN STD_LOGIC;
        outLayer0_read : OUT STD_LOGIC;
        srcLayer1x_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1x_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1x_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1x_empty_n : IN STD_LOGIC;
        srcLayer1x_read : OUT STD_LOGIC;
        srcLayer1Alphax_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        srcLayer1Alphax_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alphax_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alphax_empty_n : IN STD_LOGIC;
        srcLayer1Alphax_read : OUT STD_LOGIC;
        outLayer1_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        outLayer1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer1_full_n : IN STD_LOGIC;
        outLayer1_write : OUT STD_LOGIC;
        width : IN STD_LOGIC_VECTOR (9 downto 0);
        zext_ln301 : IN STD_LOGIC_VECTOR (8 downto 0);
        bkgpix_val_V_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        bkgpix_val_V_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        bkgpix_val_V : IN STD_LOGIC_VECTOR (7 downto 0);
        layerStartX : IN STD_LOGIC_VECTOR (15 downto 0);
        add75 : IN STD_LOGIC_VECTOR (16 downto 0);
        and_ln285 : IN STD_LOGIC_VECTOR (0 downto 0);
        tobool83_not : IN STD_LOGIC_VECTOR (0 downto 0);
        hwReg_layerEnable_load_cast : IN STD_LOGIC_VECTOR (0 downto 0);
        p_0_2_0_0_026_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        p_0_2_0_0_026_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_0_2_0_0_026_out_o_ap_vld : OUT STD_LOGIC;
        p_0_1_0_0_024_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        p_0_1_0_0_024_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_0_1_0_0_024_out_o_ap_vld : OUT STD_LOGIC;
        p_0_0_0_0_022_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        p_0_0_0_0_022_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_0_0_0_0_022_out_o_ap_vld : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        d : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190 : component design_1_v_mix_0_0_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start,
        ap_done => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_done,
        ap_idle => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_idle,
        ap_ready => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_ready,
        outLayer0_dout => outLayer0_dout,
        outLayer0_num_data_valid => ap_const_lv2_0,
        outLayer0_fifo_cap => ap_const_lv2_0,
        outLayer0_empty_n => outLayer0_empty_n,
        outLayer0_read => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer0_read,
        srcLayer1x_dout => srcLayer1x_dout,
        srcLayer1x_num_data_valid => ap_const_lv2_0,
        srcLayer1x_fifo_cap => ap_const_lv2_0,
        srcLayer1x_empty_n => srcLayer1x_empty_n,
        srcLayer1x_read => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_srcLayer1x_read,
        srcLayer1Alphax_dout => srcLayer1Alphax_dout,
        srcLayer1Alphax_num_data_valid => ap_const_lv5_0,
        srcLayer1Alphax_fifo_cap => ap_const_lv5_0,
        srcLayer1Alphax_empty_n => srcLayer1Alphax_empty_n,
        srcLayer1Alphax_read => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_srcLayer1Alphax_read,
        outLayer1_din => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer1_din,
        outLayer1_num_data_valid => ap_const_lv2_0,
        outLayer1_fifo_cap => ap_const_lv2_0,
        outLayer1_full_n => outLayer1_full_n,
        outLayer1_write => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer1_write,
        width => width_reg_421,
        zext_ln301 => trunc_ln246_reg_436,
        bkgpix_val_V_2 => bkgpix_val_V_2_reg_401,
        bkgpix_val_V_1 => bkgpix_val_V_1_reg_406,
        bkgpix_val_V => bkgpix_val_V_reg_411,
        layerStartX => layerStartX_reg_395,
        add75 => add75_reg_446,
        and_ln285 => and_ln285_reg_459,
        tobool83_not => rev_reg_451,
        hwReg_layerEnable_load_cast => empty_reg_426,
        p_0_2_0_0_026_out_i => p_0_2_0_0_027_lcssa44_fu_98,
        p_0_2_0_0_026_out_o => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_2_0_0_026_out_o,
        p_0_2_0_0_026_out_o_ap_vld => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_2_0_0_026_out_o_ap_vld,
        p_0_1_0_0_024_out_i => p_0_1_0_0_025_lcssa41_fu_94,
        p_0_1_0_0_024_out_o => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_1_0_0_024_out_o,
        p_0_1_0_0_024_out_o_ap_vld => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_1_0_0_024_out_o_ap_vld,
        p_0_0_0_0_022_out_i => p_0_0_0_0_023_lcssa38_fu_90,
        p_0_0_0_0_022_out_o => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_0_0_0_022_out_o,
        p_0_0_0_0_022_out_o_ap_vld => grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_0_0_0_022_out_o_ap_vld);

    grp_reg_unsigned_short_s_fu_215 : component design_1_v_mix_0_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        d => hwReg_layerAlpha_1_dout,
        ap_return => grp_reg_unsigned_short_s_fu_215_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln269_fu_313_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln269_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_ready = ap_const_logic_1)) then 
                    grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    y_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y_fu_86 <= ap_const_lv10_0;
            elsif (((icmp_ln269_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                y_fu_86 <= y_12_fu_318_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add64_reg_441 <= add64_fu_278_p2;
                add75_reg_446 <= add75_fu_291_p2;
                rev_reg_451 <= rev_fu_297_p2;
                trunc_ln246_reg_436 <= trunc_ln246_fu_259_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln269_fu_313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                and_ln285_reg_459 <= and_ln285_fu_340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bkgpix_val_V_1_reg_406 <= hwReg_background_U_G_dout;
                bkgpix_val_V_2_reg_401 <= hwReg_background_V_B_dout;
                bkgpix_val_V_reg_411 <= hwReg_background_Y_R_dout;
                empty_reg_426 <= empty_fu_221_p1;
                height_reg_416 <= hwReg_height_dout;
                hwReg_layerHeight_1_read_reg_379 <= hwReg_layerHeight_1_dout;
                hwReg_layerScaleFactor_1_read_reg_374 <= hwReg_layerScaleFactor_1_dout;
                hwReg_layerWidth_1_read_reg_384 <= hwReg_layerWidth_1_dout;
                layerStartX_reg_395 <= hwReg_layerStartX_1_dout;
                layerStartY_reg_389 <= hwReg_layerStartY_1_dout;
                tmp_reg_431 <= hwReg_layerEnable_dout(1 downto 1);
                width_reg_421 <= hwReg_width_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_0_0_0_022_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_0_0_0_0_023_lcssa38_fu_90 <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_0_0_0_022_out_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_1_0_0_024_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_0_1_0_0_025_lcssa41_fu_94 <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_1_0_0_024_out_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_2_0_0_026_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_0_2_0_0_027_lcssa44_fu_98 <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_p_0_2_0_0_026_out_o;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n, ap_CS_fsm_state3, icmp_ln269_fu_313_p2, grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_done, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln269_fu_313_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    HwReg_height_c45_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_height_c45_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_height_c45_blk_n <= HwReg_height_c45_full_n;
        else 
            HwReg_height_c45_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_height_c45_din <= hwReg_height_dout;

    HwReg_height_c45_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_height_c45_write <= ap_const_logic_1;
        else 
            HwReg_height_c45_write <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_width_c41_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_width_c41_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_width_c41_blk_n <= HwReg_width_c41_full_n;
        else 
            HwReg_width_c41_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_width_c41_din <= hwReg_width_dout;

    HwReg_width_c41_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_width_c41_write <= ap_const_logic_1;
        else 
            HwReg_width_c41_write <= ap_const_logic_0;
        end if; 
    end process;

    add64_fu_278_p2 <= std_logic_vector(unsigned(layerHeight_cast_fu_274_p1) + unsigned(layerStartY_cast_fu_271_p1));
    add75_fu_291_p2 <= std_logic_vector(unsigned(layerWidth_cast_fu_287_p1) + unsigned(layerStartX_cast_fu_284_p1));
    and_ln285_fu_340_p2 <= (rev12_fu_329_p2 and notrhs_fu_335_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if (((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_done)
    begin
        if ((grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
                ap_block_state1 <= ((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, icmp_ln269_fu_313_p2)
    begin
        if (((icmp_ln269_fu_313_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    empty_fu_221_p1 <= hwReg_layerEnable_dout(1 - 1 downto 0);
    grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_ap_start_reg;

    hwReg_background_U_G_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_background_U_G_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_background_U_G_blk_n <= hwReg_background_U_G_empty_n;
        else 
            hwReg_background_U_G_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_background_U_G_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_background_U_G_read <= ap_const_logic_1;
        else 
            hwReg_background_U_G_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_background_V_B_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_background_V_B_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_background_V_B_blk_n <= hwReg_background_V_B_empty_n;
        else 
            hwReg_background_V_B_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_background_V_B_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_background_V_B_read <= ap_const_logic_1;
        else 
            hwReg_background_V_B_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_background_Y_R_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_background_Y_R_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_background_Y_R_blk_n <= hwReg_background_Y_R_empty_n;
        else 
            hwReg_background_Y_R_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_background_Y_R_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_background_Y_R_read <= ap_const_logic_1;
        else 
            hwReg_background_Y_R_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_height_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_height_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_height_blk_n <= hwReg_height_empty_n;
        else 
            hwReg_height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_height_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_height_read <= ap_const_logic_1;
        else 
            hwReg_height_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_layerAlpha_1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_layerAlpha_1_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerAlpha_1_blk_n <= hwReg_layerAlpha_1_empty_n;
        else 
            hwReg_layerAlpha_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_layerAlpha_1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerAlpha_1_read <= ap_const_logic_1;
        else 
            hwReg_layerAlpha_1_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_layerEnable_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_layerEnable_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerEnable_blk_n <= hwReg_layerEnable_empty_n;
        else 
            hwReg_layerEnable_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_layerEnable_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerEnable_read <= ap_const_logic_1;
        else 
            hwReg_layerEnable_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_layerHeight_1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_layerHeight_1_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerHeight_1_blk_n <= hwReg_layerHeight_1_empty_n;
        else 
            hwReg_layerHeight_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_layerHeight_1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerHeight_1_read <= ap_const_logic_1;
        else 
            hwReg_layerHeight_1_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_layerScaleFactor_1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_layerScaleFactor_1_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerScaleFactor_1_blk_n <= hwReg_layerScaleFactor_1_empty_n;
        else 
            hwReg_layerScaleFactor_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_layerScaleFactor_1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerScaleFactor_1_read <= ap_const_logic_1;
        else 
            hwReg_layerScaleFactor_1_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_layerStartX_1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_layerStartX_1_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerStartX_1_blk_n <= hwReg_layerStartX_1_empty_n;
        else 
            hwReg_layerStartX_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_layerStartX_1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerStartX_1_read <= ap_const_logic_1;
        else 
            hwReg_layerStartX_1_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_layerStartY_1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_layerStartY_1_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerStartY_1_blk_n <= hwReg_layerStartY_1_empty_n;
        else 
            hwReg_layerStartY_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_layerStartY_1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerStartY_1_read <= ap_const_logic_1;
        else 
            hwReg_layerStartY_1_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_layerWidth_1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_layerWidth_1_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerWidth_1_blk_n <= hwReg_layerWidth_1_empty_n;
        else 
            hwReg_layerWidth_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_layerWidth_1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_layerWidth_1_read <= ap_const_logic_1;
        else 
            hwReg_layerWidth_1_read <= ap_const_logic_0;
        end if; 
    end process;


    hwReg_width_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_width_blk_n <= hwReg_width_empty_n;
        else 
            hwReg_width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hwReg_width_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, hwReg_width_empty_n, hwReg_height_empty_n, hwReg_background_Y_R_empty_n, hwReg_background_U_G_empty_n, hwReg_background_V_B_empty_n, hwReg_layerEnable_empty_n, hwReg_layerAlpha_1_empty_n, hwReg_layerStartX_1_empty_n, hwReg_layerStartY_1_empty_n, hwReg_layerWidth_1_empty_n, hwReg_layerHeight_1_empty_n, hwReg_layerScaleFactor_1_empty_n, HwReg_width_c41_full_n, HwReg_height_c45_full_n)
    begin
        if ((not(((hwReg_layerAlpha_1_empty_n = ap_const_logic_0) or (hwReg_layerEnable_empty_n = ap_const_logic_0) or (hwReg_background_V_B_empty_n = ap_const_logic_0) or (hwReg_background_U_G_empty_n = ap_const_logic_0) or (hwReg_background_Y_R_empty_n = ap_const_logic_0) or (hwReg_height_empty_n = ap_const_logic_0) or (hwReg_width_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_height_c45_full_n) or (ap_const_logic_0 = HwReg_width_c41_full_n) or (ap_done_reg = ap_const_logic_1) or (hwReg_layerScaleFactor_1_empty_n = ap_const_logic_0) or (hwReg_layerHeight_1_empty_n = ap_const_logic_0) or (hwReg_layerWidth_1_empty_n = ap_const_logic_0) or (hwReg_layerStartY_1_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (hwReg_layerStartX_1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            hwReg_width_read <= ap_const_logic_1;
        else 
            hwReg_width_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln269_fu_313_p2 <= "1" when (y_fu_86 = height_reg_416) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln269_fu_313_p2)
    begin
        if (((icmp_ln269_fu_313_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    layerHeight_cast_fu_274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(layerHeight_fu_263_p1),17));
    layerHeight_fu_263_p1 <= shl_ln251_fu_244_p2(16 - 1 downto 0);
    layerStartX_cast_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(layerStartX_reg_395),17));
    layerStartY_cast_fu_271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(layerStartY_reg_389),17));
    layerWidth_cast_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(layerWidth_fu_267_p1),17));
    layerWidth_fu_267_p1 <= shl_ln252_fu_253_p2(16 - 1 downto 0);
    notrhs_fu_335_p2 <= "1" when (unsigned(zext_ln269_1_fu_309_p1) < unsigned(add64_reg_441)) else "0";

    outLayer0_read_assign_proc : process(grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer0_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            outLayer0_read <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer0_read;
        else 
            outLayer0_read <= ap_const_logic_0;
        end if; 
    end process;

    outLayer1_din <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer1_din;

    outLayer1_write_assign_proc : process(grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer1_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            outLayer1_write <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_outLayer1_write;
        else 
            outLayer1_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev12_fu_329_p2 <= (ult_fu_324_p2 xor ap_const_lv1_1);
    rev_fu_297_p2 <= (tmp_reg_431 xor ap_const_lv1_1);
    shl_ln251_fu_244_p2 <= std_logic_vector(shift_left(unsigned(zext_ln251_fu_238_p1),to_integer(unsigned('0' & zext_ln251_1_fu_241_p1(31-1 downto 0)))));
    shl_ln252_fu_253_p2 <= std_logic_vector(shift_left(unsigned(zext_ln252_fu_250_p1),to_integer(unsigned('0' & zext_ln251_1_fu_241_p1(31-1 downto 0)))));

    srcLayer1Alphax_read_assign_proc : process(grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_srcLayer1Alphax_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            srcLayer1Alphax_read <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_srcLayer1Alphax_read;
        else 
            srcLayer1Alphax_read <= ap_const_logic_0;
        end if; 
    end process;


    srcLayer1x_read_assign_proc : process(grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_srcLayer1x_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            srcLayer1x_read <= grp_v_mix_core_alpha_true_true_Pipeline_VITIS_LOOP_271_3_fu_190_srcLayer1x_read;
        else 
            srcLayer1x_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln246_fu_259_p1 <= grp_reg_unsigned_short_s_fu_215_ap_return(9 - 1 downto 0);
    ult_fu_324_p2 <= "1" when (unsigned(zext_ln269_fu_305_p1) < unsigned(layerStartY_reg_389)) else "0";
    y_12_fu_318_p2 <= std_logic_vector(unsigned(y_fu_86) + unsigned(ap_const_lv10_1));
    zext_ln251_1_fu_241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hwReg_layerScaleFactor_1_read_reg_374),32));
    zext_ln251_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hwReg_layerHeight_1_read_reg_379),32));
    zext_ln252_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hwReg_layerWidth_1_read_reg_384),32));
    zext_ln269_1_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_fu_86),17));
    zext_ln269_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_fu_86),16));
end behav;
