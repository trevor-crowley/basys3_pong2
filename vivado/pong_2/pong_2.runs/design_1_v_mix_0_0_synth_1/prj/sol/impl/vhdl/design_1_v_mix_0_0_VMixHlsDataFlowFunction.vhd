-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_mix_0_0_VMixHlsDataFlowFunction is
port (
    p_read : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (1 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read211 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read312 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axis_video_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video1_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    s_axis_video1_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    s_axis_video1_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    s_axis_video1_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video1_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video1_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read_ap_vld : IN STD_LOGIC;
    p_read1_ap_vld : IN STD_LOGIC;
    p_read2_ap_vld : IN STD_LOGIC;
    p_read3_ap_vld : IN STD_LOGIC;
    p_read4_ap_vld : IN STD_LOGIC;
    p_read5_ap_vld : IN STD_LOGIC;
    p_read8_ap_vld : IN STD_LOGIC;
    p_read9_ap_vld : IN STD_LOGIC;
    p_read10_ap_vld : IN STD_LOGIC;
    p_read13_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    s_axis_video_TVALID : IN STD_LOGIC;
    s_axis_video_TREADY : OUT STD_LOGIC;
    p_read312_ap_vld : IN STD_LOGIC;
    p_read211_ap_vld : IN STD_LOGIC;
    p_read6_ap_vld : IN STD_LOGIC;
    s_axis_video1_TVALID : IN STD_LOGIC;
    s_axis_video1_TREADY : OUT STD_LOGIC;
    p_read11_ap_vld : IN STD_LOGIC;
    p_read7_ap_vld : IN STD_LOGIC;
    p_read17_ap_vld : IN STD_LOGIC;
    m_axis_video_TVALID : OUT STD_LOGIC;
    m_axis_video_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of design_1_v_mix_0_0_VMixHlsDataFlowFunction is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal entry_proc_U0_ap_start : STD_LOGIC;
    signal entry_proc_U0_ap_done : STD_LOGIC;
    signal entry_proc_U0_ap_continue : STD_LOGIC;
    signal entry_proc_U0_ap_idle : STD_LOGIC;
    signal entry_proc_U0_ap_ready : STD_LOGIC;
    signal entry_proc_U0_start_out : STD_LOGIC;
    signal entry_proc_U0_start_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_width_c42_din : STD_LOGIC_VECTOR (9 downto 0);
    signal entry_proc_U0_HwReg_width_c42_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_height_c46_din : STD_LOGIC_VECTOR (9 downto 0);
    signal entry_proc_U0_HwReg_height_c46_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_background_Y_R_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_HwReg_background_Y_R_c_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_background_U_G_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_HwReg_background_U_G_c_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_background_V_B_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_HwReg_background_V_B_c_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_layerEnable_c_din : STD_LOGIC_VECTOR (1 downto 0);
    signal entry_proc_U0_HwReg_layerEnable_c_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_layerAlpha_1_c_din : STD_LOGIC_VECTOR (9 downto 0);
    signal entry_proc_U0_HwReg_layerAlpha_1_c_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_layerStartX_1_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_HwReg_layerStartX_1_c_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_layerStartY_1_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal entry_proc_U0_HwReg_layerStartY_1_c_write : STD_LOGIC;
    signal entry_proc_U0_HwReg_layerScaleFactor_1_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc_U0_HwReg_layerScaleFactor_1_c_write : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_ap_start : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_ap_done : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_start_out : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_start_write : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_s_axis_video_TREADY : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_srcLayer0_din : STD_LOGIC_VECTOR (23 downto 0);
    signal AXIvideo2MultiPixStream_U0_srcLayer0_write : STD_LOGIC;
    signal AXIvideo2MultiPixStream_U0_p_read_c48_din : STD_LOGIC_VECTOR (0 downto 0);
    signal AXIvideo2MultiPixStream_U0_p_read_c48_write : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_ap_start : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_ap_done : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_ap_continue : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_ap_idle : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_ap_ready : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_start_out : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_start_write : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_srcLayer0_read : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_layerEnableFlag_read : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_srcLayer0Yuv422_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_420_to_422_false_U0_srcLayer0Yuv422_write : STD_LOGIC;
    signal v_mix_420_to_422_false_U0_p_read_c47_din : STD_LOGIC_VECTOR (0 downto 0);
    signal v_mix_420_to_422_false_U0_p_read_c47_write : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_ap_start : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_ap_done : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_ap_continue : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_ap_idle : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_ap_ready : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_start_out : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_start_write : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_srcLayer0Yuv422_read : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_layerEnableFlag_read : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_srcLayer0Yuv_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_422_to_444_false_U0_srcLayer0Yuv_write : STD_LOGIC;
    signal v_mix_422_to_444_false_U0_p_read_c_din : STD_LOGIC_VECTOR (0 downto 0);
    signal v_mix_422_to_444_false_U0_p_read_c_write : STD_LOGIC;
    signal v_mix_yuv2rgb_false_U0_ap_start : STD_LOGIC;
    signal v_mix_yuv2rgb_false_U0_ap_done : STD_LOGIC;
    signal v_mix_yuv2rgb_false_U0_ap_continue : STD_LOGIC;
    signal v_mix_yuv2rgb_false_U0_ap_idle : STD_LOGIC;
    signal v_mix_yuv2rgb_false_U0_ap_ready : STD_LOGIC;
    signal v_mix_yuv2rgb_false_U0_srcLayer0Yuv_read : STD_LOGIC;
    signal v_mix_yuv2rgb_false_U0_layerEnableFlag_read : STD_LOGIC;
    signal v_mix_yuv2rgb_false_U0_outLayer0_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_yuv2rgb_false_U0_outLayer0_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_ap_start : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_start_full_n : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_ap_done : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_ap_continue : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_ap_idle : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_ap_ready : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_start_out : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_start_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_s_axis_video1_TREADY : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_srcLayer1_din : STD_LOGIC_VECTOR (23 downto 0);
    signal AXIvideoAlpha2MultiPixStream_U0_srcLayer1_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_srcLayer1Alpha_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideoAlpha2MultiPixStream_U0_srcLayer1Alpha_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_p_read1_c_din : STD_LOGIC_VECTOR (0 downto 0);
    signal AXIvideoAlpha2MultiPixStream_U0_p_read1_c_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_p_read1_c52_din : STD_LOGIC_VECTOR (0 downto 0);
    signal AXIvideoAlpha2MultiPixStream_U0_p_read1_c52_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c53_din : STD_LOGIC_VECTOR (15 downto 0);
    signal AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c53_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c57_din : STD_LOGIC_VECTOR (15 downto 0);
    signal AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c57_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c58_din : STD_LOGIC_VECTOR (15 downto 0);
    signal AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c58_write : STD_LOGIC;
    signal AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c62_din : STD_LOGIC_VECTOR (15 downto 0);
    signal AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c62_write : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_ap_start : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_ap_done : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_ap_continue : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_ap_idle : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_ap_ready : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_start_out : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_start_write : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_srcLayer1_read : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_read : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_read : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_p_read1_read : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_srcLayer1Yuv422_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_420_to_422_false_1_U0_srcLayer1Yuv422_write : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_p_read1_c51_din : STD_LOGIC_VECTOR (0 downto 0);
    signal v_mix_420_to_422_false_1_U0_p_read1_c51_write : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_c56_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_c56_write : STD_LOGIC;
    signal v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_c61_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_c61_write : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_ap_start : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_ap_done : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_ap_continue : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_ap_idle : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_ap_ready : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_start_out : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_start_write : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_srcLayer1Yuv422_read : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_read : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_read : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_p_read1_read : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_srcLayer1Yuv_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_422_to_444_false_2_U0_srcLayer1Yuv_write : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_p_read1_c50_din : STD_LOGIC_VECTOR (0 downto 0);
    signal v_mix_422_to_444_false_2_U0_p_read1_c50_write : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_c55_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_c55_write : STD_LOGIC;
    signal v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_c60_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_c60_write : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_ap_start : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_ap_done : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_ap_continue : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_ap_idle : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_ap_ready : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_start_out : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_start_write : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_srcLayer1Yuv_read : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_read : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_read : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_p_read1_read : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_srcLayer1Rgb_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_yuv2rgb_false_3_U0_srcLayer1Rgb_write : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_p_read1_c49_din : STD_LOGIC_VECTOR (0 downto 0);
    signal v_mix_yuv2rgb_false_3_U0_p_read1_c49_write : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_c54_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_c54_write : STD_LOGIC;
    signal v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_c59_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_c59_write : STD_LOGIC;
    signal v_mix_upsample_false_U0_ap_start : STD_LOGIC;
    signal v_mix_upsample_false_U0_ap_done : STD_LOGIC;
    signal v_mix_upsample_false_U0_ap_continue : STD_LOGIC;
    signal v_mix_upsample_false_U0_ap_idle : STD_LOGIC;
    signal v_mix_upsample_false_U0_ap_ready : STD_LOGIC;
    signal v_mix_upsample_false_U0_srcLayer1Rgb_read : STD_LOGIC;
    signal v_mix_upsample_false_U0_HwReg_layerHeight_1_read : STD_LOGIC;
    signal v_mix_upsample_false_U0_HwReg_layerWidth_1_read : STD_LOGIC;
    signal v_mix_upsample_false_U0_p_read1_read : STD_LOGIC;
    signal v_mix_upsample_false_U0_srcLayer1x_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_upsample_false_U0_srcLayer1x_write : STD_LOGIC;
    signal v_mix_upsample_false_U0_HwReg_layerWidth_1_c_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_upsample_false_U0_HwReg_layerWidth_1_c_write : STD_LOGIC;
    signal v_mix_upsample_false_U0_HwReg_layerHeight_1_c_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_upsample_false_U0_HwReg_layerHeight_1_c_write : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_ap_start : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_ap_done : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_ap_continue : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_ap_idle : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_ap_ready : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_srcLayer1Alpha_read : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_HwReg_layerHeight_1_read : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_HwReg_layerWidth_1_read : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_p_read1_read : STD_LOGIC;
    signal v_mix_upsample_alpha_false_U0_srcLayer1Alphax_din : STD_LOGIC_VECTOR (7 downto 0);
    signal v_mix_upsample_alpha_false_U0_srcLayer1Alphax_write : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_ap_start : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_ap_done : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_ap_continue : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_ap_idle : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_ap_ready : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_start_out : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_start_write : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_outLayer0_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_srcLayer1x_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_srcLayer1Alphax_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_width_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_height_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_background_Y_R_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_background_U_G_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_background_V_B_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_layerEnable_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_layerAlpha_1_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_layerStartX_1_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_layerStartY_1_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_layerWidth_1_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_layerHeight_1_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_hwReg_layerScaleFactor_1_read : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_outLayer1_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_core_alpha_true_true_U0_outLayer1_write : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_HwReg_width_c41_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_core_alpha_true_true_U0_HwReg_width_c41_write : STD_LOGIC;
    signal v_mix_core_alpha_true_true_U0_HwReg_height_c45_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_core_alpha_true_true_U0_HwReg_height_c45_write : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_ap_start : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_ap_done : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_ap_continue : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_ap_idle : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_ap_ready : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_start_out : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_start_write : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_outLayer1_read : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_height_read : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_width_read : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_outYuv_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_rgb2yuv_false_U0_outYuv_write : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_HwReg_width_c40_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_rgb2yuv_false_U0_HwReg_width_c40_write : STD_LOGIC;
    signal v_mix_rgb2yuv_false_U0_HwReg_height_c44_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_rgb2yuv_false_U0_HwReg_height_c44_write : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_ap_start : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_ap_done : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_ap_continue : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_ap_idle : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_ap_ready : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_start_out : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_start_write : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_outYuv_read : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_height_read : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_width_read : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_out422_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_444_to_422_false_U0_out422_write : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_HwReg_width_c39_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_444_to_422_false_U0_HwReg_width_c39_write : STD_LOGIC;
    signal v_mix_444_to_422_false_U0_HwReg_height_c43_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_444_to_422_false_U0_HwReg_height_c43_write : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_ap_start : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_ap_done : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_ap_continue : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_ap_idle : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_ap_ready : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_start_out : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_start_write : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_out422_read : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_height_read : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_width_read : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_out420_din : STD_LOGIC_VECTOR (23 downto 0);
    signal v_mix_422_to_420_false_U0_out420_write : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_HwReg_width_c_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_422_to_420_false_U0_HwReg_width_c_write : STD_LOGIC;
    signal v_mix_422_to_420_false_U0_HwReg_height_c_din : STD_LOGIC_VECTOR (9 downto 0);
    signal v_mix_422_to_420_false_U0_HwReg_height_c_write : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_start : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_done : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_out420_read : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TVALID : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_m_axis_video_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal MultiPixStream2AXIvideo_U0_HwReg_height_read : STD_LOGIC;
    signal MultiPixStream2AXIvideo_U0_HwReg_width_read : STD_LOGIC;
    signal HwReg_width_c42_full_n : STD_LOGIC;
    signal HwReg_width_c42_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_width_c42_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_width_c42_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_width_c42_empty_n : STD_LOGIC;
    signal HwReg_height_c46_full_n : STD_LOGIC;
    signal HwReg_height_c46_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_height_c46_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_height_c46_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_height_c46_empty_n : STD_LOGIC;
    signal HwReg_background_Y_R_c_full_n : STD_LOGIC;
    signal HwReg_background_Y_R_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal HwReg_background_Y_R_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_background_Y_R_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_background_Y_R_c_empty_n : STD_LOGIC;
    signal HwReg_background_U_G_c_full_n : STD_LOGIC;
    signal HwReg_background_U_G_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal HwReg_background_U_G_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_background_U_G_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_background_U_G_c_empty_n : STD_LOGIC;
    signal HwReg_background_V_B_c_full_n : STD_LOGIC;
    signal HwReg_background_V_B_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal HwReg_background_V_B_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_background_V_B_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_background_V_B_c_empty_n : STD_LOGIC;
    signal HwReg_layerEnable_c_full_n : STD_LOGIC;
    signal HwReg_layerEnable_c_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerEnable_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerEnable_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerEnable_c_empty_n : STD_LOGIC;
    signal HwReg_layerAlpha_1_c_full_n : STD_LOGIC;
    signal HwReg_layerAlpha_1_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerAlpha_1_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerAlpha_1_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerAlpha_1_c_empty_n : STD_LOGIC;
    signal HwReg_layerStartX_1_c_full_n : STD_LOGIC;
    signal HwReg_layerStartX_1_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal HwReg_layerStartX_1_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerStartX_1_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerStartX_1_c_empty_n : STD_LOGIC;
    signal HwReg_layerStartY_1_c_full_n : STD_LOGIC;
    signal HwReg_layerStartY_1_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal HwReg_layerStartY_1_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerStartY_1_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerStartY_1_c_empty_n : STD_LOGIC;
    signal HwReg_layerScaleFactor_1_c_full_n : STD_LOGIC;
    signal HwReg_layerScaleFactor_1_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal HwReg_layerScaleFactor_1_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerScaleFactor_1_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal HwReg_layerScaleFactor_1_c_empty_n : STD_LOGIC;
    signal srcLayer0_full_n : STD_LOGIC;
    signal srcLayer0_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcLayer0_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer0_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer0_empty_n : STD_LOGIC;
    signal p_read_c48_full_n : STD_LOGIC;
    signal p_read_c48_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read_c48_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read_c48_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read_c48_empty_n : STD_LOGIC;
    signal srcLayer0Yuv422_full_n : STD_LOGIC;
    signal srcLayer0Yuv422_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcLayer0Yuv422_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer0Yuv422_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer0Yuv422_empty_n : STD_LOGIC;
    signal p_read_c47_full_n : STD_LOGIC;
    signal p_read_c47_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read_c47_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read_c47_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read_c47_empty_n : STD_LOGIC;
    signal srcLayer0Yuv_full_n : STD_LOGIC;
    signal srcLayer0Yuv_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcLayer0Yuv_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer0Yuv_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer0Yuv_empty_n : STD_LOGIC;
    signal p_read_c_full_n : STD_LOGIC;
    signal p_read_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read_c_empty_n : STD_LOGIC;
    signal outLayer0_full_n : STD_LOGIC;
    signal outLayer0_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal outLayer0_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal outLayer0_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal outLayer0_empty_n : STD_LOGIC;
    signal srcLayer1_full_n : STD_LOGIC;
    signal srcLayer1_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcLayer1_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1_empty_n : STD_LOGIC;
    signal srcLayer1Alpha_full_n : STD_LOGIC;
    signal srcLayer1Alpha_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal srcLayer1Alpha_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal srcLayer1Alpha_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal srcLayer1Alpha_empty_n : STD_LOGIC;
    signal p_read1_c_full_n : STD_LOGIC;
    signal p_read1_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read1_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c_empty_n : STD_LOGIC;
    signal p_read1_c52_full_n : STD_LOGIC;
    signal p_read1_c52_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read1_c52_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c52_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c52_empty_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c53_full_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c53_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal HwReg_layerWidth_1_c53_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c53_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c53_empty_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c57_full_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c57_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal HwReg_layerWidth_1_c57_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c57_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c57_empty_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c58_full_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c58_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal HwReg_layerHeight_1_c58_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c58_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c58_empty_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c62_full_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c62_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal HwReg_layerHeight_1_c62_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c62_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c62_empty_n : STD_LOGIC;
    signal srcLayer1Yuv422_full_n : STD_LOGIC;
    signal srcLayer1Yuv422_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcLayer1Yuv422_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1Yuv422_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1Yuv422_empty_n : STD_LOGIC;
    signal p_read1_c51_full_n : STD_LOGIC;
    signal p_read1_c51_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read1_c51_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c51_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c51_empty_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c56_full_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c56_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerWidth_1_c56_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c56_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c56_empty_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c61_full_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c61_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerHeight_1_c61_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c61_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c61_empty_n : STD_LOGIC;
    signal srcLayer1Yuv_full_n : STD_LOGIC;
    signal srcLayer1Yuv_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcLayer1Yuv_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1Yuv_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1Yuv_empty_n : STD_LOGIC;
    signal p_read1_c50_full_n : STD_LOGIC;
    signal p_read1_c50_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read1_c50_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c50_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c50_empty_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c55_full_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c55_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerWidth_1_c55_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c55_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c55_empty_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c60_full_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c60_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerHeight_1_c60_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c60_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c60_empty_n : STD_LOGIC;
    signal srcLayer1Rgb_full_n : STD_LOGIC;
    signal srcLayer1Rgb_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcLayer1Rgb_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1Rgb_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1Rgb_empty_n : STD_LOGIC;
    signal p_read1_c49_full_n : STD_LOGIC;
    signal p_read1_c49_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read1_c49_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c49_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal p_read1_c49_empty_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c54_full_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c54_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerWidth_1_c54_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c54_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c54_empty_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c59_full_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c59_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerHeight_1_c59_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c59_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c59_empty_n : STD_LOGIC;
    signal srcLayer1x_full_n : STD_LOGIC;
    signal srcLayer1x_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcLayer1x_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1x_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcLayer1x_empty_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c_full_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerWidth_1_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerWidth_1_c_empty_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c_full_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerHeight_1_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_layerHeight_1_c_empty_n : STD_LOGIC;
    signal srcLayer1Alphax_full_n : STD_LOGIC;
    signal srcLayer1Alphax_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal srcLayer1Alphax_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal srcLayer1Alphax_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal srcLayer1Alphax_empty_n : STD_LOGIC;
    signal outLayer1_full_n : STD_LOGIC;
    signal outLayer1_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal outLayer1_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal outLayer1_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal outLayer1_empty_n : STD_LOGIC;
    signal HwReg_width_c41_full_n : STD_LOGIC;
    signal HwReg_width_c41_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_width_c41_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_width_c41_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_width_c41_empty_n : STD_LOGIC;
    signal HwReg_height_c45_full_n : STD_LOGIC;
    signal HwReg_height_c45_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_height_c45_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_height_c45_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_height_c45_empty_n : STD_LOGIC;
    signal outYuv_full_n : STD_LOGIC;
    signal outYuv_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal outYuv_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal outYuv_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal outYuv_empty_n : STD_LOGIC;
    signal HwReg_width_c40_full_n : STD_LOGIC;
    signal HwReg_width_c40_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_width_c40_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_width_c40_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_width_c40_empty_n : STD_LOGIC;
    signal HwReg_height_c44_full_n : STD_LOGIC;
    signal HwReg_height_c44_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_height_c44_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_height_c44_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_height_c44_empty_n : STD_LOGIC;
    signal out422_full_n : STD_LOGIC;
    signal out422_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal out422_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal out422_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal out422_empty_n : STD_LOGIC;
    signal HwReg_width_c39_full_n : STD_LOGIC;
    signal HwReg_width_c39_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_width_c39_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_width_c39_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_width_c39_empty_n : STD_LOGIC;
    signal HwReg_height_c43_full_n : STD_LOGIC;
    signal HwReg_height_c43_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_height_c43_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_height_c43_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_height_c43_empty_n : STD_LOGIC;
    signal out420_full_n : STD_LOGIC;
    signal out420_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal out420_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal out420_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal out420_empty_n : STD_LOGIC;
    signal HwReg_width_c_full_n : STD_LOGIC;
    signal HwReg_width_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_width_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_width_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_width_c_empty_n : STD_LOGIC;
    signal HwReg_height_c_full_n : STD_LOGIC;
    signal HwReg_height_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_height_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_height_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal HwReg_height_c_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2MultiPixStream_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_AXIvideoAlpha2MultiPixStream_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideoAlpha2MultiPixStream_U0_ap_ready : STD_LOGIC;
    signal start_for_v_mix_core_alpha_true_true_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_core_alpha_true_true_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_core_alpha_true_true_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_core_alpha_true_true_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_420_to_422_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_420_to_422_false_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_420_to_422_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_420_to_422_false_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_422_to_444_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_422_to_444_false_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_422_to_444_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_422_to_444_false_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_yuv2rgb_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_yuv2rgb_false_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_yuv2rgb_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_yuv2rgb_false_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_420_to_422_false_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_420_to_422_false_1_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_420_to_422_false_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_420_to_422_false_1_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_upsample_alpha_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_upsample_alpha_false_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_upsample_alpha_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_upsample_alpha_false_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_422_to_444_false_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_422_to_444_false_2_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_422_to_444_false_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_422_to_444_false_2_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_yuv2rgb_false_3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_yuv2rgb_false_3_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_yuv2rgb_false_3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_yuv2rgb_false_3_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_upsample_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_upsample_false_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_upsample_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_upsample_false_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_rgb2yuv_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_rgb2yuv_false_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_rgb2yuv_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_rgb2yuv_false_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_444_to_422_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_444_to_422_false_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_444_to_422_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_444_to_422_false_U0_empty_n : STD_LOGIC;
    signal start_for_v_mix_422_to_420_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_422_to_420_false_U0_full_n : STD_LOGIC;
    signal start_for_v_mix_422_to_420_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v_mix_422_to_420_false_U0_empty_n : STD_LOGIC;
    signal start_for_MultiPixStream2AXIvideo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_MultiPixStream2AXIvideo_U0_full_n : STD_LOGIC;
    signal start_for_MultiPixStream2AXIvideo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_MultiPixStream2AXIvideo_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_mix_0_0_entry_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_width_c42_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_width_c42_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_width_c42_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_width_c42_full_n : IN STD_LOGIC;
        HwReg_width_c42_write : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_height_c46_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_height_c46_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_height_c46_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_height_c46_full_n : IN STD_LOGIC;
        HwReg_height_c46_write : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        HwReg_background_Y_R_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        HwReg_background_Y_R_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_background_Y_R_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_background_Y_R_c_full_n : IN STD_LOGIC;
        HwReg_background_Y_R_c_write : OUT STD_LOGIC;
        p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
        HwReg_background_U_G_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        HwReg_background_U_G_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_background_U_G_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_background_U_G_c_full_n : IN STD_LOGIC;
        HwReg_background_U_G_c_write : OUT STD_LOGIC;
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        HwReg_background_V_B_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        HwReg_background_V_B_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_background_V_B_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_background_V_B_c_full_n : IN STD_LOGIC;
        HwReg_background_V_B_c_write : OUT STD_LOGIC;
        p_read5 : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerEnable_c_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerEnable_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerEnable_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerEnable_c_full_n : IN STD_LOGIC;
        HwReg_layerEnable_c_write : OUT STD_LOGIC;
        p_read6 : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerAlpha_1_c_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerAlpha_1_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerAlpha_1_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerAlpha_1_c_full_n : IN STD_LOGIC;
        HwReg_layerAlpha_1_c_write : OUT STD_LOGIC;
        p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerStartX_1_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerStartX_1_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerStartX_1_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerStartX_1_c_full_n : IN STD_LOGIC;
        HwReg_layerStartX_1_c_write : OUT STD_LOGIC;
        p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerStartY_1_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerStartY_1_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerStartY_1_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerStartY_1_c_full_n : IN STD_LOGIC;
        HwReg_layerStartY_1_c_write : OUT STD_LOGIC;
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        HwReg_layerScaleFactor_1_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        HwReg_layerScaleFactor_1_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerScaleFactor_1_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        HwReg_layerScaleFactor_1_c_full_n : IN STD_LOGIC;
        HwReg_layerScaleFactor_1_c_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_AXIvideo2MultiPixStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        s_axis_video_TVALID : IN STD_LOGIC;
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        srcLayer0_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer0_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0_full_n : IN STD_LOGIC;
        srcLayer0_write : OUT STD_LOGIC;
        Height : IN STD_LOGIC_VECTOR (9 downto 0);
        WidthIn : IN STD_LOGIC_VECTOR (9 downto 0);
        layerEnableFlag : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read_c48_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read_c48_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read_c48_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read_c48_full_n : IN STD_LOGIC;
        p_read_c48_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_420_to_422_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        srcLayer0_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer0_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0_empty_n : IN STD_LOGIC;
        srcLayer0_read : OUT STD_LOGIC;
        height : IN STD_LOGIC_VECTOR (9 downto 0);
        width : IN STD_LOGIC_VECTOR (9 downto 0);
        layerEnableFlag_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        layerEnableFlag_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layerEnableFlag_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layerEnableFlag_empty_n : IN STD_LOGIC;
        layerEnableFlag_read : OUT STD_LOGIC;
        srcLayer0Yuv422_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer0Yuv422_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0Yuv422_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0Yuv422_full_n : IN STD_LOGIC;
        srcLayer0Yuv422_write : OUT STD_LOGIC;
        p_read_c47_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read_c47_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read_c47_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read_c47_full_n : IN STD_LOGIC;
        p_read_c47_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_422_to_444_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        srcLayer0Yuv422_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer0Yuv422_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0Yuv422_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0Yuv422_empty_n : IN STD_LOGIC;
        srcLayer0Yuv422_read : OUT STD_LOGIC;
        height : IN STD_LOGIC_VECTOR (9 downto 0);
        width : IN STD_LOGIC_VECTOR (9 downto 0);
        layerEnableFlag_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        layerEnableFlag_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layerEnableFlag_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layerEnableFlag_empty_n : IN STD_LOGIC;
        layerEnableFlag_read : OUT STD_LOGIC;
        srcLayer0Yuv_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer0Yuv_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0Yuv_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0Yuv_full_n : IN STD_LOGIC;
        srcLayer0Yuv_write : OUT STD_LOGIC;
        p_read_c_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read_c_full_n : IN STD_LOGIC;
        p_read_c_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_yuv2rgb_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        srcLayer0Yuv_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer0Yuv_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0Yuv_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer0Yuv_empty_n : IN STD_LOGIC;
        srcLayer0Yuv_read : OUT STD_LOGIC;
        height : IN STD_LOGIC_VECTOR (9 downto 0);
        width : IN STD_LOGIC_VECTOR (9 downto 0);
        layerEnableFlag_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        layerEnableFlag_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layerEnableFlag_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layerEnableFlag_empty_n : IN STD_LOGIC;
        layerEnableFlag_read : OUT STD_LOGIC;
        outLayer0_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        outLayer0_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer0_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer0_full_n : IN STD_LOGIC;
        outLayer0_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_AXIvideoAlpha2MultiPixStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_axis_video1_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        s_axis_video1_TVALID : IN STD_LOGIC;
        s_axis_video1_TREADY : OUT STD_LOGIC;
        s_axis_video1_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video1_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video1_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video1_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video1_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        srcLayer1_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1_full_n : IN STD_LOGIC;
        srcLayer1_write : OUT STD_LOGIC;
        srcLayer1Alpha_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcLayer1Alpha_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alpha_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alpha_full_n : IN STD_LOGIC;
        srcLayer1Alpha_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read1_c_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read1_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c_full_n : IN STD_LOGIC;
        p_read1_c_write : OUT STD_LOGIC;
        p_read1_c52_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read1_c52_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c52_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c52_full_n : IN STD_LOGIC;
        p_read1_c52_write : OUT STD_LOGIC;
        HwReg_layerWidth_1_c53_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerWidth_1_c53_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c53_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c53_full_n : IN STD_LOGIC;
        HwReg_layerWidth_1_c53_write : OUT STD_LOGIC;
        HwReg_layerWidth_1_c57_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerWidth_1_c57_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c57_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c57_full_n : IN STD_LOGIC;
        HwReg_layerWidth_1_c57_write : OUT STD_LOGIC;
        HwReg_layerHeight_1_c58_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerHeight_1_c58_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c58_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c58_full_n : IN STD_LOGIC;
        HwReg_layerHeight_1_c58_write : OUT STD_LOGIC;
        HwReg_layerHeight_1_c62_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerHeight_1_c62_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c62_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c62_full_n : IN STD_LOGIC;
        HwReg_layerHeight_1_c62_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_420_to_422_false_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        srcLayer1_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1_empty_n : IN STD_LOGIC;
        srcLayer1_read : OUT STD_LOGIC;
        HwReg_layerHeight_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerHeight_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_empty_n : IN STD_LOGIC;
        HwReg_layerHeight_1_read : OUT STD_LOGIC;
        HwReg_layerWidth_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerWidth_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_empty_n : IN STD_LOGIC;
        HwReg_layerWidth_1_read : OUT STD_LOGIC;
        p_read1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_empty_n : IN STD_LOGIC;
        p_read1_read : OUT STD_LOGIC;
        srcLayer1Yuv422_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1Yuv422_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv422_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv422_full_n : IN STD_LOGIC;
        srcLayer1Yuv422_write : OUT STD_LOGIC;
        p_read1_c51_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read1_c51_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c51_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c51_full_n : IN STD_LOGIC;
        p_read1_c51_write : OUT STD_LOGIC;
        HwReg_layerWidth_1_c56_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerWidth_1_c56_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c56_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c56_full_n : IN STD_LOGIC;
        HwReg_layerWidth_1_c56_write : OUT STD_LOGIC;
        HwReg_layerHeight_1_c61_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerHeight_1_c61_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c61_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c61_full_n : IN STD_LOGIC;
        HwReg_layerHeight_1_c61_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_422_to_444_false_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        srcLayer1Yuv422_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1Yuv422_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv422_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv422_empty_n : IN STD_LOGIC;
        srcLayer1Yuv422_read : OUT STD_LOGIC;
        HwReg_layerHeight_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerHeight_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_empty_n : IN STD_LOGIC;
        HwReg_layerHeight_1_read : OUT STD_LOGIC;
        HwReg_layerWidth_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerWidth_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_empty_n : IN STD_LOGIC;
        HwReg_layerWidth_1_read : OUT STD_LOGIC;
        p_read1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_empty_n : IN STD_LOGIC;
        p_read1_read : OUT STD_LOGIC;
        srcLayer1Yuv_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1Yuv_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv_full_n : IN STD_LOGIC;
        srcLayer1Yuv_write : OUT STD_LOGIC;
        p_read1_c50_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read1_c50_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c50_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c50_full_n : IN STD_LOGIC;
        p_read1_c50_write : OUT STD_LOGIC;
        HwReg_layerWidth_1_c55_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerWidth_1_c55_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c55_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c55_full_n : IN STD_LOGIC;
        HwReg_layerWidth_1_c55_write : OUT STD_LOGIC;
        HwReg_layerHeight_1_c60_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerHeight_1_c60_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c60_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c60_full_n : IN STD_LOGIC;
        HwReg_layerHeight_1_c60_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_yuv2rgb_false_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        srcLayer1Yuv_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1Yuv_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv_empty_n : IN STD_LOGIC;
        srcLayer1Yuv_read : OUT STD_LOGIC;
        HwReg_layerHeight_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerHeight_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_empty_n : IN STD_LOGIC;
        HwReg_layerHeight_1_read : OUT STD_LOGIC;
        HwReg_layerWidth_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerWidth_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_empty_n : IN STD_LOGIC;
        HwReg_layerWidth_1_read : OUT STD_LOGIC;
        p_read1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_empty_n : IN STD_LOGIC;
        p_read1_read : OUT STD_LOGIC;
        srcLayer1Rgb_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1Rgb_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Rgb_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Rgb_full_n : IN STD_LOGIC;
        srcLayer1Rgb_write : OUT STD_LOGIC;
        p_read1_c49_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read1_c49_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c49_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_c49_full_n : IN STD_LOGIC;
        p_read1_c49_write : OUT STD_LOGIC;
        HwReg_layerWidth_1_c54_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerWidth_1_c54_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c54_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c54_full_n : IN STD_LOGIC;
        HwReg_layerWidth_1_c54_write : OUT STD_LOGIC;
        HwReg_layerHeight_1_c59_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerHeight_1_c59_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c59_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c59_full_n : IN STD_LOGIC;
        HwReg_layerHeight_1_c59_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_upsample_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        srcLayer1Rgb_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1Rgb_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Rgb_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Rgb_empty_n : IN STD_LOGIC;
        srcLayer1Rgb_read : OUT STD_LOGIC;
        HwReg_layerHeight_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerHeight_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_empty_n : IN STD_LOGIC;
        HwReg_layerHeight_1_read : OUT STD_LOGIC;
        HwReg_layerWidth_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerWidth_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_empty_n : IN STD_LOGIC;
        HwReg_layerWidth_1_read : OUT STD_LOGIC;
        p_read1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_empty_n : IN STD_LOGIC;
        p_read1_read : OUT STD_LOGIC;
        srcLayer1x_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1x_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1x_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1x_full_n : IN STD_LOGIC;
        srcLayer1x_write : OUT STD_LOGIC;
        HwReg_layerWidth_1_c_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerWidth_1_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_c_full_n : IN STD_LOGIC;
        HwReg_layerWidth_1_c_write : OUT STD_LOGIC;
        HwReg_layerHeight_1_c_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_layerHeight_1_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_c_full_n : IN STD_LOGIC;
        HwReg_layerHeight_1_c_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_upsample_alpha_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        srcLayer1Alpha_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        srcLayer1Alpha_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alpha_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alpha_empty_n : IN STD_LOGIC;
        srcLayer1Alpha_read : OUT STD_LOGIC;
        HwReg_layerHeight_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerHeight_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerHeight_1_empty_n : IN STD_LOGIC;
        HwReg_layerHeight_1_read : OUT STD_LOGIC;
        HwReg_layerWidth_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        HwReg_layerWidth_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_layerWidth_1_empty_n : IN STD_LOGIC;
        HwReg_layerWidth_1_read : OUT STD_LOGIC;
        p_read1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_read1_empty_n : IN STD_LOGIC;
        p_read1_read : OUT STD_LOGIC;
        srcLayer1Alphax_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        srcLayer1Alphax_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alphax_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alphax_full_n : IN STD_LOGIC;
        srcLayer1Alphax_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_core_alpha_true_true_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        outLayer0_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        outLayer0_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer0_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer0_empty_n : IN STD_LOGIC;
        outLayer0_read : OUT STD_LOGIC;
        srcLayer1x_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1x_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1x_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1x_empty_n : IN STD_LOGIC;
        srcLayer1x_read : OUT STD_LOGIC;
        srcLayer1Alphax_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        srcLayer1Alphax_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alphax_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        srcLayer1Alphax_empty_n : IN STD_LOGIC;
        srcLayer1Alphax_read : OUT STD_LOGIC;
        hwReg_width_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        hwReg_width_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_width_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_width_empty_n : IN STD_LOGIC;
        hwReg_width_read : OUT STD_LOGIC;
        hwReg_height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        hwReg_height_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_height_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_height_empty_n : IN STD_LOGIC;
        hwReg_height_read : OUT STD_LOGIC;
        hwReg_background_Y_R_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        hwReg_background_Y_R_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_background_Y_R_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_background_Y_R_empty_n : IN STD_LOGIC;
        hwReg_background_Y_R_read : OUT STD_LOGIC;
        hwReg_background_U_G_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        hwReg_background_U_G_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_background_U_G_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_background_U_G_empty_n : IN STD_LOGIC;
        hwReg_background_U_G_read : OUT STD_LOGIC;
        hwReg_background_V_B_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        hwReg_background_V_B_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_background_V_B_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_background_V_B_empty_n : IN STD_LOGIC;
        hwReg_background_V_B_read : OUT STD_LOGIC;
        hwReg_layerEnable_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        hwReg_layerEnable_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerEnable_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerEnable_empty_n : IN STD_LOGIC;
        hwReg_layerEnable_read : OUT STD_LOGIC;
        hwReg_layerAlpha_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        hwReg_layerAlpha_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerAlpha_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerAlpha_1_empty_n : IN STD_LOGIC;
        hwReg_layerAlpha_1_read : OUT STD_LOGIC;
        hwReg_layerStartX_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        hwReg_layerStartX_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerStartX_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerStartX_1_empty_n : IN STD_LOGIC;
        hwReg_layerStartX_1_read : OUT STD_LOGIC;
        hwReg_layerStartY_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        hwReg_layerStartY_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerStartY_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerStartY_1_empty_n : IN STD_LOGIC;
        hwReg_layerStartY_1_read : OUT STD_LOGIC;
        hwReg_layerWidth_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        hwReg_layerWidth_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        hwReg_layerWidth_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        hwReg_layerWidth_1_empty_n : IN STD_LOGIC;
        hwReg_layerWidth_1_read : OUT STD_LOGIC;
        hwReg_layerHeight_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        hwReg_layerHeight_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        hwReg_layerHeight_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        hwReg_layerHeight_1_empty_n : IN STD_LOGIC;
        hwReg_layerHeight_1_read : OUT STD_LOGIC;
        hwReg_layerScaleFactor_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        hwReg_layerScaleFactor_1_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerScaleFactor_1_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        hwReg_layerScaleFactor_1_empty_n : IN STD_LOGIC;
        hwReg_layerScaleFactor_1_read : OUT STD_LOGIC;
        outLayer1_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        outLayer1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer1_full_n : IN STD_LOGIC;
        outLayer1_write : OUT STD_LOGIC;
        HwReg_width_c41_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_width_c41_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_c41_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_c41_full_n : IN STD_LOGIC;
        HwReg_width_c41_write : OUT STD_LOGIC;
        HwReg_height_c45_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_height_c45_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_c45_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_c45_full_n : IN STD_LOGIC;
        HwReg_height_c45_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_rgb2yuv_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        outLayer1_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        outLayer1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outLayer1_empty_n : IN STD_LOGIC;
        outLayer1_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC;
        outYuv_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        outYuv_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outYuv_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outYuv_full_n : IN STD_LOGIC;
        outYuv_write : OUT STD_LOGIC;
        HwReg_width_c40_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_width_c40_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_c40_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_c40_full_n : IN STD_LOGIC;
        HwReg_width_c40_write : OUT STD_LOGIC;
        HwReg_height_c44_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_height_c44_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_c44_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_c44_full_n : IN STD_LOGIC;
        HwReg_height_c44_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_444_to_422_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        outYuv_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        outYuv_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outYuv_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outYuv_empty_n : IN STD_LOGIC;
        outYuv_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC;
        out422_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        out422_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        out422_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        out422_full_n : IN STD_LOGIC;
        out422_write : OUT STD_LOGIC;
        HwReg_width_c39_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_width_c39_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_c39_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_c39_full_n : IN STD_LOGIC;
        HwReg_width_c39_write : OUT STD_LOGIC;
        HwReg_height_c43_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_height_c43_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_c43_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_c43_full_n : IN STD_LOGIC;
        HwReg_height_c43_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_v_mix_422_to_420_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        out422_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        out422_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        out422_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        out422_empty_n : IN STD_LOGIC;
        out422_read : OUT STD_LOGIC;
        height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        height_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        height_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        height_empty_n : IN STD_LOGIC;
        height_read : OUT STD_LOGIC;
        width_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        width_empty_n : IN STD_LOGIC;
        width_read : OUT STD_LOGIC;
        out420_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        out420_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        out420_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        out420_full_n : IN STD_LOGIC;
        out420_write : OUT STD_LOGIC;
        HwReg_width_c_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_width_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_c_full_n : IN STD_LOGIC;
        HwReg_width_c_write : OUT STD_LOGIC;
        HwReg_height_c_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        HwReg_height_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_c_full_n : IN STD_LOGIC;
        HwReg_height_c_write : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_MultiPixStream2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out420_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        out420_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        out420_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        out420_empty_n : IN STD_LOGIC;
        out420_read : OUT STD_LOGIC;
        m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        m_axis_video_TVALID : OUT STD_LOGIC;
        m_axis_video_TREADY : IN STD_LOGIC;
        m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        HwReg_height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_height_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_height_empty_n : IN STD_LOGIC;
        HwReg_height_read : OUT STD_LOGIC;
        HwReg_width_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        HwReg_width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        HwReg_width_empty_n : IN STD_LOGIC;
        HwReg_width_read : OUT STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w10_d7_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w8_d7_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w2_d7_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w16_d7_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w24_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w1_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w8_d16_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_fifo_w10_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_core_alpha_true_true_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_420_to_422_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_422_to_444_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_yuv2rgb_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_420_to_422_false_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_upsample_alpha_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_422_to_444_false_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_yuv2rgb_false_3_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_upsample_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_rgb2yuv_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_444_to_422_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_v_mix_422_to_420_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component design_1_v_mix_0_0_start_for_MultiPixStream2AXIvideo_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    entry_proc_U0 : component design_1_v_mix_0_0_entry_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => entry_proc_U0_ap_start,
        start_full_n => start_for_v_mix_core_alpha_true_true_U0_full_n,
        ap_done => entry_proc_U0_ap_done,
        ap_continue => entry_proc_U0_ap_continue,
        ap_idle => entry_proc_U0_ap_idle,
        ap_ready => entry_proc_U0_ap_ready,
        start_out => entry_proc_U0_start_out,
        start_write => entry_proc_U0_start_write,
        p_read => p_read,
        HwReg_width_c42_din => entry_proc_U0_HwReg_width_c42_din,
        HwReg_width_c42_num_data_valid => HwReg_width_c42_num_data_valid,
        HwReg_width_c42_fifo_cap => HwReg_width_c42_fifo_cap,
        HwReg_width_c42_full_n => HwReg_width_c42_full_n,
        HwReg_width_c42_write => entry_proc_U0_HwReg_width_c42_write,
        p_read1 => p_read1,
        HwReg_height_c46_din => entry_proc_U0_HwReg_height_c46_din,
        HwReg_height_c46_num_data_valid => HwReg_height_c46_num_data_valid,
        HwReg_height_c46_fifo_cap => HwReg_height_c46_fifo_cap,
        HwReg_height_c46_full_n => HwReg_height_c46_full_n,
        HwReg_height_c46_write => entry_proc_U0_HwReg_height_c46_write,
        p_read2 => p_read2,
        HwReg_background_Y_R_c_din => entry_proc_U0_HwReg_background_Y_R_c_din,
        HwReg_background_Y_R_c_num_data_valid => HwReg_background_Y_R_c_num_data_valid,
        HwReg_background_Y_R_c_fifo_cap => HwReg_background_Y_R_c_fifo_cap,
        HwReg_background_Y_R_c_full_n => HwReg_background_Y_R_c_full_n,
        HwReg_background_Y_R_c_write => entry_proc_U0_HwReg_background_Y_R_c_write,
        p_read3 => p_read3,
        HwReg_background_U_G_c_din => entry_proc_U0_HwReg_background_U_G_c_din,
        HwReg_background_U_G_c_num_data_valid => HwReg_background_U_G_c_num_data_valid,
        HwReg_background_U_G_c_fifo_cap => HwReg_background_U_G_c_fifo_cap,
        HwReg_background_U_G_c_full_n => HwReg_background_U_G_c_full_n,
        HwReg_background_U_G_c_write => entry_proc_U0_HwReg_background_U_G_c_write,
        p_read4 => p_read4,
        HwReg_background_V_B_c_din => entry_proc_U0_HwReg_background_V_B_c_din,
        HwReg_background_V_B_c_num_data_valid => HwReg_background_V_B_c_num_data_valid,
        HwReg_background_V_B_c_fifo_cap => HwReg_background_V_B_c_fifo_cap,
        HwReg_background_V_B_c_full_n => HwReg_background_V_B_c_full_n,
        HwReg_background_V_B_c_write => entry_proc_U0_HwReg_background_V_B_c_write,
        p_read5 => p_read5,
        HwReg_layerEnable_c_din => entry_proc_U0_HwReg_layerEnable_c_din,
        HwReg_layerEnable_c_num_data_valid => HwReg_layerEnable_c_num_data_valid,
        HwReg_layerEnable_c_fifo_cap => HwReg_layerEnable_c_fifo_cap,
        HwReg_layerEnable_c_full_n => HwReg_layerEnable_c_full_n,
        HwReg_layerEnable_c_write => entry_proc_U0_HwReg_layerEnable_c_write,
        p_read6 => p_read8,
        HwReg_layerAlpha_1_c_din => entry_proc_U0_HwReg_layerAlpha_1_c_din,
        HwReg_layerAlpha_1_c_num_data_valid => HwReg_layerAlpha_1_c_num_data_valid,
        HwReg_layerAlpha_1_c_fifo_cap => HwReg_layerAlpha_1_c_fifo_cap,
        HwReg_layerAlpha_1_c_full_n => HwReg_layerAlpha_1_c_full_n,
        HwReg_layerAlpha_1_c_write => entry_proc_U0_HwReg_layerAlpha_1_c_write,
        p_read7 => p_read9,
        HwReg_layerStartX_1_c_din => entry_proc_U0_HwReg_layerStartX_1_c_din,
        HwReg_layerStartX_1_c_num_data_valid => HwReg_layerStartX_1_c_num_data_valid,
        HwReg_layerStartX_1_c_fifo_cap => HwReg_layerStartX_1_c_fifo_cap,
        HwReg_layerStartX_1_c_full_n => HwReg_layerStartX_1_c_full_n,
        HwReg_layerStartX_1_c_write => entry_proc_U0_HwReg_layerStartX_1_c_write,
        p_read8 => p_read10,
        HwReg_layerStartY_1_c_din => entry_proc_U0_HwReg_layerStartY_1_c_din,
        HwReg_layerStartY_1_c_num_data_valid => HwReg_layerStartY_1_c_num_data_valid,
        HwReg_layerStartY_1_c_fifo_cap => HwReg_layerStartY_1_c_fifo_cap,
        HwReg_layerStartY_1_c_full_n => HwReg_layerStartY_1_c_full_n,
        HwReg_layerStartY_1_c_write => entry_proc_U0_HwReg_layerStartY_1_c_write,
        p_read9 => p_read13,
        HwReg_layerScaleFactor_1_c_din => entry_proc_U0_HwReg_layerScaleFactor_1_c_din,
        HwReg_layerScaleFactor_1_c_num_data_valid => HwReg_layerScaleFactor_1_c_num_data_valid,
        HwReg_layerScaleFactor_1_c_fifo_cap => HwReg_layerScaleFactor_1_c_fifo_cap,
        HwReg_layerScaleFactor_1_c_full_n => HwReg_layerScaleFactor_1_c_full_n,
        HwReg_layerScaleFactor_1_c_write => entry_proc_U0_HwReg_layerScaleFactor_1_c_write);

    AXIvideo2MultiPixStream_U0 : component design_1_v_mix_0_0_AXIvideo2MultiPixStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => AXIvideo2MultiPixStream_U0_ap_start,
        start_full_n => start_for_v_mix_420_to_422_false_U0_full_n,
        ap_done => AXIvideo2MultiPixStream_U0_ap_done,
        ap_continue => AXIvideo2MultiPixStream_U0_ap_continue,
        ap_idle => AXIvideo2MultiPixStream_U0_ap_idle,
        ap_ready => AXIvideo2MultiPixStream_U0_ap_ready,
        start_out => AXIvideo2MultiPixStream_U0_start_out,
        start_write => AXIvideo2MultiPixStream_U0_start_write,
        s_axis_video_TDATA => s_axis_video_TDATA,
        s_axis_video_TVALID => s_axis_video_TVALID,
        s_axis_video_TREADY => AXIvideo2MultiPixStream_U0_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP,
        s_axis_video_TSTRB => s_axis_video_TSTRB,
        s_axis_video_TUSER => s_axis_video_TUSER,
        s_axis_video_TLAST => s_axis_video_TLAST,
        s_axis_video_TID => s_axis_video_TID,
        s_axis_video_TDEST => s_axis_video_TDEST,
        srcLayer0_din => AXIvideo2MultiPixStream_U0_srcLayer0_din,
        srcLayer0_num_data_valid => srcLayer0_num_data_valid,
        srcLayer0_fifo_cap => srcLayer0_fifo_cap,
        srcLayer0_full_n => srcLayer0_full_n,
        srcLayer0_write => AXIvideo2MultiPixStream_U0_srcLayer0_write,
        Height => p_read312,
        WidthIn => p_read211,
        layerEnableFlag => p_read6,
        p_read_c48_din => AXIvideo2MultiPixStream_U0_p_read_c48_din,
        p_read_c48_num_data_valid => p_read_c48_num_data_valid,
        p_read_c48_fifo_cap => p_read_c48_fifo_cap,
        p_read_c48_full_n => p_read_c48_full_n,
        p_read_c48_write => AXIvideo2MultiPixStream_U0_p_read_c48_write);

    v_mix_420_to_422_false_U0 : component design_1_v_mix_0_0_v_mix_420_to_422_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_420_to_422_false_U0_ap_start,
        start_full_n => start_for_v_mix_422_to_444_false_U0_full_n,
        ap_done => v_mix_420_to_422_false_U0_ap_done,
        ap_continue => v_mix_420_to_422_false_U0_ap_continue,
        ap_idle => v_mix_420_to_422_false_U0_ap_idle,
        ap_ready => v_mix_420_to_422_false_U0_ap_ready,
        start_out => v_mix_420_to_422_false_U0_start_out,
        start_write => v_mix_420_to_422_false_U0_start_write,
        srcLayer0_dout => srcLayer0_dout,
        srcLayer0_num_data_valid => srcLayer0_num_data_valid,
        srcLayer0_fifo_cap => srcLayer0_fifo_cap,
        srcLayer0_empty_n => srcLayer0_empty_n,
        srcLayer0_read => v_mix_420_to_422_false_U0_srcLayer0_read,
        height => p_read312,
        width => p_read211,
        layerEnableFlag_dout => p_read_c48_dout,
        layerEnableFlag_num_data_valid => p_read_c48_num_data_valid,
        layerEnableFlag_fifo_cap => p_read_c48_fifo_cap,
        layerEnableFlag_empty_n => p_read_c48_empty_n,
        layerEnableFlag_read => v_mix_420_to_422_false_U0_layerEnableFlag_read,
        srcLayer0Yuv422_din => v_mix_420_to_422_false_U0_srcLayer0Yuv422_din,
        srcLayer0Yuv422_num_data_valid => srcLayer0Yuv422_num_data_valid,
        srcLayer0Yuv422_fifo_cap => srcLayer0Yuv422_fifo_cap,
        srcLayer0Yuv422_full_n => srcLayer0Yuv422_full_n,
        srcLayer0Yuv422_write => v_mix_420_to_422_false_U0_srcLayer0Yuv422_write,
        p_read_c47_din => v_mix_420_to_422_false_U0_p_read_c47_din,
        p_read_c47_num_data_valid => p_read_c47_num_data_valid,
        p_read_c47_fifo_cap => p_read_c47_fifo_cap,
        p_read_c47_full_n => p_read_c47_full_n,
        p_read_c47_write => v_mix_420_to_422_false_U0_p_read_c47_write);

    v_mix_422_to_444_false_U0 : component design_1_v_mix_0_0_v_mix_422_to_444_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_422_to_444_false_U0_ap_start,
        start_full_n => start_for_v_mix_yuv2rgb_false_U0_full_n,
        ap_done => v_mix_422_to_444_false_U0_ap_done,
        ap_continue => v_mix_422_to_444_false_U0_ap_continue,
        ap_idle => v_mix_422_to_444_false_U0_ap_idle,
        ap_ready => v_mix_422_to_444_false_U0_ap_ready,
        start_out => v_mix_422_to_444_false_U0_start_out,
        start_write => v_mix_422_to_444_false_U0_start_write,
        srcLayer0Yuv422_dout => srcLayer0Yuv422_dout,
        srcLayer0Yuv422_num_data_valid => srcLayer0Yuv422_num_data_valid,
        srcLayer0Yuv422_fifo_cap => srcLayer0Yuv422_fifo_cap,
        srcLayer0Yuv422_empty_n => srcLayer0Yuv422_empty_n,
        srcLayer0Yuv422_read => v_mix_422_to_444_false_U0_srcLayer0Yuv422_read,
        height => p_read312,
        width => p_read211,
        layerEnableFlag_dout => p_read_c47_dout,
        layerEnableFlag_num_data_valid => p_read_c47_num_data_valid,
        layerEnableFlag_fifo_cap => p_read_c47_fifo_cap,
        layerEnableFlag_empty_n => p_read_c47_empty_n,
        layerEnableFlag_read => v_mix_422_to_444_false_U0_layerEnableFlag_read,
        srcLayer0Yuv_din => v_mix_422_to_444_false_U0_srcLayer0Yuv_din,
        srcLayer0Yuv_num_data_valid => srcLayer0Yuv_num_data_valid,
        srcLayer0Yuv_fifo_cap => srcLayer0Yuv_fifo_cap,
        srcLayer0Yuv_full_n => srcLayer0Yuv_full_n,
        srcLayer0Yuv_write => v_mix_422_to_444_false_U0_srcLayer0Yuv_write,
        p_read_c_din => v_mix_422_to_444_false_U0_p_read_c_din,
        p_read_c_num_data_valid => p_read_c_num_data_valid,
        p_read_c_fifo_cap => p_read_c_fifo_cap,
        p_read_c_full_n => p_read_c_full_n,
        p_read_c_write => v_mix_422_to_444_false_U0_p_read_c_write);

    v_mix_yuv2rgb_false_U0 : component design_1_v_mix_0_0_v_mix_yuv2rgb_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_yuv2rgb_false_U0_ap_start,
        ap_done => v_mix_yuv2rgb_false_U0_ap_done,
        ap_continue => v_mix_yuv2rgb_false_U0_ap_continue,
        ap_idle => v_mix_yuv2rgb_false_U0_ap_idle,
        ap_ready => v_mix_yuv2rgb_false_U0_ap_ready,
        srcLayer0Yuv_dout => srcLayer0Yuv_dout,
        srcLayer0Yuv_num_data_valid => srcLayer0Yuv_num_data_valid,
        srcLayer0Yuv_fifo_cap => srcLayer0Yuv_fifo_cap,
        srcLayer0Yuv_empty_n => srcLayer0Yuv_empty_n,
        srcLayer0Yuv_read => v_mix_yuv2rgb_false_U0_srcLayer0Yuv_read,
        height => p_read312,
        width => p_read211,
        layerEnableFlag_dout => p_read_c_dout,
        layerEnableFlag_num_data_valid => p_read_c_num_data_valid,
        layerEnableFlag_fifo_cap => p_read_c_fifo_cap,
        layerEnableFlag_empty_n => p_read_c_empty_n,
        layerEnableFlag_read => v_mix_yuv2rgb_false_U0_layerEnableFlag_read,
        outLayer0_din => v_mix_yuv2rgb_false_U0_outLayer0_din,
        outLayer0_num_data_valid => outLayer0_num_data_valid,
        outLayer0_fifo_cap => outLayer0_fifo_cap,
        outLayer0_full_n => outLayer0_full_n,
        outLayer0_write => v_mix_yuv2rgb_false_U0_outLayer0_write);

    AXIvideoAlpha2MultiPixStream_U0 : component design_1_v_mix_0_0_AXIvideoAlpha2MultiPixStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => AXIvideoAlpha2MultiPixStream_U0_ap_start,
        start_full_n => AXIvideoAlpha2MultiPixStream_U0_start_full_n,
        ap_done => AXIvideoAlpha2MultiPixStream_U0_ap_done,
        ap_continue => AXIvideoAlpha2MultiPixStream_U0_ap_continue,
        ap_idle => AXIvideoAlpha2MultiPixStream_U0_ap_idle,
        ap_ready => AXIvideoAlpha2MultiPixStream_U0_ap_ready,
        start_out => AXIvideoAlpha2MultiPixStream_U0_start_out,
        start_write => AXIvideoAlpha2MultiPixStream_U0_start_write,
        s_axis_video1_TDATA => s_axis_video1_TDATA,
        s_axis_video1_TVALID => s_axis_video1_TVALID,
        s_axis_video1_TREADY => AXIvideoAlpha2MultiPixStream_U0_s_axis_video1_TREADY,
        s_axis_video1_TKEEP => s_axis_video1_TKEEP,
        s_axis_video1_TSTRB => s_axis_video1_TSTRB,
        s_axis_video1_TUSER => s_axis_video1_TUSER,
        s_axis_video1_TLAST => s_axis_video1_TLAST,
        s_axis_video1_TID => s_axis_video1_TID,
        s_axis_video1_TDEST => s_axis_video1_TDEST,
        srcLayer1_din => AXIvideoAlpha2MultiPixStream_U0_srcLayer1_din,
        srcLayer1_num_data_valid => srcLayer1_num_data_valid,
        srcLayer1_fifo_cap => srcLayer1_fifo_cap,
        srcLayer1_full_n => srcLayer1_full_n,
        srcLayer1_write => AXIvideoAlpha2MultiPixStream_U0_srcLayer1_write,
        srcLayer1Alpha_din => AXIvideoAlpha2MultiPixStream_U0_srcLayer1Alpha_din,
        srcLayer1Alpha_num_data_valid => srcLayer1Alpha_num_data_valid,
        srcLayer1Alpha_fifo_cap => srcLayer1Alpha_fifo_cap,
        srcLayer1Alpha_full_n => srcLayer1Alpha_full_n,
        srcLayer1Alpha_write => AXIvideoAlpha2MultiPixStream_U0_srcLayer1Alpha_write,
        p_read => p_read11,
        p_read1 => p_read7,
        p_read12 => p_read17,
        p_read1_c_din => AXIvideoAlpha2MultiPixStream_U0_p_read1_c_din,
        p_read1_c_num_data_valid => p_read1_c_num_data_valid,
        p_read1_c_fifo_cap => p_read1_c_fifo_cap,
        p_read1_c_full_n => p_read1_c_full_n,
        p_read1_c_write => AXIvideoAlpha2MultiPixStream_U0_p_read1_c_write,
        p_read1_c52_din => AXIvideoAlpha2MultiPixStream_U0_p_read1_c52_din,
        p_read1_c52_num_data_valid => p_read1_c52_num_data_valid,
        p_read1_c52_fifo_cap => p_read1_c52_fifo_cap,
        p_read1_c52_full_n => p_read1_c52_full_n,
        p_read1_c52_write => AXIvideoAlpha2MultiPixStream_U0_p_read1_c52_write,
        HwReg_layerWidth_1_c53_din => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c53_din,
        HwReg_layerWidth_1_c53_num_data_valid => HwReg_layerWidth_1_c53_num_data_valid,
        HwReg_layerWidth_1_c53_fifo_cap => HwReg_layerWidth_1_c53_fifo_cap,
        HwReg_layerWidth_1_c53_full_n => HwReg_layerWidth_1_c53_full_n,
        HwReg_layerWidth_1_c53_write => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c53_write,
        HwReg_layerWidth_1_c57_din => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c57_din,
        HwReg_layerWidth_1_c57_num_data_valid => HwReg_layerWidth_1_c57_num_data_valid,
        HwReg_layerWidth_1_c57_fifo_cap => HwReg_layerWidth_1_c57_fifo_cap,
        HwReg_layerWidth_1_c57_full_n => HwReg_layerWidth_1_c57_full_n,
        HwReg_layerWidth_1_c57_write => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c57_write,
        HwReg_layerHeight_1_c58_din => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c58_din,
        HwReg_layerHeight_1_c58_num_data_valid => HwReg_layerHeight_1_c58_num_data_valid,
        HwReg_layerHeight_1_c58_fifo_cap => HwReg_layerHeight_1_c58_fifo_cap,
        HwReg_layerHeight_1_c58_full_n => HwReg_layerHeight_1_c58_full_n,
        HwReg_layerHeight_1_c58_write => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c58_write,
        HwReg_layerHeight_1_c62_din => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c62_din,
        HwReg_layerHeight_1_c62_num_data_valid => HwReg_layerHeight_1_c62_num_data_valid,
        HwReg_layerHeight_1_c62_fifo_cap => HwReg_layerHeight_1_c62_fifo_cap,
        HwReg_layerHeight_1_c62_full_n => HwReg_layerHeight_1_c62_full_n,
        HwReg_layerHeight_1_c62_write => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c62_write);

    v_mix_420_to_422_false_1_U0 : component design_1_v_mix_0_0_v_mix_420_to_422_false_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_420_to_422_false_1_U0_ap_start,
        start_full_n => start_for_v_mix_422_to_444_false_2_U0_full_n,
        ap_done => v_mix_420_to_422_false_1_U0_ap_done,
        ap_continue => v_mix_420_to_422_false_1_U0_ap_continue,
        ap_idle => v_mix_420_to_422_false_1_U0_ap_idle,
        ap_ready => v_mix_420_to_422_false_1_U0_ap_ready,
        start_out => v_mix_420_to_422_false_1_U0_start_out,
        start_write => v_mix_420_to_422_false_1_U0_start_write,
        srcLayer1_dout => srcLayer1_dout,
        srcLayer1_num_data_valid => srcLayer1_num_data_valid,
        srcLayer1_fifo_cap => srcLayer1_fifo_cap,
        srcLayer1_empty_n => srcLayer1_empty_n,
        srcLayer1_read => v_mix_420_to_422_false_1_U0_srcLayer1_read,
        HwReg_layerHeight_1_dout => HwReg_layerHeight_1_c62_dout,
        HwReg_layerHeight_1_num_data_valid => HwReg_layerHeight_1_c62_num_data_valid,
        HwReg_layerHeight_1_fifo_cap => HwReg_layerHeight_1_c62_fifo_cap,
        HwReg_layerHeight_1_empty_n => HwReg_layerHeight_1_c62_empty_n,
        HwReg_layerHeight_1_read => v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_read,
        HwReg_layerWidth_1_dout => HwReg_layerWidth_1_c57_dout,
        HwReg_layerWidth_1_num_data_valid => HwReg_layerWidth_1_c57_num_data_valid,
        HwReg_layerWidth_1_fifo_cap => HwReg_layerWidth_1_c57_fifo_cap,
        HwReg_layerWidth_1_empty_n => HwReg_layerWidth_1_c57_empty_n,
        HwReg_layerWidth_1_read => v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_read,
        p_read1_dout => p_read1_c52_dout,
        p_read1_num_data_valid => p_read1_c52_num_data_valid,
        p_read1_fifo_cap => p_read1_c52_fifo_cap,
        p_read1_empty_n => p_read1_c52_empty_n,
        p_read1_read => v_mix_420_to_422_false_1_U0_p_read1_read,
        srcLayer1Yuv422_din => v_mix_420_to_422_false_1_U0_srcLayer1Yuv422_din,
        srcLayer1Yuv422_num_data_valid => srcLayer1Yuv422_num_data_valid,
        srcLayer1Yuv422_fifo_cap => srcLayer1Yuv422_fifo_cap,
        srcLayer1Yuv422_full_n => srcLayer1Yuv422_full_n,
        srcLayer1Yuv422_write => v_mix_420_to_422_false_1_U0_srcLayer1Yuv422_write,
        p_read1_c51_din => v_mix_420_to_422_false_1_U0_p_read1_c51_din,
        p_read1_c51_num_data_valid => p_read1_c51_num_data_valid,
        p_read1_c51_fifo_cap => p_read1_c51_fifo_cap,
        p_read1_c51_full_n => p_read1_c51_full_n,
        p_read1_c51_write => v_mix_420_to_422_false_1_U0_p_read1_c51_write,
        HwReg_layerWidth_1_c56_din => v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_c56_din,
        HwReg_layerWidth_1_c56_num_data_valid => HwReg_layerWidth_1_c56_num_data_valid,
        HwReg_layerWidth_1_c56_fifo_cap => HwReg_layerWidth_1_c56_fifo_cap,
        HwReg_layerWidth_1_c56_full_n => HwReg_layerWidth_1_c56_full_n,
        HwReg_layerWidth_1_c56_write => v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_c56_write,
        HwReg_layerHeight_1_c61_din => v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_c61_din,
        HwReg_layerHeight_1_c61_num_data_valid => HwReg_layerHeight_1_c61_num_data_valid,
        HwReg_layerHeight_1_c61_fifo_cap => HwReg_layerHeight_1_c61_fifo_cap,
        HwReg_layerHeight_1_c61_full_n => HwReg_layerHeight_1_c61_full_n,
        HwReg_layerHeight_1_c61_write => v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_c61_write);

    v_mix_422_to_444_false_2_U0 : component design_1_v_mix_0_0_v_mix_422_to_444_false_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_422_to_444_false_2_U0_ap_start,
        start_full_n => start_for_v_mix_yuv2rgb_false_3_U0_full_n,
        ap_done => v_mix_422_to_444_false_2_U0_ap_done,
        ap_continue => v_mix_422_to_444_false_2_U0_ap_continue,
        ap_idle => v_mix_422_to_444_false_2_U0_ap_idle,
        ap_ready => v_mix_422_to_444_false_2_U0_ap_ready,
        start_out => v_mix_422_to_444_false_2_U0_start_out,
        start_write => v_mix_422_to_444_false_2_U0_start_write,
        srcLayer1Yuv422_dout => srcLayer1Yuv422_dout,
        srcLayer1Yuv422_num_data_valid => srcLayer1Yuv422_num_data_valid,
        srcLayer1Yuv422_fifo_cap => srcLayer1Yuv422_fifo_cap,
        srcLayer1Yuv422_empty_n => srcLayer1Yuv422_empty_n,
        srcLayer1Yuv422_read => v_mix_422_to_444_false_2_U0_srcLayer1Yuv422_read,
        HwReg_layerHeight_1_dout => HwReg_layerHeight_1_c61_dout,
        HwReg_layerHeight_1_num_data_valid => HwReg_layerHeight_1_c61_num_data_valid,
        HwReg_layerHeight_1_fifo_cap => HwReg_layerHeight_1_c61_fifo_cap,
        HwReg_layerHeight_1_empty_n => HwReg_layerHeight_1_c61_empty_n,
        HwReg_layerHeight_1_read => v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_read,
        HwReg_layerWidth_1_dout => HwReg_layerWidth_1_c56_dout,
        HwReg_layerWidth_1_num_data_valid => HwReg_layerWidth_1_c56_num_data_valid,
        HwReg_layerWidth_1_fifo_cap => HwReg_layerWidth_1_c56_fifo_cap,
        HwReg_layerWidth_1_empty_n => HwReg_layerWidth_1_c56_empty_n,
        HwReg_layerWidth_1_read => v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_read,
        p_read1_dout => p_read1_c51_dout,
        p_read1_num_data_valid => p_read1_c51_num_data_valid,
        p_read1_fifo_cap => p_read1_c51_fifo_cap,
        p_read1_empty_n => p_read1_c51_empty_n,
        p_read1_read => v_mix_422_to_444_false_2_U0_p_read1_read,
        srcLayer1Yuv_din => v_mix_422_to_444_false_2_U0_srcLayer1Yuv_din,
        srcLayer1Yuv_num_data_valid => srcLayer1Yuv_num_data_valid,
        srcLayer1Yuv_fifo_cap => srcLayer1Yuv_fifo_cap,
        srcLayer1Yuv_full_n => srcLayer1Yuv_full_n,
        srcLayer1Yuv_write => v_mix_422_to_444_false_2_U0_srcLayer1Yuv_write,
        p_read1_c50_din => v_mix_422_to_444_false_2_U0_p_read1_c50_din,
        p_read1_c50_num_data_valid => p_read1_c50_num_data_valid,
        p_read1_c50_fifo_cap => p_read1_c50_fifo_cap,
        p_read1_c50_full_n => p_read1_c50_full_n,
        p_read1_c50_write => v_mix_422_to_444_false_2_U0_p_read1_c50_write,
        HwReg_layerWidth_1_c55_din => v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_c55_din,
        HwReg_layerWidth_1_c55_num_data_valid => HwReg_layerWidth_1_c55_num_data_valid,
        HwReg_layerWidth_1_c55_fifo_cap => HwReg_layerWidth_1_c55_fifo_cap,
        HwReg_layerWidth_1_c55_full_n => HwReg_layerWidth_1_c55_full_n,
        HwReg_layerWidth_1_c55_write => v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_c55_write,
        HwReg_layerHeight_1_c60_din => v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_c60_din,
        HwReg_layerHeight_1_c60_num_data_valid => HwReg_layerHeight_1_c60_num_data_valid,
        HwReg_layerHeight_1_c60_fifo_cap => HwReg_layerHeight_1_c60_fifo_cap,
        HwReg_layerHeight_1_c60_full_n => HwReg_layerHeight_1_c60_full_n,
        HwReg_layerHeight_1_c60_write => v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_c60_write);

    v_mix_yuv2rgb_false_3_U0 : component design_1_v_mix_0_0_v_mix_yuv2rgb_false_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_yuv2rgb_false_3_U0_ap_start,
        start_full_n => start_for_v_mix_upsample_false_U0_full_n,
        ap_done => v_mix_yuv2rgb_false_3_U0_ap_done,
        ap_continue => v_mix_yuv2rgb_false_3_U0_ap_continue,
        ap_idle => v_mix_yuv2rgb_false_3_U0_ap_idle,
        ap_ready => v_mix_yuv2rgb_false_3_U0_ap_ready,
        start_out => v_mix_yuv2rgb_false_3_U0_start_out,
        start_write => v_mix_yuv2rgb_false_3_U0_start_write,
        srcLayer1Yuv_dout => srcLayer1Yuv_dout,
        srcLayer1Yuv_num_data_valid => srcLayer1Yuv_num_data_valid,
        srcLayer1Yuv_fifo_cap => srcLayer1Yuv_fifo_cap,
        srcLayer1Yuv_empty_n => srcLayer1Yuv_empty_n,
        srcLayer1Yuv_read => v_mix_yuv2rgb_false_3_U0_srcLayer1Yuv_read,
        HwReg_layerHeight_1_dout => HwReg_layerHeight_1_c60_dout,
        HwReg_layerHeight_1_num_data_valid => HwReg_layerHeight_1_c60_num_data_valid,
        HwReg_layerHeight_1_fifo_cap => HwReg_layerHeight_1_c60_fifo_cap,
        HwReg_layerHeight_1_empty_n => HwReg_layerHeight_1_c60_empty_n,
        HwReg_layerHeight_1_read => v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_read,
        HwReg_layerWidth_1_dout => HwReg_layerWidth_1_c55_dout,
        HwReg_layerWidth_1_num_data_valid => HwReg_layerWidth_1_c55_num_data_valid,
        HwReg_layerWidth_1_fifo_cap => HwReg_layerWidth_1_c55_fifo_cap,
        HwReg_layerWidth_1_empty_n => HwReg_layerWidth_1_c55_empty_n,
        HwReg_layerWidth_1_read => v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_read,
        p_read1_dout => p_read1_c50_dout,
        p_read1_num_data_valid => p_read1_c50_num_data_valid,
        p_read1_fifo_cap => p_read1_c50_fifo_cap,
        p_read1_empty_n => p_read1_c50_empty_n,
        p_read1_read => v_mix_yuv2rgb_false_3_U0_p_read1_read,
        srcLayer1Rgb_din => v_mix_yuv2rgb_false_3_U0_srcLayer1Rgb_din,
        srcLayer1Rgb_num_data_valid => srcLayer1Rgb_num_data_valid,
        srcLayer1Rgb_fifo_cap => srcLayer1Rgb_fifo_cap,
        srcLayer1Rgb_full_n => srcLayer1Rgb_full_n,
        srcLayer1Rgb_write => v_mix_yuv2rgb_false_3_U0_srcLayer1Rgb_write,
        p_read1_c49_din => v_mix_yuv2rgb_false_3_U0_p_read1_c49_din,
        p_read1_c49_num_data_valid => p_read1_c49_num_data_valid,
        p_read1_c49_fifo_cap => p_read1_c49_fifo_cap,
        p_read1_c49_full_n => p_read1_c49_full_n,
        p_read1_c49_write => v_mix_yuv2rgb_false_3_U0_p_read1_c49_write,
        HwReg_layerWidth_1_c54_din => v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_c54_din,
        HwReg_layerWidth_1_c54_num_data_valid => HwReg_layerWidth_1_c54_num_data_valid,
        HwReg_layerWidth_1_c54_fifo_cap => HwReg_layerWidth_1_c54_fifo_cap,
        HwReg_layerWidth_1_c54_full_n => HwReg_layerWidth_1_c54_full_n,
        HwReg_layerWidth_1_c54_write => v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_c54_write,
        HwReg_layerHeight_1_c59_din => v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_c59_din,
        HwReg_layerHeight_1_c59_num_data_valid => HwReg_layerHeight_1_c59_num_data_valid,
        HwReg_layerHeight_1_c59_fifo_cap => HwReg_layerHeight_1_c59_fifo_cap,
        HwReg_layerHeight_1_c59_full_n => HwReg_layerHeight_1_c59_full_n,
        HwReg_layerHeight_1_c59_write => v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_c59_write);

    v_mix_upsample_false_U0 : component design_1_v_mix_0_0_v_mix_upsample_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_upsample_false_U0_ap_start,
        ap_done => v_mix_upsample_false_U0_ap_done,
        ap_continue => v_mix_upsample_false_U0_ap_continue,
        ap_idle => v_mix_upsample_false_U0_ap_idle,
        ap_ready => v_mix_upsample_false_U0_ap_ready,
        srcLayer1Rgb_dout => srcLayer1Rgb_dout,
        srcLayer1Rgb_num_data_valid => srcLayer1Rgb_num_data_valid,
        srcLayer1Rgb_fifo_cap => srcLayer1Rgb_fifo_cap,
        srcLayer1Rgb_empty_n => srcLayer1Rgb_empty_n,
        srcLayer1Rgb_read => v_mix_upsample_false_U0_srcLayer1Rgb_read,
        HwReg_layerHeight_1_dout => HwReg_layerHeight_1_c59_dout,
        HwReg_layerHeight_1_num_data_valid => HwReg_layerHeight_1_c59_num_data_valid,
        HwReg_layerHeight_1_fifo_cap => HwReg_layerHeight_1_c59_fifo_cap,
        HwReg_layerHeight_1_empty_n => HwReg_layerHeight_1_c59_empty_n,
        HwReg_layerHeight_1_read => v_mix_upsample_false_U0_HwReg_layerHeight_1_read,
        HwReg_layerWidth_1_dout => HwReg_layerWidth_1_c54_dout,
        HwReg_layerWidth_1_num_data_valid => HwReg_layerWidth_1_c54_num_data_valid,
        HwReg_layerWidth_1_fifo_cap => HwReg_layerWidth_1_c54_fifo_cap,
        HwReg_layerWidth_1_empty_n => HwReg_layerWidth_1_c54_empty_n,
        HwReg_layerWidth_1_read => v_mix_upsample_false_U0_HwReg_layerWidth_1_read,
        p_read1_dout => p_read1_c49_dout,
        p_read1_num_data_valid => p_read1_c49_num_data_valid,
        p_read1_fifo_cap => p_read1_c49_fifo_cap,
        p_read1_empty_n => p_read1_c49_empty_n,
        p_read1_read => v_mix_upsample_false_U0_p_read1_read,
        srcLayer1x_din => v_mix_upsample_false_U0_srcLayer1x_din,
        srcLayer1x_num_data_valid => srcLayer1x_num_data_valid,
        srcLayer1x_fifo_cap => srcLayer1x_fifo_cap,
        srcLayer1x_full_n => srcLayer1x_full_n,
        srcLayer1x_write => v_mix_upsample_false_U0_srcLayer1x_write,
        HwReg_layerWidth_1_c_din => v_mix_upsample_false_U0_HwReg_layerWidth_1_c_din,
        HwReg_layerWidth_1_c_num_data_valid => HwReg_layerWidth_1_c_num_data_valid,
        HwReg_layerWidth_1_c_fifo_cap => HwReg_layerWidth_1_c_fifo_cap,
        HwReg_layerWidth_1_c_full_n => HwReg_layerWidth_1_c_full_n,
        HwReg_layerWidth_1_c_write => v_mix_upsample_false_U0_HwReg_layerWidth_1_c_write,
        HwReg_layerHeight_1_c_din => v_mix_upsample_false_U0_HwReg_layerHeight_1_c_din,
        HwReg_layerHeight_1_c_num_data_valid => HwReg_layerHeight_1_c_num_data_valid,
        HwReg_layerHeight_1_c_fifo_cap => HwReg_layerHeight_1_c_fifo_cap,
        HwReg_layerHeight_1_c_full_n => HwReg_layerHeight_1_c_full_n,
        HwReg_layerHeight_1_c_write => v_mix_upsample_false_U0_HwReg_layerHeight_1_c_write);

    v_mix_upsample_alpha_false_U0 : component design_1_v_mix_0_0_v_mix_upsample_alpha_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_upsample_alpha_false_U0_ap_start,
        ap_done => v_mix_upsample_alpha_false_U0_ap_done,
        ap_continue => v_mix_upsample_alpha_false_U0_ap_continue,
        ap_idle => v_mix_upsample_alpha_false_U0_ap_idle,
        ap_ready => v_mix_upsample_alpha_false_U0_ap_ready,
        srcLayer1Alpha_dout => srcLayer1Alpha_dout,
        srcLayer1Alpha_num_data_valid => srcLayer1Alpha_num_data_valid,
        srcLayer1Alpha_fifo_cap => srcLayer1Alpha_fifo_cap,
        srcLayer1Alpha_empty_n => srcLayer1Alpha_empty_n,
        srcLayer1Alpha_read => v_mix_upsample_alpha_false_U0_srcLayer1Alpha_read,
        HwReg_layerHeight_1_dout => HwReg_layerHeight_1_c58_dout,
        HwReg_layerHeight_1_num_data_valid => HwReg_layerHeight_1_c58_num_data_valid,
        HwReg_layerHeight_1_fifo_cap => HwReg_layerHeight_1_c58_fifo_cap,
        HwReg_layerHeight_1_empty_n => HwReg_layerHeight_1_c58_empty_n,
        HwReg_layerHeight_1_read => v_mix_upsample_alpha_false_U0_HwReg_layerHeight_1_read,
        HwReg_layerWidth_1_dout => HwReg_layerWidth_1_c53_dout,
        HwReg_layerWidth_1_num_data_valid => HwReg_layerWidth_1_c53_num_data_valid,
        HwReg_layerWidth_1_fifo_cap => HwReg_layerWidth_1_c53_fifo_cap,
        HwReg_layerWidth_1_empty_n => HwReg_layerWidth_1_c53_empty_n,
        HwReg_layerWidth_1_read => v_mix_upsample_alpha_false_U0_HwReg_layerWidth_1_read,
        p_read1_dout => p_read1_c_dout,
        p_read1_num_data_valid => p_read1_c_num_data_valid,
        p_read1_fifo_cap => p_read1_c_fifo_cap,
        p_read1_empty_n => p_read1_c_empty_n,
        p_read1_read => v_mix_upsample_alpha_false_U0_p_read1_read,
        srcLayer1Alphax_din => v_mix_upsample_alpha_false_U0_srcLayer1Alphax_din,
        srcLayer1Alphax_num_data_valid => srcLayer1Alphax_num_data_valid,
        srcLayer1Alphax_fifo_cap => srcLayer1Alphax_fifo_cap,
        srcLayer1Alphax_full_n => srcLayer1Alphax_full_n,
        srcLayer1Alphax_write => v_mix_upsample_alpha_false_U0_srcLayer1Alphax_write);

    v_mix_core_alpha_true_true_U0 : component design_1_v_mix_0_0_v_mix_core_alpha_true_true_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_core_alpha_true_true_U0_ap_start,
        start_full_n => start_for_v_mix_rgb2yuv_false_U0_full_n,
        ap_done => v_mix_core_alpha_true_true_U0_ap_done,
        ap_continue => v_mix_core_alpha_true_true_U0_ap_continue,
        ap_idle => v_mix_core_alpha_true_true_U0_ap_idle,
        ap_ready => v_mix_core_alpha_true_true_U0_ap_ready,
        start_out => v_mix_core_alpha_true_true_U0_start_out,
        start_write => v_mix_core_alpha_true_true_U0_start_write,
        outLayer0_dout => outLayer0_dout,
        outLayer0_num_data_valid => outLayer0_num_data_valid,
        outLayer0_fifo_cap => outLayer0_fifo_cap,
        outLayer0_empty_n => outLayer0_empty_n,
        outLayer0_read => v_mix_core_alpha_true_true_U0_outLayer0_read,
        srcLayer1x_dout => srcLayer1x_dout,
        srcLayer1x_num_data_valid => srcLayer1x_num_data_valid,
        srcLayer1x_fifo_cap => srcLayer1x_fifo_cap,
        srcLayer1x_empty_n => srcLayer1x_empty_n,
        srcLayer1x_read => v_mix_core_alpha_true_true_U0_srcLayer1x_read,
        srcLayer1Alphax_dout => srcLayer1Alphax_dout,
        srcLayer1Alphax_num_data_valid => srcLayer1Alphax_num_data_valid,
        srcLayer1Alphax_fifo_cap => srcLayer1Alphax_fifo_cap,
        srcLayer1Alphax_empty_n => srcLayer1Alphax_empty_n,
        srcLayer1Alphax_read => v_mix_core_alpha_true_true_U0_srcLayer1Alphax_read,
        hwReg_width_dout => HwReg_width_c42_dout,
        hwReg_width_num_data_valid => HwReg_width_c42_num_data_valid,
        hwReg_width_fifo_cap => HwReg_width_c42_fifo_cap,
        hwReg_width_empty_n => HwReg_width_c42_empty_n,
        hwReg_width_read => v_mix_core_alpha_true_true_U0_hwReg_width_read,
        hwReg_height_dout => HwReg_height_c46_dout,
        hwReg_height_num_data_valid => HwReg_height_c46_num_data_valid,
        hwReg_height_fifo_cap => HwReg_height_c46_fifo_cap,
        hwReg_height_empty_n => HwReg_height_c46_empty_n,
        hwReg_height_read => v_mix_core_alpha_true_true_U0_hwReg_height_read,
        hwReg_background_Y_R_dout => HwReg_background_Y_R_c_dout,
        hwReg_background_Y_R_num_data_valid => HwReg_background_Y_R_c_num_data_valid,
        hwReg_background_Y_R_fifo_cap => HwReg_background_Y_R_c_fifo_cap,
        hwReg_background_Y_R_empty_n => HwReg_background_Y_R_c_empty_n,
        hwReg_background_Y_R_read => v_mix_core_alpha_true_true_U0_hwReg_background_Y_R_read,
        hwReg_background_U_G_dout => HwReg_background_U_G_c_dout,
        hwReg_background_U_G_num_data_valid => HwReg_background_U_G_c_num_data_valid,
        hwReg_background_U_G_fifo_cap => HwReg_background_U_G_c_fifo_cap,
        hwReg_background_U_G_empty_n => HwReg_background_U_G_c_empty_n,
        hwReg_background_U_G_read => v_mix_core_alpha_true_true_U0_hwReg_background_U_G_read,
        hwReg_background_V_B_dout => HwReg_background_V_B_c_dout,
        hwReg_background_V_B_num_data_valid => HwReg_background_V_B_c_num_data_valid,
        hwReg_background_V_B_fifo_cap => HwReg_background_V_B_c_fifo_cap,
        hwReg_background_V_B_empty_n => HwReg_background_V_B_c_empty_n,
        hwReg_background_V_B_read => v_mix_core_alpha_true_true_U0_hwReg_background_V_B_read,
        hwReg_layerEnable_dout => HwReg_layerEnable_c_dout,
        hwReg_layerEnable_num_data_valid => HwReg_layerEnable_c_num_data_valid,
        hwReg_layerEnable_fifo_cap => HwReg_layerEnable_c_fifo_cap,
        hwReg_layerEnable_empty_n => HwReg_layerEnable_c_empty_n,
        hwReg_layerEnable_read => v_mix_core_alpha_true_true_U0_hwReg_layerEnable_read,
        hwReg_layerAlpha_1_dout => HwReg_layerAlpha_1_c_dout,
        hwReg_layerAlpha_1_num_data_valid => HwReg_layerAlpha_1_c_num_data_valid,
        hwReg_layerAlpha_1_fifo_cap => HwReg_layerAlpha_1_c_fifo_cap,
        hwReg_layerAlpha_1_empty_n => HwReg_layerAlpha_1_c_empty_n,
        hwReg_layerAlpha_1_read => v_mix_core_alpha_true_true_U0_hwReg_layerAlpha_1_read,
        hwReg_layerStartX_1_dout => HwReg_layerStartX_1_c_dout,
        hwReg_layerStartX_1_num_data_valid => HwReg_layerStartX_1_c_num_data_valid,
        hwReg_layerStartX_1_fifo_cap => HwReg_layerStartX_1_c_fifo_cap,
        hwReg_layerStartX_1_empty_n => HwReg_layerStartX_1_c_empty_n,
        hwReg_layerStartX_1_read => v_mix_core_alpha_true_true_U0_hwReg_layerStartX_1_read,
        hwReg_layerStartY_1_dout => HwReg_layerStartY_1_c_dout,
        hwReg_layerStartY_1_num_data_valid => HwReg_layerStartY_1_c_num_data_valid,
        hwReg_layerStartY_1_fifo_cap => HwReg_layerStartY_1_c_fifo_cap,
        hwReg_layerStartY_1_empty_n => HwReg_layerStartY_1_c_empty_n,
        hwReg_layerStartY_1_read => v_mix_core_alpha_true_true_U0_hwReg_layerStartY_1_read,
        hwReg_layerWidth_1_dout => HwReg_layerWidth_1_c_dout,
        hwReg_layerWidth_1_num_data_valid => HwReg_layerWidth_1_c_num_data_valid,
        hwReg_layerWidth_1_fifo_cap => HwReg_layerWidth_1_c_fifo_cap,
        hwReg_layerWidth_1_empty_n => HwReg_layerWidth_1_c_empty_n,
        hwReg_layerWidth_1_read => v_mix_core_alpha_true_true_U0_hwReg_layerWidth_1_read,
        hwReg_layerHeight_1_dout => HwReg_layerHeight_1_c_dout,
        hwReg_layerHeight_1_num_data_valid => HwReg_layerHeight_1_c_num_data_valid,
        hwReg_layerHeight_1_fifo_cap => HwReg_layerHeight_1_c_fifo_cap,
        hwReg_layerHeight_1_empty_n => HwReg_layerHeight_1_c_empty_n,
        hwReg_layerHeight_1_read => v_mix_core_alpha_true_true_U0_hwReg_layerHeight_1_read,
        hwReg_layerScaleFactor_1_dout => HwReg_layerScaleFactor_1_c_dout,
        hwReg_layerScaleFactor_1_num_data_valid => HwReg_layerScaleFactor_1_c_num_data_valid,
        hwReg_layerScaleFactor_1_fifo_cap => HwReg_layerScaleFactor_1_c_fifo_cap,
        hwReg_layerScaleFactor_1_empty_n => HwReg_layerScaleFactor_1_c_empty_n,
        hwReg_layerScaleFactor_1_read => v_mix_core_alpha_true_true_U0_hwReg_layerScaleFactor_1_read,
        outLayer1_din => v_mix_core_alpha_true_true_U0_outLayer1_din,
        outLayer1_num_data_valid => outLayer1_num_data_valid,
        outLayer1_fifo_cap => outLayer1_fifo_cap,
        outLayer1_full_n => outLayer1_full_n,
        outLayer1_write => v_mix_core_alpha_true_true_U0_outLayer1_write,
        HwReg_width_c41_din => v_mix_core_alpha_true_true_U0_HwReg_width_c41_din,
        HwReg_width_c41_num_data_valid => HwReg_width_c41_num_data_valid,
        HwReg_width_c41_fifo_cap => HwReg_width_c41_fifo_cap,
        HwReg_width_c41_full_n => HwReg_width_c41_full_n,
        HwReg_width_c41_write => v_mix_core_alpha_true_true_U0_HwReg_width_c41_write,
        HwReg_height_c45_din => v_mix_core_alpha_true_true_U0_HwReg_height_c45_din,
        HwReg_height_c45_num_data_valid => HwReg_height_c45_num_data_valid,
        HwReg_height_c45_fifo_cap => HwReg_height_c45_fifo_cap,
        HwReg_height_c45_full_n => HwReg_height_c45_full_n,
        HwReg_height_c45_write => v_mix_core_alpha_true_true_U0_HwReg_height_c45_write);

    v_mix_rgb2yuv_false_U0 : component design_1_v_mix_0_0_v_mix_rgb2yuv_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_rgb2yuv_false_U0_ap_start,
        start_full_n => start_for_v_mix_444_to_422_false_U0_full_n,
        ap_done => v_mix_rgb2yuv_false_U0_ap_done,
        ap_continue => v_mix_rgb2yuv_false_U0_ap_continue,
        ap_idle => v_mix_rgb2yuv_false_U0_ap_idle,
        ap_ready => v_mix_rgb2yuv_false_U0_ap_ready,
        start_out => v_mix_rgb2yuv_false_U0_start_out,
        start_write => v_mix_rgb2yuv_false_U0_start_write,
        outLayer1_dout => outLayer1_dout,
        outLayer1_num_data_valid => outLayer1_num_data_valid,
        outLayer1_fifo_cap => outLayer1_fifo_cap,
        outLayer1_empty_n => outLayer1_empty_n,
        outLayer1_read => v_mix_rgb2yuv_false_U0_outLayer1_read,
        height_dout => HwReg_height_c45_dout,
        height_num_data_valid => HwReg_height_c45_num_data_valid,
        height_fifo_cap => HwReg_height_c45_fifo_cap,
        height_empty_n => HwReg_height_c45_empty_n,
        height_read => v_mix_rgb2yuv_false_U0_height_read,
        width_dout => HwReg_width_c41_dout,
        width_num_data_valid => HwReg_width_c41_num_data_valid,
        width_fifo_cap => HwReg_width_c41_fifo_cap,
        width_empty_n => HwReg_width_c41_empty_n,
        width_read => v_mix_rgb2yuv_false_U0_width_read,
        outYuv_din => v_mix_rgb2yuv_false_U0_outYuv_din,
        outYuv_num_data_valid => outYuv_num_data_valid,
        outYuv_fifo_cap => outYuv_fifo_cap,
        outYuv_full_n => outYuv_full_n,
        outYuv_write => v_mix_rgb2yuv_false_U0_outYuv_write,
        HwReg_width_c40_din => v_mix_rgb2yuv_false_U0_HwReg_width_c40_din,
        HwReg_width_c40_num_data_valid => HwReg_width_c40_num_data_valid,
        HwReg_width_c40_fifo_cap => HwReg_width_c40_fifo_cap,
        HwReg_width_c40_full_n => HwReg_width_c40_full_n,
        HwReg_width_c40_write => v_mix_rgb2yuv_false_U0_HwReg_width_c40_write,
        HwReg_height_c44_din => v_mix_rgb2yuv_false_U0_HwReg_height_c44_din,
        HwReg_height_c44_num_data_valid => HwReg_height_c44_num_data_valid,
        HwReg_height_c44_fifo_cap => HwReg_height_c44_fifo_cap,
        HwReg_height_c44_full_n => HwReg_height_c44_full_n,
        HwReg_height_c44_write => v_mix_rgb2yuv_false_U0_HwReg_height_c44_write);

    v_mix_444_to_422_false_U0 : component design_1_v_mix_0_0_v_mix_444_to_422_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_444_to_422_false_U0_ap_start,
        start_full_n => start_for_v_mix_422_to_420_false_U0_full_n,
        ap_done => v_mix_444_to_422_false_U0_ap_done,
        ap_continue => v_mix_444_to_422_false_U0_ap_continue,
        ap_idle => v_mix_444_to_422_false_U0_ap_idle,
        ap_ready => v_mix_444_to_422_false_U0_ap_ready,
        start_out => v_mix_444_to_422_false_U0_start_out,
        start_write => v_mix_444_to_422_false_U0_start_write,
        outYuv_dout => outYuv_dout,
        outYuv_num_data_valid => outYuv_num_data_valid,
        outYuv_fifo_cap => outYuv_fifo_cap,
        outYuv_empty_n => outYuv_empty_n,
        outYuv_read => v_mix_444_to_422_false_U0_outYuv_read,
        height_dout => HwReg_height_c44_dout,
        height_num_data_valid => HwReg_height_c44_num_data_valid,
        height_fifo_cap => HwReg_height_c44_fifo_cap,
        height_empty_n => HwReg_height_c44_empty_n,
        height_read => v_mix_444_to_422_false_U0_height_read,
        width_dout => HwReg_width_c40_dout,
        width_num_data_valid => HwReg_width_c40_num_data_valid,
        width_fifo_cap => HwReg_width_c40_fifo_cap,
        width_empty_n => HwReg_width_c40_empty_n,
        width_read => v_mix_444_to_422_false_U0_width_read,
        out422_din => v_mix_444_to_422_false_U0_out422_din,
        out422_num_data_valid => out422_num_data_valid,
        out422_fifo_cap => out422_fifo_cap,
        out422_full_n => out422_full_n,
        out422_write => v_mix_444_to_422_false_U0_out422_write,
        HwReg_width_c39_din => v_mix_444_to_422_false_U0_HwReg_width_c39_din,
        HwReg_width_c39_num_data_valid => HwReg_width_c39_num_data_valid,
        HwReg_width_c39_fifo_cap => HwReg_width_c39_fifo_cap,
        HwReg_width_c39_full_n => HwReg_width_c39_full_n,
        HwReg_width_c39_write => v_mix_444_to_422_false_U0_HwReg_width_c39_write,
        HwReg_height_c43_din => v_mix_444_to_422_false_U0_HwReg_height_c43_din,
        HwReg_height_c43_num_data_valid => HwReg_height_c43_num_data_valid,
        HwReg_height_c43_fifo_cap => HwReg_height_c43_fifo_cap,
        HwReg_height_c43_full_n => HwReg_height_c43_full_n,
        HwReg_height_c43_write => v_mix_444_to_422_false_U0_HwReg_height_c43_write);

    v_mix_422_to_420_false_U0 : component design_1_v_mix_0_0_v_mix_422_to_420_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v_mix_422_to_420_false_U0_ap_start,
        start_full_n => start_for_MultiPixStream2AXIvideo_U0_full_n,
        ap_done => v_mix_422_to_420_false_U0_ap_done,
        ap_continue => v_mix_422_to_420_false_U0_ap_continue,
        ap_idle => v_mix_422_to_420_false_U0_ap_idle,
        ap_ready => v_mix_422_to_420_false_U0_ap_ready,
        start_out => v_mix_422_to_420_false_U0_start_out,
        start_write => v_mix_422_to_420_false_U0_start_write,
        out422_dout => out422_dout,
        out422_num_data_valid => out422_num_data_valid,
        out422_fifo_cap => out422_fifo_cap,
        out422_empty_n => out422_empty_n,
        out422_read => v_mix_422_to_420_false_U0_out422_read,
        height_dout => HwReg_height_c43_dout,
        height_num_data_valid => HwReg_height_c43_num_data_valid,
        height_fifo_cap => HwReg_height_c43_fifo_cap,
        height_empty_n => HwReg_height_c43_empty_n,
        height_read => v_mix_422_to_420_false_U0_height_read,
        width_dout => HwReg_width_c39_dout,
        width_num_data_valid => HwReg_width_c39_num_data_valid,
        width_fifo_cap => HwReg_width_c39_fifo_cap,
        width_empty_n => HwReg_width_c39_empty_n,
        width_read => v_mix_422_to_420_false_U0_width_read,
        out420_din => v_mix_422_to_420_false_U0_out420_din,
        out420_num_data_valid => out420_num_data_valid,
        out420_fifo_cap => out420_fifo_cap,
        out420_full_n => out420_full_n,
        out420_write => v_mix_422_to_420_false_U0_out420_write,
        HwReg_width_c_din => v_mix_422_to_420_false_U0_HwReg_width_c_din,
        HwReg_width_c_num_data_valid => HwReg_width_c_num_data_valid,
        HwReg_width_c_fifo_cap => HwReg_width_c_fifo_cap,
        HwReg_width_c_full_n => HwReg_width_c_full_n,
        HwReg_width_c_write => v_mix_422_to_420_false_U0_HwReg_width_c_write,
        HwReg_height_c_din => v_mix_422_to_420_false_U0_HwReg_height_c_din,
        HwReg_height_c_num_data_valid => HwReg_height_c_num_data_valid,
        HwReg_height_c_fifo_cap => HwReg_height_c_fifo_cap,
        HwReg_height_c_full_n => HwReg_height_c_full_n,
        HwReg_height_c_write => v_mix_422_to_420_false_U0_HwReg_height_c_write);

    MultiPixStream2AXIvideo_U0 : component design_1_v_mix_0_0_MultiPixStream2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => MultiPixStream2AXIvideo_U0_ap_start,
        ap_done => MultiPixStream2AXIvideo_U0_ap_done,
        ap_continue => MultiPixStream2AXIvideo_U0_ap_continue,
        ap_idle => MultiPixStream2AXIvideo_U0_ap_idle,
        ap_ready => MultiPixStream2AXIvideo_U0_ap_ready,
        out420_dout => out420_dout,
        out420_num_data_valid => out420_num_data_valid,
        out420_fifo_cap => out420_fifo_cap,
        out420_empty_n => out420_empty_n,
        out420_read => MultiPixStream2AXIvideo_U0_out420_read,
        m_axis_video_TDATA => MultiPixStream2AXIvideo_U0_m_axis_video_TDATA,
        m_axis_video_TVALID => MultiPixStream2AXIvideo_U0_m_axis_video_TVALID,
        m_axis_video_TREADY => m_axis_video_TREADY,
        m_axis_video_TKEEP => MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP,
        m_axis_video_TSTRB => MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB,
        m_axis_video_TUSER => MultiPixStream2AXIvideo_U0_m_axis_video_TUSER,
        m_axis_video_TLAST => MultiPixStream2AXIvideo_U0_m_axis_video_TLAST,
        m_axis_video_TID => MultiPixStream2AXIvideo_U0_m_axis_video_TID,
        m_axis_video_TDEST => MultiPixStream2AXIvideo_U0_m_axis_video_TDEST,
        HwReg_height_dout => HwReg_height_c_dout,
        HwReg_height_num_data_valid => HwReg_height_c_num_data_valid,
        HwReg_height_fifo_cap => HwReg_height_c_fifo_cap,
        HwReg_height_empty_n => HwReg_height_c_empty_n,
        HwReg_height_read => MultiPixStream2AXIvideo_U0_HwReg_height_read,
        HwReg_width_dout => HwReg_width_c_dout,
        HwReg_width_num_data_valid => HwReg_width_c_num_data_valid,
        HwReg_width_fifo_cap => HwReg_width_c_fifo_cap,
        HwReg_width_empty_n => HwReg_width_c_empty_n,
        HwReg_width_read => MultiPixStream2AXIvideo_U0_HwReg_width_read);

    HwReg_width_c42_U : component design_1_v_mix_0_0_fifo_w10_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_width_c42_din,
        if_full_n => HwReg_width_c42_full_n,
        if_write => entry_proc_U0_HwReg_width_c42_write,
        if_dout => HwReg_width_c42_dout,
        if_num_data_valid => HwReg_width_c42_num_data_valid,
        if_fifo_cap => HwReg_width_c42_fifo_cap,
        if_empty_n => HwReg_width_c42_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_width_read);

    HwReg_height_c46_U : component design_1_v_mix_0_0_fifo_w10_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_height_c46_din,
        if_full_n => HwReg_height_c46_full_n,
        if_write => entry_proc_U0_HwReg_height_c46_write,
        if_dout => HwReg_height_c46_dout,
        if_num_data_valid => HwReg_height_c46_num_data_valid,
        if_fifo_cap => HwReg_height_c46_fifo_cap,
        if_empty_n => HwReg_height_c46_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_height_read);

    HwReg_background_Y_R_c_U : component design_1_v_mix_0_0_fifo_w8_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_background_Y_R_c_din,
        if_full_n => HwReg_background_Y_R_c_full_n,
        if_write => entry_proc_U0_HwReg_background_Y_R_c_write,
        if_dout => HwReg_background_Y_R_c_dout,
        if_num_data_valid => HwReg_background_Y_R_c_num_data_valid,
        if_fifo_cap => HwReg_background_Y_R_c_fifo_cap,
        if_empty_n => HwReg_background_Y_R_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_background_Y_R_read);

    HwReg_background_U_G_c_U : component design_1_v_mix_0_0_fifo_w8_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_background_U_G_c_din,
        if_full_n => HwReg_background_U_G_c_full_n,
        if_write => entry_proc_U0_HwReg_background_U_G_c_write,
        if_dout => HwReg_background_U_G_c_dout,
        if_num_data_valid => HwReg_background_U_G_c_num_data_valid,
        if_fifo_cap => HwReg_background_U_G_c_fifo_cap,
        if_empty_n => HwReg_background_U_G_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_background_U_G_read);

    HwReg_background_V_B_c_U : component design_1_v_mix_0_0_fifo_w8_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_background_V_B_c_din,
        if_full_n => HwReg_background_V_B_c_full_n,
        if_write => entry_proc_U0_HwReg_background_V_B_c_write,
        if_dout => HwReg_background_V_B_c_dout,
        if_num_data_valid => HwReg_background_V_B_c_num_data_valid,
        if_fifo_cap => HwReg_background_V_B_c_fifo_cap,
        if_empty_n => HwReg_background_V_B_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_background_V_B_read);

    HwReg_layerEnable_c_U : component design_1_v_mix_0_0_fifo_w2_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_layerEnable_c_din,
        if_full_n => HwReg_layerEnable_c_full_n,
        if_write => entry_proc_U0_HwReg_layerEnable_c_write,
        if_dout => HwReg_layerEnable_c_dout,
        if_num_data_valid => HwReg_layerEnable_c_num_data_valid,
        if_fifo_cap => HwReg_layerEnable_c_fifo_cap,
        if_empty_n => HwReg_layerEnable_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_layerEnable_read);

    HwReg_layerAlpha_1_c_U : component design_1_v_mix_0_0_fifo_w10_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_layerAlpha_1_c_din,
        if_full_n => HwReg_layerAlpha_1_c_full_n,
        if_write => entry_proc_U0_HwReg_layerAlpha_1_c_write,
        if_dout => HwReg_layerAlpha_1_c_dout,
        if_num_data_valid => HwReg_layerAlpha_1_c_num_data_valid,
        if_fifo_cap => HwReg_layerAlpha_1_c_fifo_cap,
        if_empty_n => HwReg_layerAlpha_1_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_layerAlpha_1_read);

    HwReg_layerStartX_1_c_U : component design_1_v_mix_0_0_fifo_w16_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_layerStartX_1_c_din,
        if_full_n => HwReg_layerStartX_1_c_full_n,
        if_write => entry_proc_U0_HwReg_layerStartX_1_c_write,
        if_dout => HwReg_layerStartX_1_c_dout,
        if_num_data_valid => HwReg_layerStartX_1_c_num_data_valid,
        if_fifo_cap => HwReg_layerStartX_1_c_fifo_cap,
        if_empty_n => HwReg_layerStartX_1_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_layerStartX_1_read);

    HwReg_layerStartY_1_c_U : component design_1_v_mix_0_0_fifo_w16_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_layerStartY_1_c_din,
        if_full_n => HwReg_layerStartY_1_c_full_n,
        if_write => entry_proc_U0_HwReg_layerStartY_1_c_write,
        if_dout => HwReg_layerStartY_1_c_dout,
        if_num_data_valid => HwReg_layerStartY_1_c_num_data_valid,
        if_fifo_cap => HwReg_layerStartY_1_c_fifo_cap,
        if_empty_n => HwReg_layerStartY_1_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_layerStartY_1_read);

    HwReg_layerScaleFactor_1_c_U : component design_1_v_mix_0_0_fifo_w8_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_HwReg_layerScaleFactor_1_c_din,
        if_full_n => HwReg_layerScaleFactor_1_c_full_n,
        if_write => entry_proc_U0_HwReg_layerScaleFactor_1_c_write,
        if_dout => HwReg_layerScaleFactor_1_c_dout,
        if_num_data_valid => HwReg_layerScaleFactor_1_c_num_data_valid,
        if_fifo_cap => HwReg_layerScaleFactor_1_c_fifo_cap,
        if_empty_n => HwReg_layerScaleFactor_1_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_layerScaleFactor_1_read);

    srcLayer0_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2MultiPixStream_U0_srcLayer0_din,
        if_full_n => srcLayer0_full_n,
        if_write => AXIvideo2MultiPixStream_U0_srcLayer0_write,
        if_dout => srcLayer0_dout,
        if_num_data_valid => srcLayer0_num_data_valid,
        if_fifo_cap => srcLayer0_fifo_cap,
        if_empty_n => srcLayer0_empty_n,
        if_read => v_mix_420_to_422_false_U0_srcLayer0_read);

    p_read_c48_U : component design_1_v_mix_0_0_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2MultiPixStream_U0_p_read_c48_din,
        if_full_n => p_read_c48_full_n,
        if_write => AXIvideo2MultiPixStream_U0_p_read_c48_write,
        if_dout => p_read_c48_dout,
        if_num_data_valid => p_read_c48_num_data_valid,
        if_fifo_cap => p_read_c48_fifo_cap,
        if_empty_n => p_read_c48_empty_n,
        if_read => v_mix_420_to_422_false_U0_layerEnableFlag_read);

    srcLayer0Yuv422_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_420_to_422_false_U0_srcLayer0Yuv422_din,
        if_full_n => srcLayer0Yuv422_full_n,
        if_write => v_mix_420_to_422_false_U0_srcLayer0Yuv422_write,
        if_dout => srcLayer0Yuv422_dout,
        if_num_data_valid => srcLayer0Yuv422_num_data_valid,
        if_fifo_cap => srcLayer0Yuv422_fifo_cap,
        if_empty_n => srcLayer0Yuv422_empty_n,
        if_read => v_mix_422_to_444_false_U0_srcLayer0Yuv422_read);

    p_read_c47_U : component design_1_v_mix_0_0_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_420_to_422_false_U0_p_read_c47_din,
        if_full_n => p_read_c47_full_n,
        if_write => v_mix_420_to_422_false_U0_p_read_c47_write,
        if_dout => p_read_c47_dout,
        if_num_data_valid => p_read_c47_num_data_valid,
        if_fifo_cap => p_read_c47_fifo_cap,
        if_empty_n => p_read_c47_empty_n,
        if_read => v_mix_422_to_444_false_U0_layerEnableFlag_read);

    srcLayer0Yuv_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_444_false_U0_srcLayer0Yuv_din,
        if_full_n => srcLayer0Yuv_full_n,
        if_write => v_mix_422_to_444_false_U0_srcLayer0Yuv_write,
        if_dout => srcLayer0Yuv_dout,
        if_num_data_valid => srcLayer0Yuv_num_data_valid,
        if_fifo_cap => srcLayer0Yuv_fifo_cap,
        if_empty_n => srcLayer0Yuv_empty_n,
        if_read => v_mix_yuv2rgb_false_U0_srcLayer0Yuv_read);

    p_read_c_U : component design_1_v_mix_0_0_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_444_false_U0_p_read_c_din,
        if_full_n => p_read_c_full_n,
        if_write => v_mix_422_to_444_false_U0_p_read_c_write,
        if_dout => p_read_c_dout,
        if_num_data_valid => p_read_c_num_data_valid,
        if_fifo_cap => p_read_c_fifo_cap,
        if_empty_n => p_read_c_empty_n,
        if_read => v_mix_yuv2rgb_false_U0_layerEnableFlag_read);

    outLayer0_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_yuv2rgb_false_U0_outLayer0_din,
        if_full_n => outLayer0_full_n,
        if_write => v_mix_yuv2rgb_false_U0_outLayer0_write,
        if_dout => outLayer0_dout,
        if_num_data_valid => outLayer0_num_data_valid,
        if_fifo_cap => outLayer0_fifo_cap,
        if_empty_n => outLayer0_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_outLayer0_read);

    srcLayer1_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideoAlpha2MultiPixStream_U0_srcLayer1_din,
        if_full_n => srcLayer1_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_srcLayer1_write,
        if_dout => srcLayer1_dout,
        if_num_data_valid => srcLayer1_num_data_valid,
        if_fifo_cap => srcLayer1_fifo_cap,
        if_empty_n => srcLayer1_empty_n,
        if_read => v_mix_420_to_422_false_1_U0_srcLayer1_read);

    srcLayer1Alpha_U : component design_1_v_mix_0_0_fifo_w8_d16_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideoAlpha2MultiPixStream_U0_srcLayer1Alpha_din,
        if_full_n => srcLayer1Alpha_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_srcLayer1Alpha_write,
        if_dout => srcLayer1Alpha_dout,
        if_num_data_valid => srcLayer1Alpha_num_data_valid,
        if_fifo_cap => srcLayer1Alpha_fifo_cap,
        if_empty_n => srcLayer1Alpha_empty_n,
        if_read => v_mix_upsample_alpha_false_U0_srcLayer1Alpha_read);

    p_read1_c_U : component design_1_v_mix_0_0_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideoAlpha2MultiPixStream_U0_p_read1_c_din,
        if_full_n => p_read1_c_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_p_read1_c_write,
        if_dout => p_read1_c_dout,
        if_num_data_valid => p_read1_c_num_data_valid,
        if_fifo_cap => p_read1_c_fifo_cap,
        if_empty_n => p_read1_c_empty_n,
        if_read => v_mix_upsample_alpha_false_U0_p_read1_read);

    p_read1_c52_U : component design_1_v_mix_0_0_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideoAlpha2MultiPixStream_U0_p_read1_c52_din,
        if_full_n => p_read1_c52_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_p_read1_c52_write,
        if_dout => p_read1_c52_dout,
        if_num_data_valid => p_read1_c52_num_data_valid,
        if_fifo_cap => p_read1_c52_fifo_cap,
        if_empty_n => p_read1_c52_empty_n,
        if_read => v_mix_420_to_422_false_1_U0_p_read1_read);

    HwReg_layerWidth_1_c53_U : component design_1_v_mix_0_0_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c53_din,
        if_full_n => HwReg_layerWidth_1_c53_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c53_write,
        if_dout => HwReg_layerWidth_1_c53_dout,
        if_num_data_valid => HwReg_layerWidth_1_c53_num_data_valid,
        if_fifo_cap => HwReg_layerWidth_1_c53_fifo_cap,
        if_empty_n => HwReg_layerWidth_1_c53_empty_n,
        if_read => v_mix_upsample_alpha_false_U0_HwReg_layerWidth_1_read);

    HwReg_layerWidth_1_c57_U : component design_1_v_mix_0_0_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c57_din,
        if_full_n => HwReg_layerWidth_1_c57_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerWidth_1_c57_write,
        if_dout => HwReg_layerWidth_1_c57_dout,
        if_num_data_valid => HwReg_layerWidth_1_c57_num_data_valid,
        if_fifo_cap => HwReg_layerWidth_1_c57_fifo_cap,
        if_empty_n => HwReg_layerWidth_1_c57_empty_n,
        if_read => v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_read);

    HwReg_layerHeight_1_c58_U : component design_1_v_mix_0_0_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c58_din,
        if_full_n => HwReg_layerHeight_1_c58_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c58_write,
        if_dout => HwReg_layerHeight_1_c58_dout,
        if_num_data_valid => HwReg_layerHeight_1_c58_num_data_valid,
        if_fifo_cap => HwReg_layerHeight_1_c58_fifo_cap,
        if_empty_n => HwReg_layerHeight_1_c58_empty_n,
        if_read => v_mix_upsample_alpha_false_U0_HwReg_layerHeight_1_read);

    HwReg_layerHeight_1_c62_U : component design_1_v_mix_0_0_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c62_din,
        if_full_n => HwReg_layerHeight_1_c62_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_HwReg_layerHeight_1_c62_write,
        if_dout => HwReg_layerHeight_1_c62_dout,
        if_num_data_valid => HwReg_layerHeight_1_c62_num_data_valid,
        if_fifo_cap => HwReg_layerHeight_1_c62_fifo_cap,
        if_empty_n => HwReg_layerHeight_1_c62_empty_n,
        if_read => v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_read);

    srcLayer1Yuv422_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_420_to_422_false_1_U0_srcLayer1Yuv422_din,
        if_full_n => srcLayer1Yuv422_full_n,
        if_write => v_mix_420_to_422_false_1_U0_srcLayer1Yuv422_write,
        if_dout => srcLayer1Yuv422_dout,
        if_num_data_valid => srcLayer1Yuv422_num_data_valid,
        if_fifo_cap => srcLayer1Yuv422_fifo_cap,
        if_empty_n => srcLayer1Yuv422_empty_n,
        if_read => v_mix_422_to_444_false_2_U0_srcLayer1Yuv422_read);

    p_read1_c51_U : component design_1_v_mix_0_0_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_420_to_422_false_1_U0_p_read1_c51_din,
        if_full_n => p_read1_c51_full_n,
        if_write => v_mix_420_to_422_false_1_U0_p_read1_c51_write,
        if_dout => p_read1_c51_dout,
        if_num_data_valid => p_read1_c51_num_data_valid,
        if_fifo_cap => p_read1_c51_fifo_cap,
        if_empty_n => p_read1_c51_empty_n,
        if_read => v_mix_422_to_444_false_2_U0_p_read1_read);

    HwReg_layerWidth_1_c56_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_c56_din,
        if_full_n => HwReg_layerWidth_1_c56_full_n,
        if_write => v_mix_420_to_422_false_1_U0_HwReg_layerWidth_1_c56_write,
        if_dout => HwReg_layerWidth_1_c56_dout,
        if_num_data_valid => HwReg_layerWidth_1_c56_num_data_valid,
        if_fifo_cap => HwReg_layerWidth_1_c56_fifo_cap,
        if_empty_n => HwReg_layerWidth_1_c56_empty_n,
        if_read => v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_read);

    HwReg_layerHeight_1_c61_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_c61_din,
        if_full_n => HwReg_layerHeight_1_c61_full_n,
        if_write => v_mix_420_to_422_false_1_U0_HwReg_layerHeight_1_c61_write,
        if_dout => HwReg_layerHeight_1_c61_dout,
        if_num_data_valid => HwReg_layerHeight_1_c61_num_data_valid,
        if_fifo_cap => HwReg_layerHeight_1_c61_fifo_cap,
        if_empty_n => HwReg_layerHeight_1_c61_empty_n,
        if_read => v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_read);

    srcLayer1Yuv_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_444_false_2_U0_srcLayer1Yuv_din,
        if_full_n => srcLayer1Yuv_full_n,
        if_write => v_mix_422_to_444_false_2_U0_srcLayer1Yuv_write,
        if_dout => srcLayer1Yuv_dout,
        if_num_data_valid => srcLayer1Yuv_num_data_valid,
        if_fifo_cap => srcLayer1Yuv_fifo_cap,
        if_empty_n => srcLayer1Yuv_empty_n,
        if_read => v_mix_yuv2rgb_false_3_U0_srcLayer1Yuv_read);

    p_read1_c50_U : component design_1_v_mix_0_0_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_444_false_2_U0_p_read1_c50_din,
        if_full_n => p_read1_c50_full_n,
        if_write => v_mix_422_to_444_false_2_U0_p_read1_c50_write,
        if_dout => p_read1_c50_dout,
        if_num_data_valid => p_read1_c50_num_data_valid,
        if_fifo_cap => p_read1_c50_fifo_cap,
        if_empty_n => p_read1_c50_empty_n,
        if_read => v_mix_yuv2rgb_false_3_U0_p_read1_read);

    HwReg_layerWidth_1_c55_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_c55_din,
        if_full_n => HwReg_layerWidth_1_c55_full_n,
        if_write => v_mix_422_to_444_false_2_U0_HwReg_layerWidth_1_c55_write,
        if_dout => HwReg_layerWidth_1_c55_dout,
        if_num_data_valid => HwReg_layerWidth_1_c55_num_data_valid,
        if_fifo_cap => HwReg_layerWidth_1_c55_fifo_cap,
        if_empty_n => HwReg_layerWidth_1_c55_empty_n,
        if_read => v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_read);

    HwReg_layerHeight_1_c60_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_c60_din,
        if_full_n => HwReg_layerHeight_1_c60_full_n,
        if_write => v_mix_422_to_444_false_2_U0_HwReg_layerHeight_1_c60_write,
        if_dout => HwReg_layerHeight_1_c60_dout,
        if_num_data_valid => HwReg_layerHeight_1_c60_num_data_valid,
        if_fifo_cap => HwReg_layerHeight_1_c60_fifo_cap,
        if_empty_n => HwReg_layerHeight_1_c60_empty_n,
        if_read => v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_read);

    srcLayer1Rgb_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_yuv2rgb_false_3_U0_srcLayer1Rgb_din,
        if_full_n => srcLayer1Rgb_full_n,
        if_write => v_mix_yuv2rgb_false_3_U0_srcLayer1Rgb_write,
        if_dout => srcLayer1Rgb_dout,
        if_num_data_valid => srcLayer1Rgb_num_data_valid,
        if_fifo_cap => srcLayer1Rgb_fifo_cap,
        if_empty_n => srcLayer1Rgb_empty_n,
        if_read => v_mix_upsample_false_U0_srcLayer1Rgb_read);

    p_read1_c49_U : component design_1_v_mix_0_0_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_yuv2rgb_false_3_U0_p_read1_c49_din,
        if_full_n => p_read1_c49_full_n,
        if_write => v_mix_yuv2rgb_false_3_U0_p_read1_c49_write,
        if_dout => p_read1_c49_dout,
        if_num_data_valid => p_read1_c49_num_data_valid,
        if_fifo_cap => p_read1_c49_fifo_cap,
        if_empty_n => p_read1_c49_empty_n,
        if_read => v_mix_upsample_false_U0_p_read1_read);

    HwReg_layerWidth_1_c54_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_c54_din,
        if_full_n => HwReg_layerWidth_1_c54_full_n,
        if_write => v_mix_yuv2rgb_false_3_U0_HwReg_layerWidth_1_c54_write,
        if_dout => HwReg_layerWidth_1_c54_dout,
        if_num_data_valid => HwReg_layerWidth_1_c54_num_data_valid,
        if_fifo_cap => HwReg_layerWidth_1_c54_fifo_cap,
        if_empty_n => HwReg_layerWidth_1_c54_empty_n,
        if_read => v_mix_upsample_false_U0_HwReg_layerWidth_1_read);

    HwReg_layerHeight_1_c59_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_c59_din,
        if_full_n => HwReg_layerHeight_1_c59_full_n,
        if_write => v_mix_yuv2rgb_false_3_U0_HwReg_layerHeight_1_c59_write,
        if_dout => HwReg_layerHeight_1_c59_dout,
        if_num_data_valid => HwReg_layerHeight_1_c59_num_data_valid,
        if_fifo_cap => HwReg_layerHeight_1_c59_fifo_cap,
        if_empty_n => HwReg_layerHeight_1_c59_empty_n,
        if_read => v_mix_upsample_false_U0_HwReg_layerHeight_1_read);

    srcLayer1x_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_upsample_false_U0_srcLayer1x_din,
        if_full_n => srcLayer1x_full_n,
        if_write => v_mix_upsample_false_U0_srcLayer1x_write,
        if_dout => srcLayer1x_dout,
        if_num_data_valid => srcLayer1x_num_data_valid,
        if_fifo_cap => srcLayer1x_fifo_cap,
        if_empty_n => srcLayer1x_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_srcLayer1x_read);

    HwReg_layerWidth_1_c_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_upsample_false_U0_HwReg_layerWidth_1_c_din,
        if_full_n => HwReg_layerWidth_1_c_full_n,
        if_write => v_mix_upsample_false_U0_HwReg_layerWidth_1_c_write,
        if_dout => HwReg_layerWidth_1_c_dout,
        if_num_data_valid => HwReg_layerWidth_1_c_num_data_valid,
        if_fifo_cap => HwReg_layerWidth_1_c_fifo_cap,
        if_empty_n => HwReg_layerWidth_1_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_layerWidth_1_read);

    HwReg_layerHeight_1_c_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_upsample_false_U0_HwReg_layerHeight_1_c_din,
        if_full_n => HwReg_layerHeight_1_c_full_n,
        if_write => v_mix_upsample_false_U0_HwReg_layerHeight_1_c_write,
        if_dout => HwReg_layerHeight_1_c_dout,
        if_num_data_valid => HwReg_layerHeight_1_c_num_data_valid,
        if_fifo_cap => HwReg_layerHeight_1_c_fifo_cap,
        if_empty_n => HwReg_layerHeight_1_c_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_hwReg_layerHeight_1_read);

    srcLayer1Alphax_U : component design_1_v_mix_0_0_fifo_w8_d16_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_upsample_alpha_false_U0_srcLayer1Alphax_din,
        if_full_n => srcLayer1Alphax_full_n,
        if_write => v_mix_upsample_alpha_false_U0_srcLayer1Alphax_write,
        if_dout => srcLayer1Alphax_dout,
        if_num_data_valid => srcLayer1Alphax_num_data_valid,
        if_fifo_cap => srcLayer1Alphax_fifo_cap,
        if_empty_n => srcLayer1Alphax_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_srcLayer1Alphax_read);

    outLayer1_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_core_alpha_true_true_U0_outLayer1_din,
        if_full_n => outLayer1_full_n,
        if_write => v_mix_core_alpha_true_true_U0_outLayer1_write,
        if_dout => outLayer1_dout,
        if_num_data_valid => outLayer1_num_data_valid,
        if_fifo_cap => outLayer1_fifo_cap,
        if_empty_n => outLayer1_empty_n,
        if_read => v_mix_rgb2yuv_false_U0_outLayer1_read);

    HwReg_width_c41_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_core_alpha_true_true_U0_HwReg_width_c41_din,
        if_full_n => HwReg_width_c41_full_n,
        if_write => v_mix_core_alpha_true_true_U0_HwReg_width_c41_write,
        if_dout => HwReg_width_c41_dout,
        if_num_data_valid => HwReg_width_c41_num_data_valid,
        if_fifo_cap => HwReg_width_c41_fifo_cap,
        if_empty_n => HwReg_width_c41_empty_n,
        if_read => v_mix_rgb2yuv_false_U0_width_read);

    HwReg_height_c45_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_core_alpha_true_true_U0_HwReg_height_c45_din,
        if_full_n => HwReg_height_c45_full_n,
        if_write => v_mix_core_alpha_true_true_U0_HwReg_height_c45_write,
        if_dout => HwReg_height_c45_dout,
        if_num_data_valid => HwReg_height_c45_num_data_valid,
        if_fifo_cap => HwReg_height_c45_fifo_cap,
        if_empty_n => HwReg_height_c45_empty_n,
        if_read => v_mix_rgb2yuv_false_U0_height_read);

    outYuv_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_rgb2yuv_false_U0_outYuv_din,
        if_full_n => outYuv_full_n,
        if_write => v_mix_rgb2yuv_false_U0_outYuv_write,
        if_dout => outYuv_dout,
        if_num_data_valid => outYuv_num_data_valid,
        if_fifo_cap => outYuv_fifo_cap,
        if_empty_n => outYuv_empty_n,
        if_read => v_mix_444_to_422_false_U0_outYuv_read);

    HwReg_width_c40_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_rgb2yuv_false_U0_HwReg_width_c40_din,
        if_full_n => HwReg_width_c40_full_n,
        if_write => v_mix_rgb2yuv_false_U0_HwReg_width_c40_write,
        if_dout => HwReg_width_c40_dout,
        if_num_data_valid => HwReg_width_c40_num_data_valid,
        if_fifo_cap => HwReg_width_c40_fifo_cap,
        if_empty_n => HwReg_width_c40_empty_n,
        if_read => v_mix_444_to_422_false_U0_width_read);

    HwReg_height_c44_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_rgb2yuv_false_U0_HwReg_height_c44_din,
        if_full_n => HwReg_height_c44_full_n,
        if_write => v_mix_rgb2yuv_false_U0_HwReg_height_c44_write,
        if_dout => HwReg_height_c44_dout,
        if_num_data_valid => HwReg_height_c44_num_data_valid,
        if_fifo_cap => HwReg_height_c44_fifo_cap,
        if_empty_n => HwReg_height_c44_empty_n,
        if_read => v_mix_444_to_422_false_U0_height_read);

    out422_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_444_to_422_false_U0_out422_din,
        if_full_n => out422_full_n,
        if_write => v_mix_444_to_422_false_U0_out422_write,
        if_dout => out422_dout,
        if_num_data_valid => out422_num_data_valid,
        if_fifo_cap => out422_fifo_cap,
        if_empty_n => out422_empty_n,
        if_read => v_mix_422_to_420_false_U0_out422_read);

    HwReg_width_c39_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_444_to_422_false_U0_HwReg_width_c39_din,
        if_full_n => HwReg_width_c39_full_n,
        if_write => v_mix_444_to_422_false_U0_HwReg_width_c39_write,
        if_dout => HwReg_width_c39_dout,
        if_num_data_valid => HwReg_width_c39_num_data_valid,
        if_fifo_cap => HwReg_width_c39_fifo_cap,
        if_empty_n => HwReg_width_c39_empty_n,
        if_read => v_mix_422_to_420_false_U0_width_read);

    HwReg_height_c43_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_444_to_422_false_U0_HwReg_height_c43_din,
        if_full_n => HwReg_height_c43_full_n,
        if_write => v_mix_444_to_422_false_U0_HwReg_height_c43_write,
        if_dout => HwReg_height_c43_dout,
        if_num_data_valid => HwReg_height_c43_num_data_valid,
        if_fifo_cap => HwReg_height_c43_fifo_cap,
        if_empty_n => HwReg_height_c43_empty_n,
        if_read => v_mix_422_to_420_false_U0_height_read);

    out420_U : component design_1_v_mix_0_0_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_420_false_U0_out420_din,
        if_full_n => out420_full_n,
        if_write => v_mix_422_to_420_false_U0_out420_write,
        if_dout => out420_dout,
        if_num_data_valid => out420_num_data_valid,
        if_fifo_cap => out420_fifo_cap,
        if_empty_n => out420_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_out420_read);

    HwReg_width_c_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_420_false_U0_HwReg_width_c_din,
        if_full_n => HwReg_width_c_full_n,
        if_write => v_mix_422_to_420_false_U0_HwReg_width_c_write,
        if_dout => HwReg_width_c_dout,
        if_num_data_valid => HwReg_width_c_num_data_valid,
        if_fifo_cap => HwReg_width_c_fifo_cap,
        if_empty_n => HwReg_width_c_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_HwReg_width_read);

    HwReg_height_c_U : component design_1_v_mix_0_0_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v_mix_422_to_420_false_U0_HwReg_height_c_din,
        if_full_n => HwReg_height_c_full_n,
        if_write => v_mix_422_to_420_false_U0_HwReg_height_c_write,
        if_dout => HwReg_height_c_dout,
        if_num_data_valid => HwReg_height_c_num_data_valid,
        if_fifo_cap => HwReg_height_c_fifo_cap,
        if_empty_n => HwReg_height_c_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_HwReg_height_read);

    start_for_v_mix_core_alpha_true_true_U0_U : component design_1_v_mix_0_0_start_for_v_mix_core_alpha_true_true_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_core_alpha_true_true_U0_din,
        if_full_n => start_for_v_mix_core_alpha_true_true_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_v_mix_core_alpha_true_true_U0_dout,
        if_empty_n => start_for_v_mix_core_alpha_true_true_U0_empty_n,
        if_read => v_mix_core_alpha_true_true_U0_ap_ready);

    start_for_v_mix_420_to_422_false_U0_U : component design_1_v_mix_0_0_start_for_v_mix_420_to_422_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_420_to_422_false_U0_din,
        if_full_n => start_for_v_mix_420_to_422_false_U0_full_n,
        if_write => AXIvideo2MultiPixStream_U0_start_write,
        if_dout => start_for_v_mix_420_to_422_false_U0_dout,
        if_empty_n => start_for_v_mix_420_to_422_false_U0_empty_n,
        if_read => v_mix_420_to_422_false_U0_ap_ready);

    start_for_v_mix_422_to_444_false_U0_U : component design_1_v_mix_0_0_start_for_v_mix_422_to_444_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_422_to_444_false_U0_din,
        if_full_n => start_for_v_mix_422_to_444_false_U0_full_n,
        if_write => v_mix_420_to_422_false_U0_start_write,
        if_dout => start_for_v_mix_422_to_444_false_U0_dout,
        if_empty_n => start_for_v_mix_422_to_444_false_U0_empty_n,
        if_read => v_mix_422_to_444_false_U0_ap_ready);

    start_for_v_mix_yuv2rgb_false_U0_U : component design_1_v_mix_0_0_start_for_v_mix_yuv2rgb_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_yuv2rgb_false_U0_din,
        if_full_n => start_for_v_mix_yuv2rgb_false_U0_full_n,
        if_write => v_mix_422_to_444_false_U0_start_write,
        if_dout => start_for_v_mix_yuv2rgb_false_U0_dout,
        if_empty_n => start_for_v_mix_yuv2rgb_false_U0_empty_n,
        if_read => v_mix_yuv2rgb_false_U0_ap_ready);

    start_for_v_mix_420_to_422_false_1_U0_U : component design_1_v_mix_0_0_start_for_v_mix_420_to_422_false_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_420_to_422_false_1_U0_din,
        if_full_n => start_for_v_mix_420_to_422_false_1_U0_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_start_write,
        if_dout => start_for_v_mix_420_to_422_false_1_U0_dout,
        if_empty_n => start_for_v_mix_420_to_422_false_1_U0_empty_n,
        if_read => v_mix_420_to_422_false_1_U0_ap_ready);

    start_for_v_mix_upsample_alpha_false_U0_U : component design_1_v_mix_0_0_start_for_v_mix_upsample_alpha_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_upsample_alpha_false_U0_din,
        if_full_n => start_for_v_mix_upsample_alpha_false_U0_full_n,
        if_write => AXIvideoAlpha2MultiPixStream_U0_start_write,
        if_dout => start_for_v_mix_upsample_alpha_false_U0_dout,
        if_empty_n => start_for_v_mix_upsample_alpha_false_U0_empty_n,
        if_read => v_mix_upsample_alpha_false_U0_ap_ready);

    start_for_v_mix_422_to_444_false_2_U0_U : component design_1_v_mix_0_0_start_for_v_mix_422_to_444_false_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_422_to_444_false_2_U0_din,
        if_full_n => start_for_v_mix_422_to_444_false_2_U0_full_n,
        if_write => v_mix_420_to_422_false_1_U0_start_write,
        if_dout => start_for_v_mix_422_to_444_false_2_U0_dout,
        if_empty_n => start_for_v_mix_422_to_444_false_2_U0_empty_n,
        if_read => v_mix_422_to_444_false_2_U0_ap_ready);

    start_for_v_mix_yuv2rgb_false_3_U0_U : component design_1_v_mix_0_0_start_for_v_mix_yuv2rgb_false_3_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_yuv2rgb_false_3_U0_din,
        if_full_n => start_for_v_mix_yuv2rgb_false_3_U0_full_n,
        if_write => v_mix_422_to_444_false_2_U0_start_write,
        if_dout => start_for_v_mix_yuv2rgb_false_3_U0_dout,
        if_empty_n => start_for_v_mix_yuv2rgb_false_3_U0_empty_n,
        if_read => v_mix_yuv2rgb_false_3_U0_ap_ready);

    start_for_v_mix_upsample_false_U0_U : component design_1_v_mix_0_0_start_for_v_mix_upsample_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_upsample_false_U0_din,
        if_full_n => start_for_v_mix_upsample_false_U0_full_n,
        if_write => v_mix_yuv2rgb_false_3_U0_start_write,
        if_dout => start_for_v_mix_upsample_false_U0_dout,
        if_empty_n => start_for_v_mix_upsample_false_U0_empty_n,
        if_read => v_mix_upsample_false_U0_ap_ready);

    start_for_v_mix_rgb2yuv_false_U0_U : component design_1_v_mix_0_0_start_for_v_mix_rgb2yuv_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_rgb2yuv_false_U0_din,
        if_full_n => start_for_v_mix_rgb2yuv_false_U0_full_n,
        if_write => v_mix_core_alpha_true_true_U0_start_write,
        if_dout => start_for_v_mix_rgb2yuv_false_U0_dout,
        if_empty_n => start_for_v_mix_rgb2yuv_false_U0_empty_n,
        if_read => v_mix_rgb2yuv_false_U0_ap_ready);

    start_for_v_mix_444_to_422_false_U0_U : component design_1_v_mix_0_0_start_for_v_mix_444_to_422_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_444_to_422_false_U0_din,
        if_full_n => start_for_v_mix_444_to_422_false_U0_full_n,
        if_write => v_mix_rgb2yuv_false_U0_start_write,
        if_dout => start_for_v_mix_444_to_422_false_U0_dout,
        if_empty_n => start_for_v_mix_444_to_422_false_U0_empty_n,
        if_read => v_mix_444_to_422_false_U0_ap_ready);

    start_for_v_mix_422_to_420_false_U0_U : component design_1_v_mix_0_0_start_for_v_mix_422_to_420_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v_mix_422_to_420_false_U0_din,
        if_full_n => start_for_v_mix_422_to_420_false_U0_full_n,
        if_write => v_mix_444_to_422_false_U0_start_write,
        if_dout => start_for_v_mix_422_to_420_false_U0_dout,
        if_empty_n => start_for_v_mix_422_to_420_false_U0_empty_n,
        if_read => v_mix_422_to_420_false_U0_ap_ready);

    start_for_MultiPixStream2AXIvideo_U0_U : component design_1_v_mix_0_0_start_for_MultiPixStream2AXIvideo_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_MultiPixStream2AXIvideo_U0_din,
        if_full_n => start_for_MultiPixStream2AXIvideo_U0_full_n,
        if_write => v_mix_422_to_420_false_U0_start_write,
        if_dout => start_for_MultiPixStream2AXIvideo_U0_dout,
        if_empty_n => start_for_MultiPixStream2AXIvideo_U0_empty_n,
        if_read => MultiPixStream2AXIvideo_U0_ap_ready);





    ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready <= ap_sync_AXIvideo2MultiPixStream_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_AXIvideoAlpha2MultiPixStream_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_AXIvideoAlpha2MultiPixStream_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideoAlpha2MultiPixStream_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideoAlpha2MultiPixStream_U0_ap_ready <= ap_sync_AXIvideoAlpha2MultiPixStream_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_entry_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    AXIvideo2MultiPixStream_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2MultiPixStream_U0_ap_start <= ((ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready xor ap_const_logic_1) and ap_start);
    AXIvideoAlpha2MultiPixStream_U0_ap_continue <= ap_const_logic_1;
    AXIvideoAlpha2MultiPixStream_U0_ap_start <= ((ap_sync_reg_AXIvideoAlpha2MultiPixStream_U0_ap_ready xor ap_const_logic_1) and ap_start);
    AXIvideoAlpha2MultiPixStream_U0_start_full_n <= (start_for_v_mix_upsample_alpha_false_U0_full_n and start_for_v_mix_420_to_422_false_1_U0_full_n);
    MultiPixStream2AXIvideo_U0_ap_continue <= ap_continue;
    MultiPixStream2AXIvideo_U0_ap_start <= start_for_MultiPixStream2AXIvideo_U0_empty_n;
    ap_done <= MultiPixStream2AXIvideo_U0_ap_done;
    ap_idle <= (v_mix_yuv2rgb_false_U0_ap_idle and v_mix_yuv2rgb_false_3_U0_ap_idle and v_mix_upsample_false_U0_ap_idle and v_mix_upsample_alpha_false_U0_ap_idle and v_mix_rgb2yuv_false_U0_ap_idle and v_mix_core_alpha_true_true_U0_ap_idle and v_mix_444_to_422_false_U0_ap_idle and v_mix_422_to_444_false_U0_ap_idle and v_mix_422_to_444_false_2_U0_ap_idle and v_mix_422_to_420_false_U0_ap_idle and v_mix_420_to_422_false_U0_ap_idle and v_mix_420_to_422_false_1_U0_ap_idle and entry_proc_U0_ap_idle and MultiPixStream2AXIvideo_U0_ap_idle and AXIvideoAlpha2MultiPixStream_U0_ap_idle and AXIvideo2MultiPixStream_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_AXIvideo2MultiPixStream_U0_ap_ready <= (ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready or AXIvideo2MultiPixStream_U0_ap_ready);
    ap_sync_AXIvideoAlpha2MultiPixStream_U0_ap_ready <= (ap_sync_reg_AXIvideoAlpha2MultiPixStream_U0_ap_ready or AXIvideoAlpha2MultiPixStream_U0_ap_ready);
    ap_sync_entry_proc_U0_ap_ready <= (entry_proc_U0_ap_ready or ap_sync_reg_entry_proc_U0_ap_ready);
    ap_sync_ready <= (ap_sync_entry_proc_U0_ap_ready and ap_sync_AXIvideoAlpha2MultiPixStream_U0_ap_ready and ap_sync_AXIvideo2MultiPixStream_U0_ap_ready);
    entry_proc_U0_ap_continue <= ap_const_logic_1;
    entry_proc_U0_ap_start <= ((ap_sync_reg_entry_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    m_axis_video_TDATA <= MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;
    m_axis_video_TDEST <= MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;
    m_axis_video_TID <= MultiPixStream2AXIvideo_U0_m_axis_video_TID;
    m_axis_video_TKEEP <= MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;
    m_axis_video_TLAST <= MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;
    m_axis_video_TSTRB <= MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;
    m_axis_video_TUSER <= MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;
    m_axis_video_TVALID <= MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;
    s_axis_video1_TREADY <= AXIvideoAlpha2MultiPixStream_U0_s_axis_video1_TREADY;
    s_axis_video_TREADY <= AXIvideo2MultiPixStream_U0_s_axis_video_TREADY;
    start_for_MultiPixStream2AXIvideo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_420_to_422_false_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_420_to_422_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_422_to_420_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_422_to_444_false_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_422_to_444_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_444_to_422_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_core_alpha_true_true_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_rgb2yuv_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_upsample_alpha_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_upsample_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_yuv2rgb_false_3_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_v_mix_yuv2rgb_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    v_mix_420_to_422_false_1_U0_ap_continue <= ap_const_logic_1;
    v_mix_420_to_422_false_1_U0_ap_start <= start_for_v_mix_420_to_422_false_1_U0_empty_n;
    v_mix_420_to_422_false_U0_ap_continue <= ap_const_logic_1;
    v_mix_420_to_422_false_U0_ap_start <= start_for_v_mix_420_to_422_false_U0_empty_n;
    v_mix_422_to_420_false_U0_ap_continue <= ap_const_logic_1;
    v_mix_422_to_420_false_U0_ap_start <= start_for_v_mix_422_to_420_false_U0_empty_n;
    v_mix_422_to_444_false_2_U0_ap_continue <= ap_const_logic_1;
    v_mix_422_to_444_false_2_U0_ap_start <= start_for_v_mix_422_to_444_false_2_U0_empty_n;
    v_mix_422_to_444_false_U0_ap_continue <= ap_const_logic_1;
    v_mix_422_to_444_false_U0_ap_start <= start_for_v_mix_422_to_444_false_U0_empty_n;
    v_mix_444_to_422_false_U0_ap_continue <= ap_const_logic_1;
    v_mix_444_to_422_false_U0_ap_start <= start_for_v_mix_444_to_422_false_U0_empty_n;
    v_mix_core_alpha_true_true_U0_ap_continue <= ap_const_logic_1;
    v_mix_core_alpha_true_true_U0_ap_start <= start_for_v_mix_core_alpha_true_true_U0_empty_n;
    v_mix_rgb2yuv_false_U0_ap_continue <= ap_const_logic_1;
    v_mix_rgb2yuv_false_U0_ap_start <= start_for_v_mix_rgb2yuv_false_U0_empty_n;
    v_mix_upsample_alpha_false_U0_ap_continue <= ap_const_logic_1;
    v_mix_upsample_alpha_false_U0_ap_start <= start_for_v_mix_upsample_alpha_false_U0_empty_n;
    v_mix_upsample_false_U0_ap_continue <= ap_const_logic_1;
    v_mix_upsample_false_U0_ap_start <= start_for_v_mix_upsample_false_U0_empty_n;
    v_mix_yuv2rgb_false_3_U0_ap_continue <= ap_const_logic_1;
    v_mix_yuv2rgb_false_3_U0_ap_start <= start_for_v_mix_yuv2rgb_false_3_U0_empty_n;
    v_mix_yuv2rgb_false_U0_ap_continue <= ap_const_logic_1;
    v_mix_yuv2rgb_false_U0_ap_start <= start_for_v_mix_yuv2rgb_false_U0_empty_n;
end behav;
