-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_mix_0_0_v_mix_yuv2rgb_false_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    srcLayer1Yuv_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    srcLayer1Yuv_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    srcLayer1Yuv_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    srcLayer1Yuv_empty_n : IN STD_LOGIC;
    srcLayer1Yuv_read : OUT STD_LOGIC;
    HwReg_layerHeight_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    HwReg_layerHeight_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_layerHeight_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_layerHeight_1_empty_n : IN STD_LOGIC;
    HwReg_layerHeight_1_read : OUT STD_LOGIC;
    HwReg_layerWidth_1_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    HwReg_layerWidth_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_layerWidth_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_layerWidth_1_empty_n : IN STD_LOGIC;
    HwReg_layerWidth_1_read : OUT STD_LOGIC;
    p_read1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    p_read1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    p_read1_empty_n : IN STD_LOGIC;
    p_read1_read : OUT STD_LOGIC;
    srcLayer1Rgb_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    srcLayer1Rgb_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    srcLayer1Rgb_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    srcLayer1Rgb_full_n : IN STD_LOGIC;
    srcLayer1Rgb_write : OUT STD_LOGIC;
    p_read1_c49_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_read1_c49_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    p_read1_c49_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    p_read1_c49_full_n : IN STD_LOGIC;
    p_read1_c49_write : OUT STD_LOGIC;
    HwReg_layerWidth_1_c54_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    HwReg_layerWidth_1_c54_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_layerWidth_1_c54_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_layerWidth_1_c54_full_n : IN STD_LOGIC;
    HwReg_layerWidth_1_c54_write : OUT STD_LOGIC;
    HwReg_layerHeight_1_c59_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    HwReg_layerHeight_1_c59_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_layerHeight_1_c59_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    HwReg_layerHeight_1_c59_full_n : IN STD_LOGIC;
    HwReg_layerHeight_1_c59_write : OUT STD_LOGIC );
end;


architecture behav of design_1_v_mix_0_0_v_mix_yuv2rgb_false_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal HwReg_layerHeight_1_blk_n : STD_LOGIC;
    signal HwReg_layerWidth_1_blk_n : STD_LOGIC;
    signal p_read1_blk_n : STD_LOGIC;
    signal p_read1_c49_blk_n : STD_LOGIC;
    signal HwReg_layerWidth_1_c54_blk_n : STD_LOGIC;
    signal HwReg_layerHeight_1_c59_blk_n : STD_LOGIC;
    signal HwReg_layerHeight_1_read_reg_143 : STD_LOGIC_VECTOR (9 downto 0);
    signal HwReg_layerWidth_1_read_reg_148 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_read_read_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read_reg_153 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start : STD_LOGIC;
    signal grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_done : STD_LOGIC;
    signal grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_idle : STD_LOGIC;
    signal grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_ready : STD_LOGIC;
    signal grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Yuv_read : STD_LOGIC;
    signal grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Rgb_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Rgb_write : STD_LOGIC;
    signal grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln854_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal y_fu_64 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_2_fu_132_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_mix_0_0_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        srcLayer1Yuv_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1Yuv_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Yuv_empty_n : IN STD_LOGIC;
        srcLayer1Yuv_read : OUT STD_LOGIC;
        srcLayer1Rgb_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcLayer1Rgb_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Rgb_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcLayer1Rgb_full_n : IN STD_LOGIC;
        srcLayer1Rgb_write : OUT STD_LOGIC;
        HwReg_layerWidth_1_load : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110 : component design_1_v_mix_0_0_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start,
        ap_done => grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_done,
        ap_idle => grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_idle,
        ap_ready => grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_ready,
        srcLayer1Yuv_dout => srcLayer1Yuv_dout,
        srcLayer1Yuv_num_data_valid => ap_const_lv2_0,
        srcLayer1Yuv_fifo_cap => ap_const_lv2_0,
        srcLayer1Yuv_empty_n => srcLayer1Yuv_empty_n,
        srcLayer1Yuv_read => grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Yuv_read,
        srcLayer1Rgb_din => grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Rgb_din,
        srcLayer1Rgb_num_data_valid => ap_const_lv2_0,
        srcLayer1Rgb_fifo_cap => ap_const_lv2_0,
        srcLayer1Rgb_full_n => srcLayer1Rgb_full_n,
        srcLayer1Rgb_write => grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Rgb_write,
        HwReg_layerWidth_1_load => HwReg_layerWidth_1_read_reg_148);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln854_fu_127_p2 = ap_const_lv1_1) or (p_read_reg_153 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln854_fu_127_p2 = ap_const_lv1_0) and (p_read_reg_153 = ap_const_lv1_1))) then 
                    grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_ready = ap_const_logic_1)) then 
                    grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    y_fu_64_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read_read_fu_96_p2 = ap_const_lv1_1))) then 
                y_fu_64 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln854_fu_127_p2 = ap_const_lv1_0) and (p_read_reg_153 = ap_const_lv1_1))) then 
                y_fu_64 <= y_2_fu_132_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                HwReg_layerHeight_1_read_reg_143 <= HwReg_layerHeight_1_dout;
                HwReg_layerWidth_1_read_reg_148 <= HwReg_layerWidth_1_dout;
                p_read_reg_153 <= p_read1_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n, p_read_reg_153, grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_done, ap_CS_fsm_state2, icmp_ln854_fu_127_p2, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln854_fu_127_p2 = ap_const_lv1_1) or (p_read_reg_153 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    HwReg_layerHeight_1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerHeight_1_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_layerHeight_1_blk_n <= HwReg_layerHeight_1_empty_n;
        else 
            HwReg_layerHeight_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    HwReg_layerHeight_1_c59_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerHeight_1_c59_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_layerHeight_1_c59_blk_n <= HwReg_layerHeight_1_c59_full_n;
        else 
            HwReg_layerHeight_1_c59_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_layerHeight_1_c59_din <= HwReg_layerHeight_1_dout;

    HwReg_layerHeight_1_c59_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_layerHeight_1_c59_write <= ap_const_logic_1;
        else 
            HwReg_layerHeight_1_c59_write <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_layerHeight_1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_layerHeight_1_read <= ap_const_logic_1;
        else 
            HwReg_layerHeight_1_read <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_layerWidth_1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerWidth_1_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_layerWidth_1_blk_n <= HwReg_layerWidth_1_empty_n;
        else 
            HwReg_layerWidth_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    HwReg_layerWidth_1_c54_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerWidth_1_c54_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_layerWidth_1_c54_blk_n <= HwReg_layerWidth_1_c54_full_n;
        else 
            HwReg_layerWidth_1_c54_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_layerWidth_1_c54_din <= HwReg_layerWidth_1_dout;

    HwReg_layerWidth_1_c54_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_layerWidth_1_c54_write <= ap_const_logic_1;
        else 
            HwReg_layerWidth_1_c54_write <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_layerWidth_1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_layerWidth_1_read <= ap_const_logic_1;
        else 
            HwReg_layerWidth_1_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n)
    begin
        if (((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_done)
    begin
        if ((grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, p_read_reg_153, ap_CS_fsm_state2, icmp_ln854_fu_127_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln854_fu_127_p2 = ap_const_lv1_1) or (p_read_reg_153 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start <= grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_ap_start_reg;
    icmp_ln854_fu_127_p2 <= "1" when (y_fu_64 = HwReg_layerHeight_1_read_reg_143) else "0";

    internal_ap_ready_assign_proc : process(p_read_reg_153, ap_CS_fsm_state2, icmp_ln854_fu_127_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln854_fu_127_p2 = ap_const_lv1_1) or (p_read_reg_153 = ap_const_lv1_0)))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    p_read1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_read1_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_read1_blk_n <= p_read1_empty_n;
        else 
            p_read1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_read1_c49_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_read1_c49_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_read1_c49_blk_n <= p_read1_c49_full_n;
        else 
            p_read1_c49_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_read1_c49_din <= p_read1_dout;

    p_read1_c49_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_read1_c49_write <= ap_const_logic_1;
        else 
            p_read1_c49_write <= ap_const_logic_0;
        end if; 
    end process;


    p_read1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_layerHeight_1_empty_n, HwReg_layerWidth_1_empty_n, p_read1_empty_n, p_read1_c49_full_n, HwReg_layerWidth_1_c54_full_n, HwReg_layerHeight_1_c59_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (p_read1_c49_full_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (ap_const_logic_0 = HwReg_layerHeight_1_c59_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_c54_full_n) or (ap_const_logic_0 = HwReg_layerWidth_1_empty_n) or (ap_const_logic_0 = HwReg_layerHeight_1_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_read1_read <= ap_const_logic_1;
        else 
            p_read1_read <= ap_const_logic_0;
        end if; 
    end process;

    p_read_read_fu_96_p2 <= p_read1_dout;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    srcLayer1Rgb_din <= grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Rgb_din;

    srcLayer1Rgb_write_assign_proc : process(grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Rgb_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            srcLayer1Rgb_write <= grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Rgb_write;
        else 
            srcLayer1Rgb_write <= ap_const_logic_0;
        end if; 
    end process;


    srcLayer1Yuv_read_assign_proc : process(grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Yuv_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            srcLayer1Yuv_read <= grp_v_mix_yuv2rgb_false_3_Pipeline_VITIS_LOOP_856_2_fu_110_srcLayer1Yuv_read;
        else 
            srcLayer1Yuv_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    y_2_fu_132_p2 <= std_logic_vector(unsigned(y_fu_64) + unsigned(ap_const_lv10_1));
end behav;
